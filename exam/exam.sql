-- phpMyAdmin SQL Dump
-- version 4.9.5deb2
-- https://www.phpmyadmin.net/
--
-- Host: localhost:3306
-- Generation Time: Apr 05, 2021 at 08:00 AM
-- Server version: 8.0.23-0ubuntu0.20.04.1
-- PHP Version: 7.4.3

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
SET AUTOCOMMIT = 0;
START TRANSACTION;
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- Database: `exam`
--

-- --------------------------------------------------------

--
-- Table structure for table `choice`
--

CREATE TABLE `choice` (
  `id` int NOT NULL,
  `q_id` int DEFAULT NULL,
  `choice` text CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci,
  `correct` int DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

--
-- Dumping data for table `choice`
--

INSERT INTO `choice` (`id`, `q_id`, `choice`, `correct`) VALUES
(1, 1, 'Round Robin', 0),
(2, 1, 'First-In First-Out', 1),
(3, 1, 'Multilevel Queue Scheduling', 0),
(4, 1, 'Multilevel Queue Scheduling with Feedback', 0),
(5, 2, 'A device', 0),
(6, 2, 'Timer', 0),
(7, 2, 'Schedular Process', 1),
(8, 2, 'Power Failure', 0),
(9, 3, 'One which is enclosed by a pair of P and V operations on semaphors', 0),
(10, 3, 'A program segment that has not been proved bug-free', 0),
(11, 3, 'A program segment then often causes unexpected system crashes', 0),
(12, 3, 'A program segment where shared resources are accessed', 1),
(13, 4, '19', 0),
(14, 4, '39', 0),
(15, 4, '29', 1),
(16, 4, '09', 0),
(17, 5, '0.08', 1),
(18, 5, '0.01', 0),
(19, 5, '1', 0),
(20, 5, '8', 0),
(21, 6, 'I, II and IV', 0),
(22, 6, 'I, III and IV', 0),
(23, 6, 'II, III and IV', 0),
(24, 6, 'I, II and III', 1),
(25, 7, 'O(n)', 0),
(26, 7, 'O(n log n)', 0),
(27, 7, 'Ω(n<sup>2</sup> log n)', 0),
(28, 7, 'O(n<sup>2</sup>)', 1),
(29, 8, 'I only', 0),
(30, 8, 'II only', 0),
(31, 8, 'Both I and II', 1),
(32, 8, 'Neither I nor II', 0),
(33, 9, '⦵(log<sub>a</sub> log<sub>b</sub>n)', 1),
(34, 9, '⦵(log<sub>b</sub> log<sub>a</sub>n)', 0),
(35, 9, '⦵(log<sub>2</sub> log<sub>2</sub>n)', 0),
(36, 9, '⦵(log<sub>ab</sub>n)', 0),
(37, 10, 'if and only if f(u) is the distance from s to u in the graph obtained by adding a new vertex s to G and edges of zero weight from s to every vertex of G', 0),
(38, 10, 'if and only if ∀u ∈ V, f(u) is positive', 0),
(39, 10, 'if and only if ∀u ∈ V, f(u) is negative', 0),
(40, 10, 'for every f:V--> R', 1),
(41, 11, '⦵(|E|+|V|)', 0),
(42, 11, '⦵(|E| log |V|)', 0),
(43, 11, '⦵(|E||V|)', 0),
(44, 11, '⦵(|V|)', 1),
(45, 15, 'log<sub>2</sub>n, 100/n, 10, √n, n', 0),
(46, 15, '100/n, 10, log<sub>2</sub>n, √n, n', 1),
(47, 15, '10, 100/n, √n, log<sub>2</sub>n, n', 0),
(48, 15, '100/n, log<sub>2</sub>n, 10, √n, n', 0),
(49, 16, '(P)↔(ii), (Q)↔(iii), (R)↔(i)', 0),
(50, 16, '(P)↔(iii), (Q)↔(i), (R)↔(ii)', 0),
(51, 16, '(P)↔(ii), (Q)↔(i), (R)↔(iii)', 1),
(52, 16, '(P)↔(i), (Q)↔(ii), (R)↔(iii)', 0),
(53, 17, '(I) only', 1),
(54, 17, '(II) only', 0),
(55, 17, 'both (I) and (II)', 0),
(56, 17, 'neither (I) nor (II)', 0),
(57, 19, 'P→(iii), Q→(iv), R→(i), S→(ii)', 0),
(58, 19, 'P→(iv), Q→(iii), R→(i), S→(ii)', 0),
(59, 19, 'P→(iii), Q→(iv), R→(ii), S→(i)', 1),
(60, 19, 'P→(iv), Q→(iii), R→(ii), S→(i)', 0),
(61, 20, 'Θ(log⁡log⁡n)', 0),
(62, 20, 'Θ(log⁡n)', 1),
(63, 20, 'Θ(√n)', 0),
(64, 20, 'Θ(n)', 0),
(65, 21, 'Θ(n√n)', 0),
(66, 21, 'Θ(n<sup>2</sup> )', 0),
(67, 21, 'Θ(n log⁡n)', 1),
(68, 21, 'Θ(n<sup>2</sup> logn)', 0),
(69, 23, 'Θ(nlogn), Θ(nlogn), and Θ(n<sup>2</sup>)', 0),
(70, 23, 'Θ(n<sup>2</sup> ), Θ(n<sup>2</sup> ), and Θ(nlogn)', 0),
(71, 23, 'Θ(n<sup>2</sup>), Θ(nlogn), and Θ(nlogn)', 0),
(72, 23, 'Θ(n<sup>2</sup>), Θ(nlogn), and Θ(n<sup>2</sup>)', 1),
(73, 25, 'I only', 0),
(74, 25, 'II only', 1),
(75, 25, 'both I and II', 0),
(76, 25, 'neither I nor II', 0),
(77, 26, 'I and II only', 0),
(78, 26, 'I and III only', 0),
(79, 26, 'II and IV only', 0),
(80, 26, 'I and IV only', 1),
(81, 27, 'Greedy paradigm.', 0),
(82, 27, 'Divide-and-Conquer paradigm.', 0),
(83, 27, 'Dynamic Programming paradigm.', 1),
(84, 27, 'Neither Greedy nor Divide-and-Conquer nor Dynamic Programming paradigm.', 0),
(85, 30, 'T(n) = 2T(n/2) + cn', 0),
(86, 30, 'T(n) = T(n – 1) + T(1) + cn', 1),
(87, 30, 'T(n) = 2T(n – 1) + cn', 0),
(88, 30, 'T(n) = T(n/2) + cn', 0),
(89, 31, 'P-iii, Q-ii, R-iv, S-i', 0),
(90, 31, 'P-i, Q-ii, R-iv, S-iii', 0),
(91, 31, 'P-ii, Q-iii, R-iv, S-i', 1),
(92, 31, 'P-ii, Q-i, R-iii, S-iv', 0),
(93, 32, 'Unsorted array', 1),
(94, 32, 'Min-heap', 0),
(95, 32, 'Sorted array', 0),
(96, 32, 'Sorted doubly linked list', 0),
(97, 34, '1-i, 2-iii, 3-i, 4-v.', 0),
(98, 34, '1-iii, 2-iii, 3-i, 4-v.', 0),
(99, 34, '1-iii, 2-ii, 3-i, 4-iv.', 1),
(100, 34, ' 1-iii, 2-ii, 3-i, 4-v.', 0),
(101, 35, '(a, left_end, k) and (a + left_end + 1, n – left_end – 1, k – left_end – 1)', 1),
(102, 35, ' (a, left_end, k) and (a, n – left_end – 1, k – left_end – 1)', 0),
(103, 35, '(a + left_end + 1, n – left_end – 1, k – left_end – 1) and (a, left_end, k)', 0),
(104, 35, ' (a, n – left_end – 1, k – left_end – 1) and (a, left_end, k)', 0),
(105, 37, '256', 0),
(106, 37, '512', 1),
(107, 37, '1024', 0),
(108, 37, '2048', 0),
(109, 41, 'Θ(n)', 1),
(110, 41, 'Θ(nlog n)', 0),
(111, 41, 'Θ(n<sup>2</sup>)', 0),
(112, 41, 'Θ(log⁡n)', 0),
(113, 45, 'SQPTRWUV', 1),
(114, 45, 'SQPTUWRV', 0),
(115, 45, 'SQPTWUVR', 0),
(116, 45, 'SQPTRUWV', 0),
(117, 47, 'O(n<sup>2</sup>)', 1),
(118, 47, 'O(n log n)', 0),
(119, 47, 'Θ(n log⁡n)', 0),
(120, 47, 'O(n<sup>3</sup>)', 0),
(121, 49, '(97×97×97)/100<sup>3</sup>', 1),
(122, 49, '(99×98×97)/100<sup>3</sup>', 0),
(123, 49, '(97×96×95)/100<sup>3</sup>', 0),
(124, 49, '(97×96×95)/(3!×100<sup>3</sup>)', 0),
(125, 50, 'number of internal nodes in the tree.', 0),
(126, 50, 'height of the tree.', 0),
(127, 50, 'number of nodes without a right sibling in the tree.', 0),
(128, 50, 'number of leaf nodes in the tree.', 1),
(129, 51, 'It will run into an infinite loop when x is not in listA.', 0),
(130, 51, 'It is an implementation of binary search.', 1),
(131, 51, 'It will always find the maximum element in listA.', 0),
(132, 51, 'It will return −1 even when x is present in listA.', 0),
(133, 52, 'O(log n)', 0),
(134, 52, 'O(n)', 1),
(135, 52, 'O(n log n)', 0),
(136, 52, 'O(n<sup>2</sup>)', 0),
(137, 53, 'O(1)', 0),
(138, 53, 'O(log n)', 0),
(139, 53, ' O(n)', 1),
(140, 53, 'O(n log n)', 0),
(141, 54, '{є}', 1),
(142, 54, 'ϕ', 0),
(143, 54, 'a<sup>*</sup>', 0),
(144, 54, '{є,a}', 0),
(145, 55, 'Θ(n<sup>2</sup>)', 0),
(146, 55, 'Θ(n<sup>2</sup> log n)', 0),
(147, 55, 'Θ(n<sup>3</sup>)', 1),
(148, 55, 'Θ(n<sup>3</sup> log n)', 0),
(149, 56, '1/8', 0),
(150, 56, '1', 0),
(151, 56, '7', 1),
(152, 56, '8', 0),
(153, 57, 'P only', 0),
(154, 57, 'Q only', 0),
(155, 57, 'Both P and Q', 1),
(156, 57, 'Neither P nor Q', 0),
(157, 58, 'P only', 1),
(158, 58, 'P and R only', 0),
(159, 58, 'R only', 0),
(160, 58, 'P, Q and S only', 0),
(161, 59, 'Θ(1)', 0),
(162, 59, 'Θ(√log⁡n)', 0),
(163, 59, 'Θ (log⁡n/log⁡log⁡n)', 1),
(164, 59, 'Θ(log n)', 0),
(165, 60, '3024', 0),
(166, 60, '6561', 1),
(167, 60, '55440', 0),
(168, 60, '161051', 0),
(169, 61, '10, 20, 15, 23, 25, 35, 42, 39, 30', 0),
(170, 61, '15, 10, 25, 23, 20, 42, 35, 39, 30', 0),
(171, 61, '15, 20, 10, 23, 25, 42, 35, 39, 30', 0),
(172, 61, '15, 10, 23, 25, 20, 35, 42, 39, 30', 1),
(173, 62, 'Θ(n)', 1),
(174, 62, 'Θ(n + k)', 0),
(175, 62, 'Θ(nk)', 0),
(176, 62, 'Θ(n<sup>2</sup>)', 0),
(177, 63, 'NP-complete = NP', 0),
(178, 63, 'NP-complete ∩ P = ∅', 1),
(179, 63, 'NP-hard = NP', 0),
(180, 63, 'P = NP-complete', 0),
(181, 64, 'A(n) = Ω (W(n))', 0),
(182, 64, 'A(n) = Θ (W(n))', 0),
(183, 64, 'A(n) = O (W(n))', 1),
(184, 64, 'A(n) = o (W(n))', 0),
(185, 65, 'T(n) ≤ 2T(n/5) + n', 0),
(186, 65, 'T(n) ≤ T(n/5) + T(4n/5) + n', 1),
(187, 65, 'T(n) ≤ 2T(4n/5) + n', 0),
(188, 65, 'T(n) ≤ 2T(n/2) + n', 0),
(189, 66, 'Q solves the subset-sum problem in polynomial time when the input is encoded in unary', 0),
(190, 66, 'Q solves the subset-sum problem in polynomial time when the input is encoded in binary', 1),
(191, 66, 'The subset sum problem belongs to the class NP', 0),
(192, 66, 'The subset sum problem is NP-hard', 0),
(193, 67, 'only vertex a', 0),
(194, 67, 'only vertices a, e, f, g, h', 0),
(195, 67, 'only vertices a, b, c, d', 0),
(196, 67, 'all the vertices', 1),
(197, 68, 'p', 0),
(198, 68, 'p + 1', 0),
(199, 68, 'n - p', 1),
(200, 68, 'n - p + 1', 0),
(201, 69, 'k', 0),
(202, 69, 'k + 1', 0),
(203, 69, 'n - k - 1', 0),
(204, 69, 'n - k', 1),
(205, 70, '1→ C, 2 → A, 3 → B, 4 → D', 1),
(206, 70, '1→ B, 2 → D, 3 → C, 4 → A', 0),
(207, 70, '1→ C, 2 → D, 3 → A, 4 → B', 0),
(208, 70, '1→ B, 2 → A, 3 → C, 4 → D', 0),
(209, 71, '2', 0),
(210, 71, '3', 0),
(211, 71, '4', 0),
(212, 71, '6', 1),
(213, 72, '2<sup>h-1</sup>', 0),
(214, 72, '2<sup>h-1</sup> + 1', 1),
(215, 72, '2<sup>h</sup> - 1', 0),
(216, 72, '2<sup>h</sup>', 0),
(217, 73, 'T(n) = θ(log n)', 0),
(218, 73, 'T(n) = θ(√n)', 0),
(219, 73, 'T(n) = θ(n)', 1),
(220, 73, 'T(n) = θ(n log n)', 0),
(221, 74, 'There exists a cutset in G having all edges of maximum weight', 1),
(222, 74, 'There exists a cycle in G having all edges of maximum weight', 0),
(223, 74, 'Edge e cannot be contained in a cycle', 0),
(224, 74, 'All edges in G have the same weight', 0),
(225, 75, '8, 7, 6, 5, 4, 3, 2, 1', 0),
(226, 75, '1, 2, 3, 4, 8, 7, 6, 5', 0),
(227, 75, '2, 1, 4, 3, 6, 7, 8, 5', 0),
(228, 75, '2, 1, 4, 3, 7, 8, 6, 5', 1),
(229, 76, '4', 0),
(230, 76, '7', 1),
(231, 76, '23', 0),
(232, 76, '99', 0),
(233, 77, 'O(log n)', 0),
(234, 77, 'O(n)', 1),
(235, 77, 'O(n log log n)', 0),
(236, 77, 'O(n log n)', 0),
(237, 78, '<img src=\"./image/choice/78.1.jpg\"/><br/>', 0),
(238, 78, '<img src=\"./image/choice/78.2.jpg\"/><br/>', 0),
(239, 78, '<img src=\"./image/choice/78.3.jpg\"/><br/>', 0),
(240, 78, '<img src=\"./image/choice/78.4.jpg\"/><br/>', 1),
(241, 79, 'f(n) + g(n) = O(h(n)) + h(n))', 0),
(242, 79, 'f(n) = O(h(n))', 0),
(243, 79, 'fh(n) ≠ O(f(n))', 0),
(244, 79, 'f(n)h(n) ≠ O(g(n)h(n))', 1),
(245, 80, '(E, G), (C, F), (F, G), (A, D), (A, B), (A, C)', 0),
(246, 80, '(A, D), (A, B), (A, C), (C, F), (G, E), (F, G)', 0),
(247, 80, '(A, B), (A, D), (D, F), (F, G), (G, E), (F, C)', 0),
(248, 80, '(A, D), (A, B), (D, F), (F, C), (F, G), (G, E)', 1),
(249, 81, 'P-II, Q-III, R-IV, S-I', 0),
(250, 81, 'P-IV, Q-III, R-I, S-II', 1),
(251, 81, 'P-III, Q-II, R-IV, S-I', 0),
(252, 81, 'P-IV, Q-II, R-I, S-III', 0),
(253, 82, 'Divide and conquer strategy', 1),
(254, 82, 'Backtracking approach', 0),
(255, 82, 'Heuristic search', 0),
(256, 82, 'Greedy Approach', 0),
(257, 83, 'O(m)', 0),
(258, 83, 'O(n)', 0),
(259, 83, 'O(m+n)', 1),
(260, 83, 'O(logm+logn)', 0),
(261, 84, ' A B C D + * F / + D E * +', 1),
(262, 84, 'AB + CD + *F/D + E*', 0),
(263, 84, 'ABCD + *F/DE*++', 0),
(264, 84, 'A *B + CD/F *DE++', 0),
(265, 85, 'I and II', 0),
(266, 85, 'II and III', 0),
(267, 85, 'I and IV', 0),
(268, 85, 'I and III', 1),
(269, 86, 'T(n)=2T(n/2)+k, k is a constant', 0),
(270, 86, 'T(n)=T(n/2)+k, k is a constant', 1),
(271, 86, 'T(n)=T(n/2)+log n', 0),
(272, 86, 'T(n)=T(n/2)+ n', 0),
(273, 87, 'Dynamic programming', 0),
(274, 87, 'Backtracking', 0),
(275, 87, 'Divide and conquer', 1),
(276, 87, 'Greedy method', 0),
(277, 88, 'Passing a constant value as a parameter', 0),
(278, 88, 'Passing the address of an array as a parameter', 1),
(279, 88, 'Passing an array element as a parameter', 0),
(280, 88, 'Passing an array following statements is true', 0),
(281, 89, 'Optimal binary search tree construction can be performed efficiently using dynamic programming.', 0),
(282, 89, 'Breadth-first search cannot be used to find converted components of a graph.', 1),
(283, 89, 'Given the prefix and postfix walks over a binary tree, the binary tree cannot be uniquely constructed.', 0),
(284, 89, 'Depth-first search can be used to find connected components of a graph.', 0),
(285, 90, 'g1(n) is O(g2(n))', 1),
(286, 90, 'g1 (n) is O(3)', 1),
(287, 90, 'g2 (n) is O(g1 (n))', 0),
(288, 90, 'g2 (n) is O(n)', 0),
(289, 91, 'at a fixed address in main memory', 0),
(290, 91, 'at a fixed location on the disk', 1),
(291, 91, 'anywhere on the disk', 0),
(292, 91, 'at a fixed location on the system disk', 0),
(293, 91, 'anywhere on the system disk', 0),
(294, 92, 'G has no cycles.', 0),
(295, 92, 'The graph obtained by removing any edge from G is not connected.', 0),
(296, 92, 'G has at least one cycle.', 1),
(297, 92, 'The graph obtained by removing any two edges from G is not connected.', 1),
(298, 93, 'O(n)', 0),
(299, 93, 'O(n<sup>2</sup>)', 1),
(300, 93, 'O(n<sup>3</sup>)', 1),
(301, 93, 'O(3n<sup>2</sup>)', 1),
(302, 93, 'O(1.5n<sup>2</sup>)', 1),
(303, 94, 'O(n log m)', 0),
(304, 94, 'O(m log n)', 1),
(305, 94, 'O(m<sup>2</sup>)', 0),
(306, 94, 'O(n<sup>2</sup>)', 0),
(307, 95, 'Heapsort', 0),
(308, 95, 'Quicksort', 0),
(309, 95, 'Mergesort', 0),
(310, 95, 'Radixsort', 1),
(311, 98, 'O(n<sup>2</sup>)', 0),
(312, 98, 'O(mn)', 1),
(313, 98, 'O(m+n)', 0),
(314, 98, 'O(m logn)', 1),
(315, 98, 'O(m<sup>2</sup>)', 1),
(316, 99, '20, 10, 20, 10, 20', 0),
(317, 99, '20, 20, 10, 10, 20', 1),
(318, 99, '10, 20, 20, 10, 20', 0),
(319, 99, '20, 20, 10, 20, 10', 0),
(332, 100, 'A-S, B-R, C-P, D-Q', 1),
(333, 100, 'A-S, B-Q, C-P, D-R', 0),
(334, 100, 'A-Q, B-R, C-P, D-S', 0),
(335, 100, 'A-P, B-R, C-S, D-Q', 0),
(336, 101, '(a) - (r), (b) - (p), (c) - (q), (d) - (s)', 0),
(337, 101, '(a) - (r), (b) - (p), (c) - (s), (d) - (q)', 1),
(338, 101, '(a) - (q), (b) - (r), (c) - (s), (d) - (p)', 0),
(339, 101, '(a) - (q), (b) - (p), (c) - (s), (d) - (r)', 0),
(340, 102, '5.54', 0),
(341, 102, '1.34', 0),
(342, 102, '4.25', 1),
(343, 102, '3.82', 0),
(344, 103, '20, 19, 18, 16, 15, 12, 11, 10', 0),
(345, 103, '11, 12, 10, 16, 19, 18, 20, 15', 1),
(346, 103, '10, 11, 12, 15, 16, 18, 19, 20', 0),
(347, 103, '19, 16, 18, 20, 11, 12, 10, 15', 0),
(348, 105, 'θ(n log n)', 1),
(349, 105, 'θ(n<sup>2</sup>)', 1),
(350, 105, 'θ(n)', 0),
(351, 105, 'θ(1)', 0),
(352, 107, 'θ(n<sup>4</sup>)', 0),
(353, 107, 'θ(n<sup>2</sup>)', 0),
(354, 107, 'θ(n<sup>3</sup>)', 0),
(355, 107, 'θ(n<sup>2</sup> log n)', 1),
(356, 108, 'θ(n log k)', 0),
(357, 108, 'θ(log(n) + k)', 1),
(358, 108, 'θ(k log n)', 0),
(359, 108, 'θ(log n)', 0),
(360, 111, 'θ(1), θ(1)', 0),
(361, 111, 'θ(1), θ(n)', 1),
(362, 111, 'θ(n), θ(1)', 0),
(363, 111, 'θ(n), θ(n)', 0),
(364, 112, 'I only', 1),
(365, 112, 'II only', 0),
(366, 112, 'Both I and II', 0),
(367, 112, 'Neither I nor II', 0),
(368, 114, 'append list m to the end of list n for all inputs.', 0),
(369, 114, 'either cause a null pointer dereference or append list m to the end of list n.', 1),
(370, 114, 'cause a null pointer dereference for all inputs.', 0),
(371, 114, 'append list n to the end of list m for all inputs.', 0),
(372, 116, 'I only', 0),
(373, 116, 'II only', 1),
(374, 116, 'Both I and II', 0),
(375, 116, 'Neither I nor II', 0),
(376, 117, 'MNOPQR', 0),
(377, 117, 'NQMPOR', 0),
(378, 117, 'QMNROP', 0),
(379, 117, 'POQNMR', 1),
(380, 118, '2, 6, 7, 8, 9, 10, 12, 15, 16, 17, 19, 20', 0),
(381, 118, '2, 7, 6, 10, 9, 8, 15, 17, 20, 19, 16, 12', 1),
(382, 118, '7, 2, 6, 8, 9, 10, 20, 17, 19, 15, 16, 12', 0),
(383, 118, '7, 6, 2, 10, 9, 8, 15, 16, 17, 20, 19, 12', 0),
(384, 119, 'Both operations can be performed in O(1) time', 1),
(385, 119, 'At most one operation can be performed in O(1) time but the worst case time for the other operation will be Ω(n)', 0),
(386, 119, 'The worst case time complexity for both operations will be Ω(n)', 0),
(387, 119, 'Worst case time complexity for both operations will be Ω(logn)', 0),
(388, 121, 'P only', 1),
(389, 121, 'Q only', 0),
(390, 121, 'Neither P nor Q', 0),
(391, 121, 'Both P and Q', 0),
(392, 122, 'O(1)', 0),
(393, 122, 'O(d) but not O(1)', 1),
(394, 122, 'O(d 2<sup>d</sup>) but not O(2<sup>d</sup>)', 0),
(395, 122, 'O(2<sup>d</sup>) but not O(d)', 0),
(396, 126, 'O(N)', 0),
(397, 127, 'Θ(n<sup>4</sup>)', 0),
(398, 127, 'Θ(m<sup>2</sup>)', 0),
(399, 126, 'O(N<sup>2</sup>)', 1),
(400, 127, 'Θ(n+m)', 1),
(401, 127, 'Θ(n<sup>2</sup>)', 0),
(402, 126, 'Θ(N<sup>2</sup> logN)', 0),
(403, 126, 'O(log<sup>2</sup> N)', 0),
(404, 129, '  - 1 6 7 * 2 ˆ 5 - 3 4 *', 0),
(405, 129, '-   1 * 6 7 ˆ 2 - 5 * 3 4', 0),
(406, 129, '-   1 * 7 6 ˆ 2 - 5 * 4 3', 1),
(407, 129, '1 7 6 *   2 5 4 3 * - ˆ -', 0),
(408, 131, '63 and 6, respectively', 1),
(409, 131, '64 and 5, respectively', 0),
(410, 131, '32 and 6, respectively', 0),
(411, 131, '31 and 5, respectively', 0),
(412, 132, '40, 30, 20, 10, 15, 16, 17, 8, 4, 35', 0),
(413, 132, '40, 35, 20, 10, 30, 16, 17, 8, 4, 15', 1),
(414, 132, '40, 30, 20, 10, 35, 16, 17, 8, 4, 15', 0),
(415, 132, '40, 35, 20, 10, 15, 16, 17, 8, 4, 30', 0),
(416, 134, 'Ω(logn)', 1),
(417, 134, 'Ω(n)', 0),
(418, 134, 'Ω(nlog n)', 0),
(419, 134, 'Ω(n<sup>2</sup>)', 0),
(420, 135, 'h(i) = i<sup>2</sup> mod 10', 0),
(421, 135, 'h(i) = i<sup>3</sup> mod 10', 1),
(422, 135, 'h(i) = (11 *i<sup>2</sup>) mod 10', 0),
(423, 135, 'h(i) = (12 * i) mod 10', 0),
(424, 136, '63 milliseconds, 65535×2<sup>14</sup>', 0),
(425, 136, '63 milliseconds, 65535×2<sup>16</sup>', 0),
(426, 136, ' 500 milliseconds, 65535×2<sup>14</sup>', 1),
(427, 136, '500 milliseconds, 65535×2<sup>16</sup>', 0),
(428, 143, 'θ(n)', 0),
(429, 143, 'θ(n m)', 0),
(430, 143, 'θ(n<sup>2</sup> )', 1),
(431, 143, 'θ(m<sup>2</sup> )', 0),
(432, 145, 'The graph does not have any topological ordering.', 0),
(433, 145, 'Both PQRS and SRQP are topological.', 0),
(434, 145, 'Both PSRQ and SPRQ are topological orderings.', 1),
(435, 145, 'PSRQ is the only topological ordering.', 0),
(436, 146, 't<sub>1</sub>=5', 0),
(437, 146, 't<sub>1</sub>2', 0),
(438, 146, 't<sub>1</sub>>t<sub>2</sub>', 1),
(439, 146, 't<sub>1</sub>=t<sub>2</sub>', 0),
(440, 147, '3, 0, and 1', 1),
(441, 147, '3, 3, and 3', 0),
(442, 147, '4, 0, and 1', 0),
(443, 147, '3, 0, and 2', 0),
(444, 148, 'maximum possible sum of elements in any sub-array of array E.', 1),
(445, 148, 'maximum element in any sub-array of array E.', 0),
(446, 148, 'sum of the maximum elements in all possible sub-arrays of array E.', 0),
(447, 148, 'the sum of all the elements in the array E.', 0),
(448, 149, 'Half of the product of the 3 consecutive integers.', 0),
(449, 149, 'One-third of the product of the 3 consecutive integers.', 0),
(450, 149, 'One-sixth of the product of the 3 consecutive integers.', 1),
(451, 149, 'None of the above.', 0),
(452, 151, 'n/N', 1),
(453, 151, '1/N', 0),
(454, 151, '1/A', 0),
(455, 151, 'k/n', 0),
(456, 152, '10, 8, 7, 3, 2, 1, 5', 1),
(457, 152, '10, 8, 7, 2, 3, 1, 5', 0),
(458, 152, '10, 8, 7, 1, 2, 3, 5', 0),
(459, 152, '10, 8, 7, 5, 3, 2, 1', 0),
(460, 153, 'the shortest path between every pair of vertices.', 0),
(461, 153, 'the shortest path from W to every vertex in the graph.', 1),
(462, 153, 'the shortest paths from W to only those nodes that are leaves of T.', 0),
(463, 153, 'the longest path in the graph.', 0),
(464, 154, 'Θ (n log n)', 0),
(465, 154, 'Θ (n2<sup>n</sup>)', 0),
(466, 154, 'Θ (n)', 1),
(467, 154, 'Θ (log n)', 0),
(468, 155, 'T(n) = 2T(n - 2) + 2', 0),
(469, 155, 'T(n) = 2T(n - 1) + n', 0),
(470, 155, 'T(n) = 2T(n/2) + 1', 0),
(471, 155, 'T(n) = 2T(n - 1) + 1', 1),
(472, 156, ' full: (REAR+1)mod n == FRONT<br/> empty: REAR == FRONT', 1),
(473, 156, 'full: (REAR+1)mod n == FRONT<br/> empty: (FRONT+1) mod n == REAR', 0),
(474, 156, 'full: REAR == FRONT<br/> empty: (REAR+1) mod n == FRONT', 0),
(475, 156, 'full: (FRONT+1)mod n == REAR<br/> empty: REAR == FRONT', 0),
(476, 157, 'B1: (1+height(n→right)) <br/>B2: (1+max(h1,h2))', 1),
(477, 157, 'B1: (height(n→right))<br/> B2: (1+max(h1,h2))', 0),
(478, 157, 'B1: height(n→right)<br/> B2: max(h1,h2)', 0),
(479, 157, 'B1: (1+height(n→right)) <br/>B2: max(h1,h2)', 0),
(480, 158, '<img src=\"./image/choice/158.1.jpg\"/><br/>', 0),
(481, 158, '<img src=\"./image/choice/158.2.jpg\"/><br/>', 1),
(482, 158, '<img src=\"./image/choice/158.3.jpg\"/><br/>', 0),
(483, 158, '<img src=\"./image/choice/158.4.jpg\"/><br/>', 0),
(484, 159, '0', 0),
(485, 159, '1', 1),
(486, 159, 'n!', 0),
(487, 159, '1/(n+1) . <sup>2n</sup>C<sub>n</sub>', 0),
(488, 160, '0', 1),
(489, 160, '1', 0),
(490, 160, '(n-1)/2', 0),
(491, 160, 'n-1', 0),
(492, 161, 'q = NULL; p→next = head; head = p;', 0),
(493, 161, 'q→next = NULL; head = p; p→next = head;', 0),
(494, 161, 'head = p; p→next = q; q→next = NULL;', 0),
(495, 161, 'q→next = NULL; p→next = head; head = p;', 1),
(496, 163, '46, 42, 34, 52, 23, 33', 0),
(497, 163, '34, 42, 23, 52, 33, 46', 0),
(498, 163, '46, 34, 42, 23, 52, 33', 1),
(499, 163, '42, 46, 33, 23, 34, 52', 0),
(500, 165, '<img src=\"./image/choice/165.1.jpg\"/><br/>', 0),
(501, 165, '<img src=\"./image/choice/165.2.jpg\"/><br/>', 0),
(502, 165, '<img src=\"./image/choice/165.3.jpg\"/><br/>', 1),
(503, 165, '<img src=\"./image/choice/165.4.jpg\"/><br/>', 0),
(504, 167, '{25,12,16,13,10,8,14}', 0),
(505, 167, '{25,14,13,16,10,8,12}', 0),
(506, 167, '{25,14,16,13,10,8,12}', 1),
(507, 167, '{25,14,12,13,10,8,16}', 0),
(508, 168, '{14,13,12,10,8}', 0),
(509, 168, '{14,12,13,8,10}', 0),
(510, 168, '{14,13,8,12,10}', 0),
(511, 168, '{14,13,12,8,10}', 1),
(512, 169, 'θ(n)', 0),
(513, 169, 'θ(m)', 0),
(514, 169, 'θ(m+n)', 1),
(515, 169, 'θ(mn)', 0),
(516, 170, 'Σm(4,6)', 0),
(517, 170, 'Σm(4,8)', 0),
(518, 170, 'Σm(6,8)', 1),
(519, 170, 'Σm(4,6,8)', 0),
(520, 171, 'MNOPQR', 0),
(521, 171, 'NQMPOR', 0),
(522, 171, 'QMNPRO', 1),
(523, 171, 'QMNPOR', 0),
(524, 172, 'For every subset of k vertices, the induced subgraph has at most 2k–2 edges', 0),
(525, 172, 'The minimum cut in G has at least two edges', 0),
(526, 172, 'There are two edge-disjoint paths between every pair to vertices', 0),
(527, 172, 'There are two vertex-disjoint paths between every pair of vertices', 1),
(528, 173, 'θ(log n)', 0),
(529, 173, 'θ(n)', 1),
(530, 173, 'θ(nlog n)', 0),
(531, 173, 'None of the above, as the tree cannot be uniquely determined', 0),
(532, 174, 'θ(log n)', 0),
(533, 174, 'θ(n)', 1),
(534, 174, 'θ(nlog n)', 0),
(535, 174, 'θ(n<sup>2</sup>)', 0),
(536, 175, '1,2,3,4,5,6,7', 0),
(537, 175, '2,1,4,3,6,5,7', 1),
(538, 175, '1,3,2,5,4,7,6', 0),
(539, 175, '2,3,4,5,6,7,1', 0),
(540, 176, 'The cost of searching an AVL tree is θ (log n) but that of a binary search tree is O(n)', 1),
(541, 176, 'The cost of searching an AVL tree is θ (log n) but that of a complete binary tree is θ (n log n)', 0),
(542, 176, 'The cost of searching a binary search tree is O (log n ) but that of an AVL tree is θ(n)', 0),
(543, 176, 'The cost of searching an AVL tree is θ (n log n) but that of a binary search tree is O(n)', 0),
(544, 177, 'I and II are preorder and inorder sequences, respectively', 0),
(545, 177, 'I and III are preorder and postorder sequences, respectively', 0),
(546, 177, 'II is the inorder sequence, but nothing more can be said about the other two sequences', 0),
(547, 177, 'II and III are the preorder and inorder sequences, respectively', 1),
(548, 178, 'a b e f d g c', 0),
(549, 178, 'a b e f c g d', 1),
(550, 178, 'a d g e b c f', 1),
(551, 178, 'a d b c g e f', 0),
(552, 180, '81, 537, 102, 439, 285, 376, 305', 0),
(553, 180, '52, 97, 121, 195, 242, 381, 472', 0),
(554, 180, '142, 248, 520, 386, 345, 270, 307', 1),
(555, 180, '550, 149, 507, 395, 463, 402, 270', 0),
(556, 181, 'I, II and IV are inorder sequences of three different BSTs', 0),
(557, 181, 'I is a preorder sequence of some BST with 439 as the root', 0),
(558, 181, 'II is an inorder sequence of some BST where 121 is the root and 52 is a leaf', 1),
(559, 181, 'IV is a postorder sequence of some BST with 149 as the root', 0),
(560, 183, 'n<sub>1</sub> + n<sub>2</sub>-1', 0),
(561, 183, 'n<sub>1</sub>-2', 1),
(562, 183, '(n<sub>1</sub> + n<sub>2</sub>)/2', 0),
(563, 183, 'n<sub>2</sub>-1', 0),
(564, 184, '2 * n<sub>1</sub> – 3', 1),
(565, 184, 'n<sub>2</sub> + 2 * n<sub>1</sub> – 2', 0),
(566, 184, 'n<sub>3</sub> – n<sub>2</sub>', 0),
(567, 184, 'n<sub>2</sub> + n<sub>1</sub> – 2', 0),
(568, 185, '3 2 4 1 6 5', 0),
(569, 185, '1 3 2 4 6 5', 1),
(570, 185, '1 3 2 4 5 6', 1),
(571, 185, '1 2 3 4 5 6', 1),
(572, 186, '2<sup>h</sup>−1', 0),
(573, 186, '2<sup>h−1</sup> – 1', 0),
(574, 186, '2<sup>h+1</sup>– 1', 1),
(575, 186, '2<sup>h+1</sup>', 0),
(576, 188, '1', 1),
(577, 188, '3', 0),
(578, 188, '5', 0),
(579, 188, '6', 1),
(580, 189, 'd e b f g c a', 1),
(581, 189, 'e d b g f c a', 0),
(582, 189, 'e d b f g c a', 0),
(583, 189, 'd e f g b c a', 0),
(584, 190, '8, _, _, _, _, _, 10', 0),
(585, 190, '1, 8, 10, _, _, _, 3', 1),
(586, 190, '1, _, _, _, _, _,3', 0),
(587, 190, '1, 10, 8, _, _, _, 3', 0),
(588, 192, 'the number of nodes in the tree', 0),
(589, 192, 'the number of internal nodes in the tree', 0),
(590, 192, 'the number of leaf nodes in the tree', 1),
(591, 192, 'the height of the tree', 0),
(592, 193, 'θ(log<sub>2</sub>n)', 0),
(593, 193, 'θ(log<sub>2</sub>log<sub>2</sub>n)', 1),
(594, 193, 'θ(n)', 0),
(595, 193, 'θ(nlog<sub>2</sub>n)', 0),
(596, 194, 'd[u] < d[v]', 0),
(597, 194, 'd[u] < f[v]', 0),
(598, 194, 'f[u] < f[v]', 0),
(599, 194, 'f[u] > f[v]', 1),
(600, 196, 'Leaves the queue Q unchanged', 0),
(601, 196, 'Reverses the order of the elements in the queue Q', 1),
(602, 196, 'Deletes the element at the front of the queue Q and inserts it at the rear keeping the other elements in the same order', 0),
(603, 196, 'Empties the queue Q', 0),
(604, 198, 'log<sub>2</sub>n', 0),
(605, 198, 'n', 0),
(606, 198, '2n+1', 0),
(607, 198, '2<sup>n</sup>-1', 1),
(608, 199, 'O(n)', 1),
(609, 199, 'O(log n)', 0),
(610, 199, 'O(log log n)', 0),
(611, 199, 'O(1)', 0),
(612, 200, '10, 7, 9, 8, 3, 1, 5, 2, 6, 4', 1),
(613, 200, '10, 9, 8, 7, 6, 5, 4, 3, 2, 1', 0),
(614, 200, '10, 9, 4, 5, 7, 6, 8, 2, 1, 3', 0),
(615, 200, '10, 8, 6, 9, 7, 2, 3, 4, 1, 5', 0),
(616, 201, '1, 3, 5, 6, 8, 9', 0),
(617, 201, '9, 6, 3, 1, 8, 5', 0),
(618, 201, '9, 3, 6, 8, 5, 1', 0),
(619, 201, '9, 5, 6, 8, 3, 1', 1),
(620, 202, 'There must exist a vertex w adjacent to both u and v in G', 0),
(621, 202, 'There must exist a vertex w whose removal disconnects u and v in G', 0),
(622, 202, 'There must exist a cycle in G containing u and v', 0),
(623, 202, 'There must exist a cycle in G containing u and all its neighbours in G', 1),
(624, 203, 'n+m ≤ x < 2n and 2m ≤ y ≤ n+m', 1),
(625, 203, '2m ≤ x < 2n and 2m ≤ y ≤ 2n', 0),
(626, 203, '2m ≤ x< 2n and 2m ≤ y ≤ n+m', 0),
(627, 203, 'n+m ≤ x< 2n and 2m ≤y ≤ 2n', 0),
(628, 205, 'Hamiltonian cycle', 0),
(629, 205, 'grid', 0),
(630, 205, 'hypercube', 0),
(631, 205, 'tree', 1),
(632, 206, '{23, 17, 14, 6, 13, 10, 1, 12, 7, 5}', 0),
(633, 206, '{23, 17, 14, 6, 13, 10, 1, 5, 7, 12}', 0),
(634, 206, '{23, 17, 14, 7, 13, 10, 1, 5, 6, 12}', 1),
(635, 206, '{23, 17, 14, 7, 13, 10, 1, 12, 5, 7}', 0),
(636, 207, '{10, 75, 64, 43, 60, 57, 55}', 0),
(637, 207, '{90, 12, 68, 34, 62, 45, 55}', 0),
(638, 207, '{9, 85, 47, 68, 43, 57, 55}', 1),
(639, 207, '{79, 14, 72, 56, 16, 53, 55}', 0),
(640, 208, '{P, Q, R, S}, {T}, {U}, {V}', 0),
(641, 208, '{P, Q, R, S, T, V}, {U}', 1),
(642, 208, '{P, Q, S, T, V}, {R}, {U}', 0),
(643, 208, '{P, Q, R, S, T, U, V}', 0),
(644, 209, 'There is only one connected component', 0),
(645, 209, 'There are two connected components, and P and R are connected', 0),
(646, 209, 'There are two connected components, and Q and R are connected', 0),
(647, 209, 'There are two connected components, and P and Q are connected', 1),
(648, 210, '⌊i/2⌋', 0),
(649, 210, '⌈(i-1)/2⌉', 0),
(650, 210, '⌈i/2⌉', 0),
(651, 210, '⌈i/2⌉ - 1', 1),
(652, 211, 'O(n)', 0),
(653, 211, 'O(log n)', 1),
(654, 211, 'O(n log n)', 0),
(655, 211, 'O(n log log n)', 0),
(656, 212, '⌊log2 i⌋', 0),
(657, 212, '⌈log2 (i + 1)⌉', 0),
(658, 212, '⌊log2 (i + 1)⌋', 1),
(659, 212, '⌈log2 i⌉', 0),
(660, 213, 'Same as an abstract class', 0),
(661, 213, 'A data type that cannot be instantiated', 0),
(662, 213, 'A data type type for which only the operations defined on it can be used, but none else', 1),
(663, 213, 'All of the above', 0),
(664, 214, 'An array of 50 numbers', 1),
(665, 214, 'An array of 100 numbers', 0),
(666, 214, 'An array of 500 numbers', 0),
(667, 214, 'A dynamically allocated array of 550 numbers', 0),
(668, 215, 'Graph G has no minimum spanning tree (MST)', 0),
(669, 215, 'Graph G has a unique MST of cost n-1', 0),
(670, 215, 'Graph G has multiple distinct MSTs, each of cost n-1', 1),
(671, 215, 'Graph G has multiple spanning trees of different costs', 0),
(672, 216, 'the minimum weighted spanning tree of G', 1),
(673, 216, 'the weighted shortest path from s to t', 0),
(674, 216, 'each path from s to t', 0),
(675, 216, 'the weighted longest path from s to t', 0),
(676, 217, 'a path from s to t in the minimum weighted spanning tree', 1),
(677, 217, 'a weighted shortest path from s to t', 0),
(678, 217, 'an Euler walk from s to t', 0),
(679, 217, 'a Hamiltonian path from s to t', 0),
(680, 218, 'nk', 0),
(681, 218, '(n - 1) k + 1', 0),
(682, 218, 'n (k - 1) + 1', 1),
(683, 218, 'n (k - 1)', 0),
(684, 220, '10, 8, 7, 5, 3, 2, 1', 0),
(685, 220, '10, 8, 7, 2, 3, 1, 5', 0),
(686, 220, '10, 8, 7, 1, 2, 3, 5', 0),
(687, 220, '10, 8, 7, 3, 2, 1, 5', 1),
(688, 221, '9, 10, 15, 22, 23, 25, 27, 29, 40, 50, 60, 95', 1),
(689, 221, '9, 10, 15, 22, 40, 50, 60, 95, 23, 25, 27, 29', 0),
(690, 221, '29, 15, 9, 10, 25, 22, 23, 27, 40, 60, 50, 95', 0),
(691, 221, '95, 50, 60, 40, 27, 23, 22, 25, 10, 9, 15, 29', 0),
(692, 222, '(top1 = MAXSIZE/2) and (top2 = MAXSIZE/2 + 1)', 0),
(693, 222, 'top1 + top2 = MAXSIZE', 0),
(694, 222, '(top1 = MAXSIZE/2) or (top2 = MAXSIZE)', 0),
(695, 222, 'top1 = top2 – 1', 1),
(696, 224, 'queue', 0),
(697, 224, 'stack', 1),
(698, 224, 'tree', 0),
(699, 224, 'list', 0),
(700, 225, 'preorder traversal', 0),
(701, 225, 'in-order traversal', 0),
(702, 225, 'depth first search', 0),
(703, 225, 'breadth first search', 1),
(704, 226, '9679, 1989, 4199 hash to the same value', 1),
(705, 226, '1471, 6171 hash to the same value', 1),
(706, 226, 'All elements hash to the same value', 0),
(707, 226, 'Each element hashes to a different value', 0),
(708, 227, 'preorder and postorder', 0),
(709, 227, 'inorder and postorder', 1),
(710, 227, 'preorder and inorder', 1),
(711, 227, 'levelorder and postorder', 0),
(712, 228, 'rear node', 1),
(713, 228, 'front node', 0),
(714, 228, 'not possible with a single pointer', 0),
(715, 228, 'node next to front', 0),
(716, 229, '<img src=\"./image/choice/229.1.jpg\"/><br/>', 1),
(717, 229, '<img src=\"./image/choice/229.2.jpg\"/><br/>', 0),
(718, 229, '<img src=\"./image/choice/229.3.jpg\"/><br/>', 0),
(719, 229, '<img src=\"./image/choice/229.4.jpg\"/><br/>', 0),
(720, 230, 'abc×+def^^-', 1),
(721, 230, 'abc×+de^f^-', 0),
(722, 230, 'ab+c×d-e^f^', 0),
(723, 230, '-+a×bc^^def', 0),
(724, 231, 'union only', 0),
(725, 231, 'intersection, membership', 0),
(726, 231, 'membership, cardinality', 0),
(727, 231, 'union, intersection', 1),
(728, 232, 'The number of leaf nodes in the tree', 0),
(729, 232, 'The number of nodes in the tree', 0),
(730, 232, 'The number of internal nodes in the tree', 0),
(731, 232, 'The height of the tree', 1),
(732, 233, 'O(n)', 0),
(733, 233, 'O(log<sup>2</sup> n)', 0),
(734, 233, 'O(logn)', 0),
(735, 233, 'O(1)', 1),
(736, 234, 'I, II, and IV only', 1),
(737, 234, 'II, III, and IV only', 0),
(738, 234, 'II and IV only', 0),
(739, 234, 'IV only', 0),
(740, 235, 'n – k + 1', 0),
(741, 235, 'n – k', 1),
(742, 235, 'n – k – 1', 0),
(743, 235, 'n – k – 2', 0),
(744, 236, '7 5 1 0 3 2 4 6 8 9', 0),
(745, 236, '0 2 4 3 1 6 5 9 8 7', 0),
(746, 236, '0 1 2 3 4 5 6 7 8 9', 1),
(747, 236, '9 8 6 4 2 3 0 1 5 7', 0),
(748, 237, 'a b e g h f', 1),
(749, 237, 'a b f e h g', 0),
(750, 237, 'a b f h g e', 1),
(751, 237, 'a f g h b e', 1),
(752, 238, 'Θ(n log n)', 0),
(753, 238, 'Θ(n)', 0),
(754, 238, 'Θ(log n)', 0),
(755, 238, 'Θ(1)', 1),
(756, 239, 'A heap can be used but not a balanced binary search tree', 0),
(757, 239, 'A balanced binary search tree can be used but not a heap', 1),
(758, 239, 'Both balanced binary search tree and heap can be used', 0),
(759, 239, 'Neither balanced binary search tree nor heap can be used', 0),
(760, 240, 'n(X + Y)', 0),
(761, 240, '3Y + 2X', 0),
(762, 240, 'n(X + Y) - X', 1),
(763, 240, 'Y + 2X', 0),
(764, 241, '<img src=\"./image/choice/241.1.jpg\"/><br/>', 0),
(765, 241, '<img src=\"./image/choice/241.2.jpg\"/><br/>', 1),
(766, 241, '<img src=\"./image/choice/241.3.jpg\"/><br/>', 0),
(767, 241, 'None of the above', 0),
(768, 242, 'the list is empty or has exactly one element', 0),
(769, 242, 'the elements in the list are sorted in non-decreasing order of data value', 1),
(770, 242, 'the elements in the list are sorted in non-increasing order of data value', 0),
(771, 242, 'not all elements in the list have the same data value', 0),
(772, 243, 'log n', 0),
(773, 243, 'n/2', 0),
(774, 243, '(log<sub>2</sub>)<sup>n</sup> - 1', 0),
(775, 243, 'n', 1),
(776, 244, 'Do not differ', 0),
(777, 244, 'Differ in the presence of loops', 0),
(778, 244, 'Differ in all cases', 0),
(779, 244, 'May differ in the presence of exception', 1),
(780, 245, 'n/2', 0),
(781, 245, '(n-1)/3', 0),
(782, 245, '(n-1)/2', 0),
(783, 245, '(2n+1)/3', 1),
(784, 247, 'log<sub>2</sub>n', 0),
(785, 247, 'log<sub>4/3</sub>n', 0),
(786, 247, 'log<sub>3</sub>n', 0),
(787, 247, 'log<sub>3/2</sub>n', 1),
(788, 248, 'One stack is enough', 1),
(789, 248, 'Two stacks are needed', 0),
(790, 248, 'As many stacks as the height of the expression tree are needed', 0),
(791, 248, 'A Turning machine is needed in the general case', 0),
(792, 249, 'X – 1 Y – 2 Z – 3', 0),
(793, 249, 'X – 3 Y – 1 Z – 2', 0),
(794, 249, 'X – 3 Y – 2 Z – 1', 1),
(795, 249, 'X – 2 Y – 3 Z – 1', 0),
(796, 250, '(1 2 (4 5 6 7))', 0),
(797, 250, '(1 (2 3 4) 5 6) 7)', 0),
(798, 250, '(1 (2 3 4) (5 6 7))', 1),
(799, 250, '(1 (2 3 NULL) (4 5))', 0),
(800, 251, 'Rotates s left by k positions', 1),
(801, 251, 'Leaves s unchanged', 0),
(802, 251, 'Reverses all elements of s', 0),
(803, 251, 'None of the above', 0),
(804, 252, 'LASTIN = LASTPOST', 0),
(805, 252, 'LASTIN = LASTPRE', 0),
(806, 252, 'LASTPRE = LASTPOST', 0),
(807, 252, 'None of the above', 1),
(808, 253, '{u, v} must be an edge in G, and u is a descendant of v in T', 0),
(809, 253, '{u, v} must be an edge in G, and v is a descendant of u in T', 0),
(810, 253, 'If {u, v} is not an edge in G then u is a leaf in T', 1),
(811, 253, 'If {u, v} is not an edge in G then u and v must have the same parent in T', 0),
(812, 255, 'A tree with a n nodes has (n – 1) edges', 0),
(813, 255, 'A labeled rooted binary tree can be uniquely constructed given its postorder and preorder traversal results', 1),
(814, 255, 'A complete binary tree with n internal nodes has (n + 1) leaves', 0),
(815, 255, 'The maximum number of nodes in a binary tree of height h is (2<sup>h 1</sup>-1)', 0),
(816, 256, 'x(n-1) + 1', 1),
(817, 256, 'xn - 1', 0),
(818, 256, 'xn + 1', 0),
(819, 256, 'x(n+1)', 0),
(820, 257, '15i + j + 84', 1),
(821, 257, '15j + i + 84', 0),
(822, 257, '10i + j + 89', 0),
(823, 257, '10j + i + 89', 0),
(824, 258, 'stack', 0),
(825, 258, 'heap', 0),
(826, 258, 'display', 1),
(827, 258, 'activation tree', 0),
(828, 259, 'Singly linked list', 0),
(829, 259, 'Doubly linked list', 0),
(830, 259, 'Circular doubly linked list', 1),
(831, 259, 'Array implementation of list', 0),
(832, 260, 'An operator stack', 1),
(833, 260, 'An operand stack', 0),
(834, 260, 'An operand stack and an operator stack', 0),
(835, 260, 'A parse tree', 0),
(836, 261, '5 3 1 2 4 7 8 6', 0),
(837, 261, '5 3 1 2 6 4 8 7', 0),
(838, 261, '5 3 2 4 1 6 7 8', 0),
(839, 261, '5 3 1 2 4 7 6 8', 1),
(840, 262, 'non-increasing order', 0),
(841, 262, 'non-decreasing order', 0),
(842, 262, 'strictly increasing order', 0),
(843, 262, 'strictly decreasing order', 1),
(844, 263, 'First-in-first-out type of computation are efficiently supported by STACK.', 0),
(845, 263, 'Implementing LISTS on linked list is more efficient than implementing LISTS on an array for almost all the basic LIST operations.', 1),
(846, 263, 'Implementing QUEUES on a circular array is more efficient than implementing QUEUES on a linear array with two indices.', 1),
(847, 263, 'Last-in-first-out type of computations are efficiently supported by QUEUES.', 0),
(848, 264, 'Worst case complexity of search operations is less?', 0),
(849, 264, 'Space used is less', 0),
(850, 264, 'Deletion is easier', 1),
(851, 264, 'None of the above', 0),
(852, 266, 'f e g c d b a', 0),
(853, 266, 'g c b d a f e', 0),
(854, 266, 'g c d b f e a', 1),
(855, 266, ' f e d g c b a', 0),
(856, 268, '(4, 7)', 0),
(857, 268, '(7, 4)', 1),
(858, 268, '(8, 3)', 0),
(859, 268, '(3, 8)', 0),
(860, 269, 'log<sub>2</sub> n', 0),
(861, 269, 'n - 1', 1),
(862, 269, 'n', 0),
(863, 269, '2<sup>n</sup>', 0),
(864, 270, 'it makes it more difficult to verify programs', 1),
(865, 270, 'it increases the running time of the programs', 0),
(866, 270, 'it increases the memory required for the programs', 0),
(867, 270, 'it results in the compiler generating longer machine code', 0),
(868, 271, '3, 4, 5, 1, 2', 0),
(869, 271, '3, 4, 5, 2, 1', 1),
(870, 271, '1, 5, 2, 3, 4', 0),
(871, 271, '5, 4, 3, 1, 2', 0),
(872, 272, 'Insertion sort', 0),
(873, 272, 'Binary search', 1),
(874, 272, 'Radix sort', 0),
(875, 272, 'Polynomial manipulation', 0),
(876, 273, '4', 1),
(877, 273, '5', 0),
(878, 273, '6', 0),
(879, 273, '7', 1),
(880, 274, 'n', 0),
(881, 274, 'n+p', 0),
(882, 274, 'p', 0),
(883, 274, 'n-p', 1),
(884, 275, 'i-1', 0),
(885, 275, '⌊i/2⌋', 1),
(886, 275, '⌈i/2⌉', 0),
(887, 275, '(i+1)/2', 0),
(888, 276, 'none', 0),
(889, 276, 'P1', 1),
(890, 276, 'P2', 1),
(891, 276, 'P3', 0),
(892, 277, 'd(r,u)', 0),
(893, 277, 'd(r,u)>d(r,v)', 0),
(894, 277, 'd(r,u)≤d(r,v)', 1),
(895, 277, 'None of the above', 0),
(896, 279, 'Equal to the number of ways of multiplying (n+1) matrices.', 1),
(897, 279, 'Equal to the number of ways of arranging n out of 2n distinct elements.', 0),
(898, 279, '<img src=\"./image/choice/279.3.jpg\"/>', 1),
(899, 279, 'Equal to n!.', 0),
(900, 281, '(A)-(p), (B)-(r), (C)-(s), (D)-(q)', 0),
(901, 281, '(A)-(r), (B)-(p), (C)-(q), (D)-(s)', 0),
(902, 281, '(A)-(r), (B)-(s), (C)-(q), (D)-(p)', 0),
(903, 281, '(A)-(r), (B)-(s), (C)-(p), (D)-(q)', 1),
(904, 282, 'Overlaying is used to run a program, which is longer than the address space of the computer.', 1),
(905, 282, 'Optimal binary search tree construction can be performed efficiently by using dynamic programming.', 0),
(906, 282, 'Depth first search cannot be used to find connected components of a graph.', 1),
(907, 282, 'Given the prefix and postfix walls over a binary tree, the binary tree can be uniquely constructed.', 1),
(908, 283, 'One pointer.', 0),
(909, 283, 'Two pointers.', 1),
(910, 283, 'Multiple pointers.', 0),
(911, 283, 'No pointer.', 0),
(912, 284, 'Somewhat slower compilation', 1),
(913, 284, 'A program that is easier to understand', 0),
(914, 284, 'An incorrect program', 0),
(915, 284, 'None of the above', 0),
(916, 285, 'Bottom-up parser.', 1),
(917, 285, 'Top-down parser.', 0),
(918, 285, 'Back tracking parser.', 0),
(919, 285, 'None of the above.', 0),
(920, 286, 'The code generator.', 0),
(921, 286, 'The code optimiser.', 0),
(922, 286, 'The lexical analyser.', 1),
(923, 286, 'The syntax analyser.', 0),
(924, 287, 'Reduce-Reduce, Reduce-Reduce', 0),
(925, 287, 'Reduce-Reduce, Shift-Reduce', 1),
(926, 287, 'Shift-Reduce, Reduce-Reduce', 0),
(927, 287, 'Shift-Reduce,  Shift-Reduce', 0),
(928, 289, 'Leftmost in reverse', 0),
(929, 289, 'Rightmost in reverse', 1),
(930, 289, 'Leftmost', 0),
(931, 289, 'Rightmost', 0),
(932, 291, 'X1 = L, X2 = L, X3 = L1, X4 = T', 0),
(933, 291, 'X1 = L, X2 = T, X3 = L1, X4 = L', 1),
(934, 291, 'X1 = T, X2 = L, X3 = L1, X4 = T', 0),
(935, 291, 'X1 = T, X2 = L, X3 = T, X4 = L1', 0),
(936, 293, 'Symbol table is accessed only during lexical analysis and syntax analysis.', 0),
(937, 293, 'Compilers for programming languages that support recursion necessarily need heap storage for memory allocation in the run-time environment.', 0),
(938, 293, 'Errors violating the condition ‘any variable must be declared before its use’ are detected during syntax analysis.', 0),
(939, 293, 'None of them', 1),
(940, 294, 'Only Rule 2 is L-attributed.', 0),
(941, 294, 'Neither Rule 1 nor Rule 2 is L-attributed.', 0),
(942, 294, 'Both Rule 1 and Rule 2 are L-attributed.', 0),
(943, 294, 'Only Rule 1 is L-attributed.', 1),
(944, 295, 'Context-free grammar can be used to specify both lexical and syntax rules.', 0),
(945, 295, 'Type checking is done before parsing.', 1),
(946, 295, 'High-level language programs can be translated to different Intermediate Representations.', 0),
(947, 295, 'Arguments to a function can be passed using the program stack.', 0),
(948, 297, 'T<sub>3</sub>T<sub>3</sub>', 1),
(949, 297, 'T<sub>2</sub>T<sub>1</sub>T<sub>3</sub>', 0),
(950, 297, 'T<sub>1</sub>T<sub>1</sub>T<sub>3</sub>', 0),
(951, 297, 'T<sub>1</sub>T<sub>2</sub>T<sub>3</sub>', 0),
(952, 296, '$ has higher precedence and is left associative; # is right associative', 1),
(953, 296, '# has higher precedence and is left associative; $ is right associative', 0),
(954, 296, '$ has higher precedence and is left associative; # is left associative', 0),
(955, 296, '# has higher precedence and is right associative; $ is left associative', 0),
(956, 298, '<img src=\"./image/choice/298.1.jpg\"/><br/>', 0),
(957, 298, '<img src=\"./image/choice/298.2.jpg\"/><br/>', 1),
(958, 298, '<img src=\"./image/choice/298.3.jpg\"/><br/>', 0),
(959, 298, '<img src=\"./image/choice/298.4.jpg\"/><br/>', 0),
(960, 299, '{R}', 0),
(961, 299, '{w}', 0),
(962, 299, '{w, y}', 1),
(963, 299, '{w, $}', 0),
(964, 302, 'P→(ii), Q→(iii), R→(iv), S→(i)', 0),
(965, 302, 'P→(ii), Q→(i), R→(iii), S→(iv)', 0),
(966, 302, ' P→(iii), Q→(iv), R→(i), S→(ii)', 1),
(967, 302, 'P→(i), Q→(iv), R→(ii), S→(iii)', 0),
(968, 303, 'Canonical LR is more powerful than SLR.', 1),
(969, 303, 'SLR is more powerful than LALR.', 0),
(970, 303, 'SLR is more powerful than Canonical LR.', 0),
(971, 303, 'None', 0),
(972, 304, '<img src=\"./image/choice/304.1.jpg\"/><br/>', 0),
(973, 304, '<img src=\"./image/choice/304.2.jpg\"/><br/>', 0),
(974, 304, '<img src=\"./image/choice/304.3.jpg\"/><br/>', 1),
(975, 304, '<img src=\"./image/choice/304.4.jpg\"/><br/>', 0),
(976, 308, 'P ↔ i, Q ↔ ii, R ↔ iv, S ↔ iii', 0),
(977, 308, 'P ↔ iii, Q ↔ i, R ↔ ii, S ↔ iv', 1),
(978, 308, 'P ↔ ii, Q ↔ iii, R ↔ i, S ↔ iv', 0),
(979, 308, 'P ↔ iv, Q ↔ i, R ↔ ii, S ↔ iii', 0),
(980, 309, '<img src=\"./image/choice/309.1.jpg\"/><br/>', 0),
(981, 309, '<img src=\"./image/choice/309.2.jpg\"/><br/>', 1),
(982, 309, '<img src=\"./image/choice/309.3.jpg\"/><br/>', 0),
(983, 309, '<img src=\"./image/choice/309.4.jpg\"/><br/>', 0),
(984, 310, 'Viable prefixes appear only at the bottom of the stack and not inside', 0),
(985, 310, 'Viable prefixes appear only at the top of the stack and not inside', 0),
(986, 310, 'The stack contains only a set of viable prefixes', 1),
(987, 310, 'The stack never contains viable prefixes', 0),
(988, 312, 'a<sub>n-2</sub>+a<sub>n-1</sub>+2<sup>n-2 </sup>', 1),
(989, 312, 'a<sub>n-2</sub>+2a<sub>n-1</sub>+2<sup>n-2 </sup>', 0),
(990, 312, '2a<sub>n-2</sub>+a<sub>n-1</sub>+2<sup>n-2 </sup>', 0),
(991, 312, '2a<sub>n-2</sub>+2a<sub>n-1</sub>+2<sup>n-2 </sup>', 0),
(992, 313, 'p, s, u', 0),
(993, 313, 'r, s, u', 0),
(994, 313, 'r, u', 1),
(995, 313, 'q, v', 0),
(996, 314, 'In both AST and CFG, let node, N<sup>2</sup> be the successor of node N<sup>1</sup>. In the input program, the code corresponding to N<sup>2</sup> is present after the code corresponding in N<sup>1</sup>.', 0),
(997, 314, 'For any input program, neither AST nor CFG will contain a cycle', 0),
(998, 314, 'The maximum number of successors of a node in an AST and a CFG depends on the input program', 1),
(999, 314, 'Each node is AST and CFG corresponds to at most one statement in the input program', 0),
(1000, 315, 'P-2,Q-3,R-1,S-4 ', 0),
(1001, 315, 'P-2,Q-1,R-4,S-3', 0),
(1002, 315, 'P-2,Q-4,R-1,S-3', 1),
(1003, 315, 'P-2,Q-3,R-4,S-1', 0),
(1004, 316, '5 and 7 ', 0),
(1005, 316, '6 and 7 ', 1),
(1006, 316, '5 and 5 ', 0),
(1007, 316, ' 7 and 8 ', 0),
(1008, 317, 'SLR, LALR ', 0),
(1009, 317, 'Canonical LR, LALR ', 0),
(1010, 317, 'SLR, canonical LR ', 1),
(1011, 317, 'LALR, canonical LR ', 0),
(1012, 318, 'Only S1 ', 0),
(1013, 318, ' Only S2 ', 0),
(1014, 318, 'Both S1 and S2 ', 0),
(1015, 318, 'Neither S1 nor S2', 1),
(1016, 319, 'A basic block is a sequence of instructions where control enters the sequence at the beginning and exits at the end. ', 1),
(1017, 319, 'Available expression analysis can be used for common subexpression elimination. ', 1),
(1018, 319, 'Live variable analysis can be used for dead code elimination. ', 1),
(1019, 319, 'x=4*5⇒x=20 is an example of common subexpression elimination. ', 0),
(1020, 320, 'a shift-reduce conflict and a reduce-reduce conflict. ', 0),
(1021, 320, 'a shift-reduce conflict but not a reduce-reduce conflict. ', 0),
(1022, 320, 'a reduce-reduce conflict but not a shift-reduce conflict. ', 0),
(1023, 320, 'neither a shift-reduce nor a reduce-reduce conflict. ', 1),
(1024, 321, 'Neither L nor L\' is recursively enumerable (r.e.). ', 0),
(1025, 321, 'One of L and L\' is r.e. but not recursive; the other is not r.e. ', 0),
(1026, 321, 'Both L and L\' are r.e. but not recursive. ', 1),
(1027, 321, 'Both L and L\' are recursive. ', 0),
(1028, 322, '0*1(1+00*1)*', 1),
(1029, 322, '0*1*1+11*0*1', 0),
(1030, 322, '(0+1)*1', 1),
(1031, 322, 'None', 0),
(1032, 323, '+ is left associative, while ∗ is right associative ', 0),
(1033, 323, '+ is right associative, while ∗ is left associative ', 1),
(1034, 323, 'Both + and ∗ are right associative ', 0),
(1035, 323, 'Both + and ∗ are left associative ', 0),
(1036, 324, 'Dynamic memory allocation ', 1),
(1037, 324, 'Type checking ', 0),
(1038, 324, 'Symbol table management ', 0),
(1039, 324, 'Inline expansion ', 0),
(1040, 325, 'X is declared as “int X[32][32][8]”. ', 1),
(1041, 325, 'X is declared as “int X[4][1024][32]”. ', 0),
(1042, 325, 'X is declared as “char X[4][32][8]”. ', 0),
(1043, 325, 'X is declared as “char X[32][16][2]”. ', 0),
(1044, 326, 'make parsing and semantic analysis simpler. ', 0),
(1045, 326, 'improve error recovery and error reporting. ', 0),
(1046, 326, 'increase the chances of reusing the machine-independent code optimizer in other compilers. ', 1),
(1047, 326, 'improve the register allocation. ', 0),
(1048, 327, 'Static allocation of all data areas by a compiler makes it impossible to implement recursion', 1),
(1049, 327, 'Automatic garbage collection is essential to implement recursion.', 0),
(1050, 327, 'Dynamic allocation of activation records is essential to implement recursion.', 1),
(1051, 327, 'Both heap and stack are essential to implement recursion.  ', 0),
(1052, 329, 'n/2', 0),
(1053, 329, 'n-1', 1),
(1054, 329, '2n-1', 0),
(1055, 329, '2<sup>n</sup>', 0),
(1056, 330, 'Cannot be merged since look aheads are different.', 1),
(1057, 330, 'Can be merged but will result in S-R conflict.', 1),
(1058, 330, 'Can be merged but will result in R-R conflict.', 1),
(1059, 330, 'Cannot be merged since goto on c will lead to two different sets.', 1),
(1060, 331, '<img src=\"./image/choice/331.1.jpg\"/><br/>', 0),
(1061, 331, '<img src=\"./image/choice/331.2.jpg\"/><br/>', 0),
(1062, 331, '<img src=\"./image/choice/331.3.jpg\"/><br/>', 0),
(1063, 331, '<img src=\"./image/choice/331.4.jpg\"/><br/>', 1),
(1064, 332, 'FIRST(A) = {a,b,ε} = FIRST(B)<br/> FOLLOW(A) = {a,b}<br/> FOLLOW(B) = {a,b,$} <br/>', 1),
(1065, 332, ' FIRST(A) = {a,b,$}<br/> FIRST(B) = {a,b,ε}<br/> FOLLOW(A) = {a,b}<br/> FOLLOW(B) = {$} <br/>', 0),
(1066, 332, 'FIRST(A) = {a,b,ε} = FIRST(B)<br/> FOLLOW(A) = {a,b}<br/> FOLLOW(B) = ∅ <br/>', 0),
(1067, 332, 'FIRST(A) = {a,b} = FIRST(B)<br/> FOLLOW(A) = {a,b}<br/> FOLLOW(B) = {a,b} <br/>', 0),
(1068, 333, ' E1: S → aAbB,A → S<br/> E2: S → bAaB,B→S<br/> E3: B → S <br/>', 0),
(1069, 333, ' E1: S → aAbB,S→ ε<br/> E2: S → bAaB,S → ε<br/> E3: S → ε <br/>', 0),
(1070, 333, 'E1: S → aAbB,S → ε<br/> E2: S → bAaB,S→ε<br/> E3: B → S <br/>', 1),
(1071, 333, 'E1: A → S,S →ε<br/> E2: B → S,S → ε<br/> E3: B →S<br/>', 0),
(1072, 334, 'Finite state automata', 1),
(1073, 334, 'Deterministic pushdown automata', 0),
(1074, 334, 'Non-Deterministic pushdown automata', 0),
(1075, 334, 'Turing machine', 0),
(1076, 335, 'parsing of the program ', 0),
(1077, 335, 'the code generation ', 0),
(1078, 335, 'the lexical analysis of the program ', 1),
(1079, 335, 'dataflow analysis', 0),
(1080, 336, '<img src=\"./image/choice/336.1.jpg\"/><br/>', 0),
(1081, 336, '<img src=\"./image/choice/336.2.jpg\"/><br/>', 1),
(1082, 336, '<img src=\"./image/choice/336.3.jpg\"/><br/>', 0),
(1083, 336, '<img src=\"./image/choice/336.4.jpg\"/><br/>', 0),
(1084, 338, 'Abstract syntax tree', 0),
(1085, 338, 'Symbol table', 1),
(1086, 338, 'Semantic stack', 0),
(1087, 338, 'Parse Table ', 0),
(1088, 339, 'Those that support recursion', 0),
(1089, 339, 'Those that use dynamic scoping ', 0),
(1090, 339, 'Those that allow dynamic data structures', 1),
(1091, 339, 'Those that use global variables ', 0),
(1092, 341, 'LL(1) but not LR(1)', 0),
(1093, 341, 'LR(1) but not LR(1)', 0),
(1094, 341, 'Both LL(1) and LR(1) ', 1),
(1095, 341, 'Neither LL(1) nor LR(1)', 0),
(1096, 342, 'P-4, Q-1, R-2, S-3 ', 0),
(1097, 342, 'P-3, Q-1, R-4, S-2 ', 1),
(1098, 342, 'P-3, Q-4, R-1, S-2', 0),
(1099, 342, 'P-2, Q-1, R-4, S-3 ', 0),
(1100, 343, 'There exist parsing algorithms for some programming languages whose complexities are less than q (n<sup>3</sup> )', 1),
(1101, 343, 'A programming language which allows recursion can be implemented with static storage', 0),
(1102, 343, 'No L-attributed definition can be evaluated in the framework of bottom-up parsing', 0),
(1103, 343, 'Code improving transformations can be performed at both source language and intermediate code level', 1),
(1104, 344, 'It is the position in a sentential form where the next shift or reduce operation will occur. ', 0),
(1105, 344, 'It is non-terminal whose production will be used for reduction in the next step.', 0),
(1106, 344, 'It is a production that may be used for reduction in a future step along with a position in the sentential form where the next shift or reduce operation will occur. ', 0),
(1107, 344, 'It is the production p that will be used for reduction in the next step along with a position in the sentential form where the right hand side of the production may be found. ', 1),
(1108, 345, 'They enhance the portability of the compiler to other target processors ', 1),
(1109, 345, 'Program analysis is more accurate on intermediate code than on machine code ', 0),
(1110, 345, 'The information from dataflow analysis cannot otherwise be used for optimization', 0),
(1111, 345, 'The information from the front end cannot otherwise be used for optimization ', 0),
(1112, 346, 'II and V only', 1),
(1113, 346, 'I, III and IV only ', 0),
(1114, 346, 'I, II and V only ', 0),
(1115, 346, 'II, III and V only', 0),
(1116, 347, 'the SLR(1) parser for G has S-R conflicts ', 0),
(1117, 347, 'the LR(1) parser for G has S-R conflicts ', 1),
(1118, 347, 'the LR(0) parser for G has S-R conflicts', 0),
(1119, 347, 'the LALR(1) parser for G has reduce-reduce conflicts ', 0),
(1120, 348, 'Recursive descent parser. ', 1),
(1121, 348, 'Operator precedence parser.', 0),
(1122, 348, 'An LR(k) parser. ', 0),
(1123, 348, 'An LALR(k) parser. ', 0),
(1124, 349, 'it is left recursive ', 0),
(1125, 349, 'it is right recursive', 0),
(1126, 349, 'it is ambiguous ', 1),
(1127, 349, 'it is not context-free', 0),
(1128, 350, 'Both P and Q are true ', 0),
(1129, 350, 'P is true and Q is false ', 0),
(1130, 350, 'P is false and Q is true ', 1),
(1131, 350, 'Both P and Q are false ', 0),
(1132, 351, 'aaaabb ', 0),
(1133, 351, 'aabbbb ', 0),
(1134, 351, 'aabbab', 1),
(1135, 351, 'abbbba', 0),
(1136, 352, 'L (D) ⊂ L (G)', 0),
(1137, 352, 'L (D) ⊃ L (G)', 0),
(1138, 352, 'L (D) = L (G)', 1),
(1139, 352, 'L (D) is empty', 0),
(1140, 353, '(i) and (ii) ', 0),
(1141, 353, '(ii) and (iii)', 0),
(1142, 353, '(i) and (iii)', 0),
(1143, 353, 'None of the above ', 1),
(1144, 354, '2 * 3 + 4 ', 0),
(1145, 354, '2 * + 3 4 ', 0),
(1146, 354, '2 3 * 4 + ', 0),
(1147, 354, '2 3 4+* ', 1),
(1148, 355, 'The code contains loop invariant computation ', 0),
(1149, 355, 'There is scope of common sub-expression elimination in this code', 0),
(1150, 355, 'There is scope of strength reduction in this code ', 0),
(1151, 355, 'There is scope of dead code elimination in this code ', 1),
(1152, 356, '{S → FR} and {R → ε} ', 1),
(1153, 356, '{S → FR} and { }', 0),
(1154, 356, '{S → FR} and {R → *S}', 0),
(1155, 356, '{F → id} and {R → ε}', 0),
(1156, 357, 'ambiguous ', 1),
(1157, 357, 'left-recursive', 0),
(1158, 357, 'right-recursive', 0),
(1159, 357, 'an operator-grammar ', 0),
(1160, 358, 'It detects recursion and eliminates recursion ', 0);
INSERT INTO `choice` (`id`, `q_id`, `choice`, `correct`) VALUES
(1161, 358, 'It detects reduce-reduce conflict, and resolves ', 0),
(1162, 358, 'It detects shift-reduce conflict, and resolves the conflict in favor of a shift over a reduce action ', 1),
(1163, 358, 'It detects shift-reduce conflict, and resolves the conflict in favor of a reduce over a shift action ', 0),
(1164, 359, 'Equal precedence and left associativity; expression is evaluated to 7 ', 0),
(1165, 359, 'Equal precedence and right associativity; expression is evaluated to 9 ', 1),
(1166, 359, 'Precedence of \'×\' is higher than that of \'+\', and both operators are left associative; expression is evaluated to 7 ', 0),
(1167, 359, 'Precedence of \'+\' is higher than that of \'×\', and both operators are left associative; expression is evaluated to 9 ', 0),
(1168, 360, 'No compilation error ', 1),
(1169, 360, 'Only a lexical error ', 0),
(1170, 360, 'Only syntactic errors ', 0),
(1171, 360, 'Both lexical and syntactic errors ', 0),
(1172, 361, 'n, E + n and E + n × n ', 0),
(1173, 361, 'n, E + n and E + E × n ', 0),
(1174, 361, 'n, n + n and n + n × n ', 0),
(1175, 361, 'n, E + n and E × n ', 1),
(1176, 362, 'n1 < n2 < n3 ', 0),
(1177, 362, 'n1 = n3 < n2 ', 1),
(1178, 362, 'n1 = n2 = n3 ', 0),
(1179, 362, 'n1 ≥ n3 ≥ n2', 0),
(1180, 363, 'P → QR', 1),
(1181, 363, 'P → QsR', 0),
(1182, 363, 'P → ε', 1),
(1183, 363, 'P → QtRr', 0),
(1184, 364, 'Edit time', 0),
(1185, 364, 'Compile time ', 0),
(1186, 364, 'Link time ', 1),
(1187, 364, 'Load time', 0),
(1188, 365, 'E1 should be evaluated first ', 0),
(1189, 365, 'E2 should be evaluated first ', 1),
(1190, 365, 'Evaluation of E1 and E2 should necessarily be interleaved ', 0),
(1191, 365, 'Order to evaluation of E1 and E2 is of no consequence ', 0),
(1192, 367, '{w|N<sub>a</sub>(w) > 3N<sub>b</sub>(w)} ', 0),
(1193, 367, '{w|N<sub>b</sub>(w) > 3N<sub>a</sub>(w)}', 0),
(1194, 367, '{w|N<sub>a</sub>(w) = 3k, k Î {0, 1, 2, ...}} ', 1),
(1195, 367, '{w|N<sub>b</sub>(w) = 3k, k Î {0, 1, 2, ...}} ', 0),
(1196, 368, 'Removing left recursion alone ', 0),
(1197, 368, 'Factoring the grammar alone ', 0),
(1198, 368, 'Removing left recursion and factoring the grammar', 0),
(1199, 368, 'None of the above', 1),
(1200, 369, 'n<sub>1</sub> is necessarily less than n<sub>2</sub>', 0),
(1201, 369, 'n<sub>1</sub> is necessarily equal to n<sub>2</sub> ', 1),
(1202, 369, 'n<sub>1</sub> is necessarily greater than n<sub>2</sub> ', 0),
(1203, 369, 'None of the above ', 0),
(1204, 370, 'always be evaluated ', 0),
(1205, 370, 'be evaluated only if the definition is L-attributed ', 1),
(1206, 370, 'be evaluated only if the definition has synthesized attributes ', 0),
(1207, 370, 'never be evaluated ', 0),
(1208, 371, 'In statically typed languages, each variable in a program has a fixed type ', 0),
(1209, 371, 'In un-typed languages, values do not have any types ', 0),
(1210, 371, 'In dynamically typed languages, variables have no types', 1),
(1211, 371, 'In all statically typed languages, each variable in a program is associated with values of only a single type during the execution of the program ', 0),
(1212, 372, '{S\'→e S} and {S\'→ε} ', 0),
(1213, 372, '{S\'→e S} and { } ', 0),
(1214, 372, '{S\'→ε} and {S\'→ε} ', 0),
(1215, 372, '{S\'→e S, S\'→ε} and {S\'→ε} ', 1),
(1216, 373, 'LL(1) ', 1),
(1217, 373, 'SLR(1) but not LL(1) ', 0),
(1218, 373, 'LALR(1) but not SLR(1) ', 0),
(1219, 373, 'LR(1) but not LALR(1) ', 0),
(1220, 374, '9 + 5 + 2 ', 0),
(1221, 374, '9 5 + 2 +  ', 1),
(1222, 374, '9 5 2 + +', 0),
(1223, 374, '+ + 9 5 2', 0),
(1224, 375, 'X = Y + Z ', 0),
(1225, 375, 't<sub>1</sub> = Y + Z; X = t<sub>1</sub> ', 1),
(1226, 375, 't<sub>1</sub>= Y; t<sub>2</sub> = t<sub>1</sub> + Z; X = t<sub>2</sub>', 0),
(1227, 375, 't<sub>1</sub> = Y; t<sub>2</sub> = Z; t<sub>3</sub> = t<sub>1</sub> + t<sub>2</sub>; X = t<sub>3</sub> ', 0),
(1228, 376, 'Smaller sizes of executable files ', 0),
(1229, 376, 'Lesser overall page fault rate in the system ', 1),
(1230, 376, 'Faster program startup ', 0),
(1231, 376, 'Existing programs need not be re-linked to take advantage of newer versions of libraries', 0),
(1232, 378, 'Leftmost derivation ', 1),
(1233, 378, 'Leftmost derivation traced out in reverse ', 0),
(1234, 378, 'Rightmost derivation ', 0),
(1235, 378, 'Rightmost derivation traced out in reverse ', 0),
(1236, 379, '* has higher precedence than +', 0),
(1237, 379, '- has higher precedence than * ', 1),
(1238, 379, '+ and – have same precedence ', 0),
(1239, 379, '+ has higher precedence than * ', 0),
(1240, 380, 'LL (1) ', 0),
(1241, 380, 'Canonical LR ', 1),
(1242, 380, 'SLR', 0),
(1243, 380, 'LALR', 0),
(1244, 381, 'Assembler', 0),
(1245, 381, 'Linker', 0),
(1246, 381, 'Loader ', 1),
(1247, 381, 'Compiler', 0),
(1248, 382, 'SLR parser is more powerful than LALR', 0),
(1249, 382, 'LALR parser is more powerful than Canonical LR parser', 0),
(1250, 382, 'Canonical LR parser is more powerful than LALR parser', 1),
(1251, 382, 'The parsers SLR, Canonical CR, and LALR have the same power', 0),
(1252, 383, 'lexical analysis', 0),
(1253, 383, 'syntax analysis', 0),
(1254, 383, 'syntax directed translation', 1),
(1255, 383, 'code optimization', 0),
(1256, 384, '‘⊕’ is left associative while ‘*’ is right associative ', 1),
(1257, 384, 'Both ‘⊕’ and ‘*’ is left associative ', 0),
(1258, 384, '‘⊕’ is right associative while ‘*’ is left associative ', 0),
(1259, 384, 'None of the above', 0),
(1260, 385, 'A compiler using static memory allocation can be written for L ', 0),
(1261, 385, 'A compiler cannot be written for L; an interpreter must be used', 0),
(1262, 385, 'A compiler using dynamic memory allocation can be written for L', 1),
(1263, 385, 'None of the above', 0),
(1264, 386, 'test a condition during the execution of the expanded program ', 0),
(1265, 386, 'to expand certain model statements depending upon the value of a condition during the execution of the expanded program ', 0),
(1266, 386, 'to implement recursion ', 0),
(1267, 386, 'to expand certain model statements depending upon the value of a condition during the process of macro expansion', 1),
(1268, 387, 'that support recursion ', 0),
(1269, 387, 'that support dynamic data structures', 1),
(1270, 387, 'that use dynamic scope rules', 0),
(1271, 387, 'None of the above', 0),
(1272, 388, '1, 2, 1, 2 ', 0),
(1273, 388, '2, 1, 2, 1', 1),
(1274, 388, '2, 1, 1, 2', 0),
(1275, 388, '1, 2, 2, 2 ', 0),
(1276, 389, '(ii) only ', 1),
(1277, 389, '(i) only ', 0),
(1278, 389, 'both (i) and (ii) ', 0),
(1279, 389, 'None of the above ', 0),
(1280, 390, 'Object code', 1),
(1281, 390, 'Relocation bits', 0),
(1282, 390, 'Names and locations of all external symbols defined in the object module ', 0),
(1283, 390, 'Absolute addresses of internal symbols ', 0),
(1284, 391, '23131', 1),
(1285, 391, '11233 ', 0),
(1286, 391, '11231', 0),
(1287, 391, '33211 ', 0),
(1288, 392, 'it makes implementation of lexical analysis and syntax analysis easier ', 0),
(1289, 392, 'syntax-directed translations can be written for intermediate code generation ', 0),
(1290, 392, 'it enhances the portability of the front end of the compiler ', 1),
(1291, 392, 'it is not possible to generate code for real machines directly from high level language programs ', 0),
(1292, 393, '(i) - (d), (ii) - (a), (iii) - (c), (iv) - (b)', 0),
(1293, 393, '(i) - (d), (ii) - (a), (iii) - (b), (iv) - (c)', 0),
(1294, 393, '(i) - (a), (ii) - (d), (iii) - (b), (iv) - (c)', 1),
(1295, 393, '(i) - (d), (ii) - (b), (iii) - (c), (iv) - (a)', 0),
(1296, 394, 'The go to part of both tables may be different. ', 0),
(1297, 394, 'The shift entries are identical in both the tables. ', 1),
(1298, 394, 'The reduce entries in the tables may be different. ', 1),
(1299, 394, 'The error entries in the tables may be different. ', 1),
(1300, 395, 'Assembly ', 0),
(1301, 395, 'Parsing ', 0),
(1302, 395, 'Relocation ', 1),
(1303, 395, 'Symbol resolution ', 0),
(1304, 396, 'An unambiguous grammar has same leftmost and rightmost derivation ', 0),
(1305, 396, 'An LL(1) parser is a top-down parser ', 1),
(1306, 396, 'LALR is more powerful than SLR ', 1),
(1307, 396, 'An ambiguous grammar can never be LR(k) for any k ', 1),
(1308, 397, 'Recursive descent parsing cannot be used for grammar with left recursion. ', 1),
(1309, 397, 'The intermediate form the representing expressions which is best suited for code optimization is the post fix form. ', 0),
(1310, 397, 'A programming language not supporting either recursion or pointer type does not need the support of dynamic memory allocation. ', 0),
(1311, 397, 'Although C does not support call by name parameter passing, the effect can be correctly simulated in C. ', 1),
(1312, 398, 'matches the parameters of the macro-definition with locations of the parameters of the macro call ', 0),
(1313, 398, 'matches external names of one program with their location in other programs ', 1),
(1314, 398, 'matches the parameters of subroutine definition with the location of parameters of subroutine call', 0),
(1315, 398, 'acts as link between text editor and the user ', 0),
(1316, 399, '(a) - (q), (b) - (r), (c) - (s), (d) - (p)', 0),
(1317, 399, '(a) - (s), (b) - (p), (c) - (q), (d) - (r)', 1),
(1318, 399, '(a) - (p), (b) - (r), (c) - (s), (d) - (q)', 0),
(1319, 399, '(a) - (r), (b) - (s), (c) - (q), (d) - (p)', 0),
(1320, 400, '(a) - (q), (b) - (r), (c) - (s), (d) - (p)', 1),
(1321, 400, '(a) - (s), (b) - (p), (c) - (q), (d) - (r)', 0),
(1322, 400, '(a) - (p), (b) - (r), (c) - (s), (d) - (q)', 0),
(1323, 400, '(a) - (r), (b) - (s), (c) - (q), (d) - (p)', 0),
(1324, 401, 'Suffix (L) = {y ∈ Σ<sup>*</sup> such that xy ∈ L}', 0),
(1325, 401, '{ww<sup>R</sup> │w ∈ L}', 1),
(1326, 401, 'Prefix (L) = {x ∈ Σ<sup>*</sup>│∃y ∈ Σ<sup>*</sup> such that xy ∈ L}', 0),
(1327, 401, 'L ∙ L<sup>R</sup> = {xy │ x ∈ L, y<sup>R</sup> ∈ L}', 0),
(1328, 402, '3', 0),
(1329, 402, '9', 0),
(1330, 402, '5', 0),
(1331, 402, '24', 1),
(1332, 403, 'Set of all recursively enumerable languages over the alphabet {0,1}', 0),
(1333, 403, 'Set of all syntactically valid C programs', 0),
(1334, 403, 'Set of all languages over the alphabet {0,1}', 1),
(1335, 403, 'Set of all non-regular languages over the alphabet {0,1}', 1),
(1336, 404, '{ww<sup>R</sup> |w ∈ {a,b}<sup>*</sup>}', 1),
(1337, 404, '{wa<sup>n</sup>w<sup>R</sup>b<sup>n</sup> |w ∈ {a,b}<sup>*</sup>, n ≥ 0}', 0),
(1338, 404, '{a<sup>n</sup>b<sup>i</sup> | i ∈ {n, 3n, 5n}, n ≥ 0}', 1),
(1339, 404, '{wa<sup>n</sup>b<sup>n</sup>w<sup>R</sup> |w ∈ {a,b}<sup>*</sup>, n ≥ 0}', 1),
(1340, 405, 'L is deterministic context-free', 1),
(1341, 405, 'L is context-free but not deterministic context-free', 0),
(1342, 405, 'L is not LL(k) for any k', 1),
(1343, 405, 'None', 0),
(1344, 406, 'I only', 0),
(1345, 406, 'II only', 0),
(1346, 406, 'Both I and II', 0),
(1347, 406, 'Neither I nor II ', 1),
(1348, 407, '10*(0*10*10*)* ', 0),
(1349, 407, '((0 + 1)*1(0 + 1)*1)*10*', 0),
(1350, 407, '(0*10*10*)*10*', 1),
(1351, 407, '(0*10*10*)*0*1 ', 0),
(1352, 408, 'L<sub>1</sub>', 1),
(1353, 408, 'L<sub>2</sub>', 0),
(1354, 408, 'L<sub>3</sub>', 1),
(1355, 408, 'L<sub>4</sub>', 1),
(1356, 410, 'L<sub>1</sub> is context-free but not regular and L<sub>2</sub> is context-free. ', 0),
(1357, 410, 'Neither L<sub>1</sub> nor L<sub>2</sub> is context-free. ', 0),
(1358, 410, 'L<sub>1</sub> is regular and L<sub>2</sub> is context-free.', 0),
(1359, 410, 'L<sub>1</sub> is context-free but L<sub>2</sub> is not context-free. ', 0),
(1360, 411, 'k ≥ 2<sup>n</sup> ', 0),
(1361, 411, 'k ≥ n ', 0),
(1362, 411, 'k ≤ n<sup>2</sup>', 0),
(1363, 411, 'k ≤ 2<sup>n</sup> ', 1),
(1364, 412, 'closed under complementation. ', 0),
(1365, 412, 'closed under intersection. ', 1),
(1366, 412, 'a subset of the set of all recursive languages. ', 0),
(1367, 412, 'an uncountable set. ', 0),
(1368, 414, '{a<sup>m</sup>b<sup>n</sup>c<sup>p</sup>d<sup>q</sup>&nbsp;∣ m + p = n + q, where m, n, p, q ≥ 0}', 1),
(1369, 414, '{a<sup>m</sup>b<sup>n</sup>c<sup>p</sup>d<sup>q</sup>&nbsp;∣ m = n and p = q, where m, n, p, q ≥ 0}', 1),
(1370, 414, '{a<sup>m</sup>b<sup>n</sup>c<sup>p</sup>d<sup>q</sup>&nbsp;∣ m = n = p and p ≠ q, where m, n, p, q ≥ 0}', 0),
(1371, 414, '{a<sup>m</sup>b<sup>n</sup>c<sup>p</sup>d<sup>q</sup>&nbsp;∣ mn = p + q, where m, n, p, q ≥ 0}', 0),
(1372, 415, 'For an unrestricted grammar G and a string w, whether w∈L(G)', 1),
(1373, 415, 'Given a Turing machine M, whether L(M) is regular', 1),
(1374, 415, 'Given two grammar G<sub>1</sub> and G<sub>2</sub>, whether L(G<sub>1</sub>) = L(G<sub>2</sub>)', 1),
(1375, 415, 'Given an NFA N, whether there is a deterministic PDA P such that N and P accept the same language ', 0),
(1376, 416, '{(ab)<sup>n</sup> (cb)<sup>n</sup>│n ≥ 1}', 0),
(1377, 416, '{(ab)<sup>n</sup> cb<sup>(m<sub>1</sub> )</sup> cb<sup>(m<sub>2</sub> )</sup>…cb<sup>(m<sub>n</sub> )</sup>│n,m<sub>1</sub>,m<sub>2</sub>,…,m<sub>n</sub> ≥ 1}', 1),
(1378, 416, '{(ab)<sup>n</sup> (cb<sup>m</sup>)<sup>n</sup>│m,n ≥ 1}', 0),
(1379, 416, '{(ab)<sup>n</sup> (cb<sup>n</sup>)<sup>m</sup>│m,n ≥ 1}', 0),
(1380, 418, 'abab', 0),
(1381, 418, 'aaab', 0),
(1382, 418, 'abbaa', 0),
(1383, 418, 'babba', 1),
(1384, 419, 'Finite', 0),
(1385, 419, 'Not finite but regular', 1),
(1386, 419, 'Context-Free but not regular', 0),
(1387, 419, 'Recursive but not context-free', 0),
(1388, 420, 'I only', 1),
(1389, 420, 'II only', 0),
(1390, 420, 'I and II', 0),
(1391, 420, 'Neither I nor II', 0),
(1392, 421, 'f is computable if and only if L<sub>f</sub> is recursive.', 1),
(1393, 421, 'f is computable if and only if L<sub>f</sub> is recursively enumerable.', 0),
(1394, 421, 'If f is computable then L<sub>f</sub> is recursive, but not conversely.', 0),
(1395, 421, 'If f is computable then L<sub>f</sub> is recursively enumerable, but not conversely.', 0),
(1396, 422, 'L<sub>1</sub>∪L<sub>2</sub> is Context Free', 1),
(1397, 422, 'L\'<sub>1</sub> is Context Free', 0),
(1398, 422, 'L<sub>1</sub>-R is Context Free', 1),
(1399, 422, 'L<sub>1</sub>∩L<sub>2</sub> is Context Free', 0),
(1400, 423, '{a<sup>m</sup> b<sup>n</sup> │ m ≥ n, n > 0}', 0),
(1401, 423, '{a<sup>m</sup> b<sup>n</sup> │ m ≥ n, n ≥ 0}', 0),
(1402, 423, '{a<sup>m</sup> b<sup>n</sup> │ m > n, n ≥ 0}', 1),
(1403, 423, '{a<sup>m</sup> b<sup>n</sup> │ m > n, n > 0}', 0),
(1404, 425, '∅', 0),
(1405, 425, '{q<sub>0</sub>,q<sub>1</sub>,q<sub>3</sub>}', 0),
(1406, 425, '{q<sub>0</sub>,q<sub>1</sub>,q<sub>2</sub>}', 1),
(1407, 425, '{q<sub>0</sub>,q<sub>2</sub>,q<sub>3</sub>}', 0),
(1408, 426, 'L1 is context-free but not regular.', 0),
(1409, 426, ' L2 is not context-free.', 0),
(1410, 426, 'L3  is not context-free but recursive.', 1),
(1411, 426, 'L4 is deterministic context-free. ', 1),
(1412, 427, 'Given a regular expression R and a string w, is w ∈ L(R)?', 0),
(1413, 427, 'Given a context-free grammar G, is L(G) = ∅?', 0),
(1414, 427, 'Given a context-free grammar G, is L(G) = Σ* for some alphabet Σ?', 1),
(1415, 427, 'Given a Turing machine M and a string w, is w ∈ L(M)? ', 1),
(1416, 428, '{a<sup>n</sup>b<sup>m</sup> |n,m ≥ 0} ', 0),
(1417, 428, '{w ∈ {a,b}* | w has equal number of a’s and b’s} ', 0),
(1418, 428, '{a<sup>n</sup> |n ≥ 0}∪{b<sup>n</sup> |n ≥ 0}∪{a<sup>n</sup> b(sup>n|n ≥ 0} ', 0),
(1419, 428, '{a,b}*', 1),
(1420, 429, 'Given a TM M, is L(M) = Φ? ', 1),
(1421, 429, 'Given a CFG G = (N,Σ,P,S) and a string x ∈ Σ*, does x ∈ L(G)?', 0),
(1422, 429, 'Given CFGs G<sub>1</sub> and G<sub>2</sub>, is L(G<sub>1</sub>) = L(G<sub>2</sub>)?', 1),
(1423, 429, 'Given NFAs N<sub>1</sub> and N<sub>2</sub>, is L(N<sub>1</sub>)∩L(N<sub>2</sub>) = Φ?', 0),
(1424, 430, '(0   1)* 0011(0   1)*   (0   1)* 1100(0   1)*', 0),
(1425, 430, '(0   1)* (00(0   1)* 11   11(0   1)* 00)(0   1)*', 0),
(1426, 430, '(0   1)* 00(0   1)*   (0   1)* 11(0   1)* ', 0),
(1427, 430, '00(0   1)* 11   11(0   1)* 00', 0),
(1428, 431, '{a<sup>m</sup> b<sup>n</sup>│m &gt; 0 or n &gt; 0}  and {a<sup>m</sup> b<sup>n</sup> |m &gt; 0 and n &gt; 0} ', 0),
(1429, 431, '{a<sup>m</sup> b<sup>n</sup>│m &gt; 0 and n &gt; 0}  and {a<sup>m</sup> b<sup>n</sup> |m &gt; 0 or n≥0}', 0),
(1430, 431, '{a<sup>m</sup> b<sup>n</sup>│m≥0 or n &gt; 0}  and {a<sup>m</sup> b<sup>n</sup> |m &gt; 0 and n &gt; 0}', 0),
(1431, 431, '{a<sup>m</sup> b<sup>n</sup>│m≥0 and n &gt; 0}  and {a<sup>m</sup> b<sup>n</sup> |m &gt; 0 or n &gt; 0}', 1),
(1432, 432, 'L = {a<sup>n</sup> b<sup>n</sup>│n ≥ 0} and is not accepted by any ﬁnite automata ', 0),
(1433, 432, 'L = {a<sup>n</sup> |n≥0} ∪ {a<sup>n</sup>b<sup>n</sup>|n ≥ 0} and is not accepted by any deterministic PDA', 0),
(1434, 432, 'L is not accepted by any Turing machine that halts on every input ', 0),
(1435, 432, 'L = {a<sup>n</sup> |n ≥ 0} ∪ {a<sup>n</sup> b<sup>n</sup> |n ≥ 0} and is deterministic context-free', 1),
(1436, 433, 'W can be recursively enumerable and Z is recursive. ', 0),
(1437, 433, 'W can be recursive and Z is recursively enumerable. ', 0),
(1438, 433, 'W is not recursively enumerable and Z is recursive. ', 1),
(1439, 433, 'W is not recursively enumerable and Z is not recursive.', 0),
(1440, 435, 'Both P and Q are true ', 0),
(1441, 435, 'P is true and Q is false ', 0),
(1442, 435, 'P is false and Q is true ', 1),
(1443, 435, 'Both P and Q are false ', 0),
(1444, 436, 'I', 1),
(1445, 436, 'II', 1),
(1446, 436, 'III', 1),
(1447, 436, 'IV', 0),
(1448, 437, 'Only I is true ', 0),
(1449, 437, 'Only II is true ', 1),
(1450, 437, 'Both I and II are true ', 0),
(1451, 437, 'Both I and II are false', 0),
(1452, 438, 'Both L<sub>1</sub> and L<sub>2</sub> are context-free. ', 0),
(1453, 438, 'L<sub>1</sub> is context-free while L<sub>2</sub> is not context-free. ', 1),
(1454, 438, 'L<sub>2</sub> is context-free while L<sub>1</sub> is not context-free. ', 0),
(1455, 438, 'Neither L<sub>1</sub> nor L<sub>2</sub> is context-free.', 0),
(1456, 439, 'L<sub>1</sub> is recursive and L<sub>2</sub>, L<sub>3</sub> are not recursive ', 0),
(1457, 439, 'L<sub>2</sub> is recursive and L<sub>1</sub>, L<sub>3</sub> are not recursive ', 0),
(1458, 439, 'L<sub>1</sub>, L<sub>2</sub> are recursive and L<sub>3</sub> is not recursive ', 1),
(1459, 439, 'L<sub>1</sub>, L<sub>2</sub>, L<sub>3</sub> are recursive', 0),
(1460, 440, 'Both G1 and G2', 1),
(1461, 440, 'Only G1 ', 0),
(1462, 440, 'Only G2 ', 0),
(1463, 440, 'Neither G1 nor G2', 0),
(1464, 441, 'I', 1),
(1465, 441, 'II', 0),
(1466, 441, 'III', 0),
(1467, 441, 'IV', 1),
(1468, 443, 'I', 1),
(1469, 443, 'II', 0),
(1470, 443, 'III', 1),
(1471, 443, 'none', 0),
(1472, 444, 'I', 1),
(1473, 444, 'II', 0),
(1474, 444, 'III', 1),
(1475, 444, 'none', 0),
(1476, 446, '10(0*   (10*)* 1', 0),
(1477, 446, '10(0*   (10)*)* 1', 0),
(1478, 446, '1(0   10)* 1', 1),
(1479, 446, '10(0   10)* 1   110(0   10)* 1', 0),
(1480, 448, 'If L4 ∈ P, L2 ∈ P', 1),
(1481, 448, 'If L1 ∈ P or L3 ∈ P, then L2 ∈ P', 0),
(1482, 448, 'L1 ∈ P, if and only if L3 ∈ P', 0),
(1483, 448, 'If L4 ∈ P, then L1 ∈ P and L3 ∈ P', 1),
(1484, 449, 'L1 = {a<sup>m</sup>b<sup>n</sup>a,sup>n</sup>b<sup>m</sup> ⎪ m, n ≥ 1}', 1),
(1485, 449, 'L2 = {a<sup>m</sup>b<sup>n</sup>a<sup>m</sup>b<sup>n</sup> ⎪ m, n ≥ 1}', 0),
(1486, 449, 'L3 = {a<sup>m</sup>b<sup>n</sup> ⎪ m = 2n   1}', 1),
(1487, 449, 'none', 0),
(1488, 450, 'The language L={a<sup>n</sup> b<sup>n</sup>│n≥0} is regular.', 1),
(1489, 450, 'The language L={a<sup>n</sup>│n is prime} is regular.', 1),
(1490, 450, 'The language L={w│w has 3k 1b\'s for some k∈N with Σ={a,b} } is regular.', 0),
(1491, 450, 'The language L={ww│w∈Σ* with Σ={0,1} } is regular.', 1),
(1492, 451, 'q<sub>0</sub>', 1),
(1493, 451, 'q<sub>1</sub>', 1),
(1494, 451, 'q<sub>2</sub>', 1),
(1495, 451, 'q<sub>3</sub>', 0),
(1496, 452, 'Only (I) ', 1),
(1497, 452, 'Only (II) ', 0),
(1498, 452, 'Both (I) and (II) ', 0),
(1499, 452, 'Neither (I) nor (II) ', 0),
(1500, 453, 'If A≤<sub>m</sub> B and B is recursive then A is recursive. ', 1),
(1501, 453, 'If A≤<sub>m</sub> Band A is undecidable then B is undecidable. ', 0),
(1502, 453, 'If A≤<sub>m</sub> Band B is recursively enumerable then A is recursively enumerable. ', 0),
(1503, 453, 'If A≤<sub>m</sub> B and B is not recursively enumerable then A is not recursively enumerable. ', 0),
(1504, 454, 'decidable and recursively enumerable ', 0),
(1505, 454, 'undecidable but recursively enumerable ', 1),
(1506, 454, 'undecidable and not recursively enumerable ', 0),
(1507, 454, 'decidable but not recursively enumerable ', 0),
(1508, 455, 'L<sub>1</sub> is regular but not L<sub>2</sub>', 0),
(1509, 455, 'L<sub>2</sub> is regular but not L<sub>1</sub>', 1),
(1510, 455, 'Both L<sub>1</sub> and L<sub>2</sub> are regular ', 0),
(1511, 455, 'Neither nor L<sub>1</sub> are L<sub>2</sub> regular ', 0),
(1512, 457, 'Both 2<sup>Σ<sup>*</sup></sup> and Σ<sup>*</sup> are countable', 0),
(1513, 457, '2<sup>Σ<sup>*</sup></sup> is countable and Σ<sup>*</sup> is uncountable', 0),
(1514, 457, '2<sup>Σ<sup>*</sup></sup> is uncountable and Σ<sup>*</sup> is countable', 1),
(1515, 457, 'Both 2<sup>Σ<sup>*</sup></sup> and Σ<sup>*</sup> are uncountable', 0),
(1516, 458, 'Deciding if a given context-free grammar is ambiguous. ', 1),
(1517, 458, 'Deciding if a given string is generated by a given context-free grammar. ', 0),
(1518, 458, 'Deciding if the language generated by a given context-free grammar is empty. ', 0),
(1519, 458, 'Deciding if the language generated by a given context-free grammar is finite. ', 0),
(1520, 459, 'L<sub>1</sub>', 1),
(1521, 459, 'L<sub>2</sub>', 1),
(1522, 459, 'L<sub>3</sub>', 0),
(1523, 459, 'none', 0),
(1524, 461, 'For every non-deterministic Turing machine, there exists an equivalent deterministic Turing machine.', 0),
(1525, 461, 'Turing recognizable languages are closed under union and complementation', 1),
(1526, 461, 'Turing decidable languages are closed under intersection and complementation.', 0),
(1527, 461, 'Turing recognizable languages are closed under union and intersection.', 0),
(1528, 462, 'he problem of determining whether there exists    a cycle in an undirected graph is in P.', 1),
(1529, 462, 'The problem of determining whether there exists    a cycle in an undirected graph is in NP.', 1),
(1530, 462, 'If a problem A is NP-Complete, there exists a     non-deterministic polynomial time algorithm to solve A.', 1),
(1531, 462, 'none', 0),
(1532, 463, '1, 2 and 3 ', 1),
(1533, 463, '1 and 2 only ', 0),
(1534, 463, '2 and 3 only ', 0),
(1535, 463, '1 and 3 only ', 0),
(1536, 464, 'Complement of L(A) is context-free.', 0),
(1537, 464, 'L(A) = L((11*0 0)(0   1)*0*1*)', 0),
(1538, 464, 'For the language accepted by A, A is the minimal DFA.', 1),
(1539, 464, 'A accepts all strings over {0, 1} of length at least 2.', 1),
(1540, 465, 'I', 0),
(1541, 465, 'II', 1),
(1542, 465, 'III', 1),
(1543, 465, 'IV', 0),
(1544, 466, '∅', 0),
(1545, 466, '{ε}', 1),
(1546, 466, 'a<sup>*</sup>', 0),
(1547, 466, '{a ,ε}', 0),
(1548, 467, 'I', 0),
(1549, 467, 'II', 0),
(1550, 467, 'III', 1),
(1551, 467, 'IV', 1),
(1552, 468, 'abaabaaabaa', 1),
(1553, 468, 'aaaabaaaa', 1),
(1554, 468, 'baaaaabaaaab', 0),
(1555, 468, 'baaaaabaa', 1),
(1556, 469, '<img src=\"./image/choice/469.1.jpg\"/><br/>', 0),
(1557, 469, '<img src=\"./image/choice/469.2.jpg\"/><br/>', 0),
(1558, 469, '<img src=\"./image/choice/469.3.jpg\"/><br/>', 0),
(1559, 469, '<img src=\"./image/choice/469.4.jpg\"/><br/>', 1),
(1560, 470, 'P ∩ Q ', 0),
(1561, 470, 'P – Q ', 0),
(1562, 470, 'Σ* – P ', 1),
(1563, 470, 'Σ* – Q', 0),
(1564, 471, 'Deterministic finite automata (DFA) and Non-deterministic finite automata (NFA)', 0),
(1565, 471, ' Deterministic push down automata (DPDA) and Non-deterministic push down automata (NFDA)', 1),
(1566, 471, 'Deterministic single-tape Turning machine and Non-deterministic single tape Turning machine', 0),
(1567, 471, 'Single-tape Turning machine and multi-tape Turning machine', 0),
(1568, 472, 'k+1 ', 0),
(1569, 472, 'n+1 ', 1),
(1570, 472, '2<sup>n+1</sup>', 0),
(1571, 472, '2<sup>k+1</sup>', 0),
(1572, 473, 'Push Down Automate (PDA) can be used to recognize L1 and L2', 0),
(1573, 473, 'L1 is a regular language', 0),
(1574, 473, 'All the three languages are context free', 1),
(1575, 473, 'Turing machines can be used to recognize all the languages', 0),
(1576, 474, 'L2 – L1 is recursively enumerable ', 0),
(1577, 474, 'L1 – L3 is recursively enumerable ', 1),
(1578, 474, 'L2 ∩ L1 is recursively enumerable ', 0),
(1579, 474, 'L2 ∪ L1 is recursively enumerable', 0),
(1580, 475, '(0 * 10 * 1)* ', 0),
(1581, 475, '0 * (10 * 10*)* ', 1),
(1582, 475, '0*(10 * 1*)*0*', 0),
(1583, 475, '0 * 1(10 * 1)*10*', 0),
(1584, 476, '1 = {0<sup>i</sup>1<sup>j</sup> | i != j}', 1),
(1585, 476, 'L2 = {0<sup>i</sup>1<sup>j</sup> | i = j}', 1),
(1586, 476, 'L3 = {0<sup>i</sup>1<sup>j</sup> | i = 2j 1}', 1),
(1587, 476, 'L4 = {0<sup>i</sup>1<sup>j</sup> | i != 2j}', 1),
(1588, 477, 'n-1', 0),
(1589, 477, 'n', 0),
(1590, 477, 'n+1', 1),
(1591, 477, '2<sup>n-1</sup>', 0),
(1592, 478, 'All palindromes.', 0),
(1593, 478, 'All odd length palindromes.', 1),
(1594, 478, 'Strings that begin and end with the same symbol.', 0),
(1595, 478, 'All even length palindromes.', 0),
(1596, 479, 'The set of all strings containing the substring 00. ', 0),
(1597, 479, 'The set of all strings containing at most two 0’s. ', 0),
(1598, 479, 'The set of all strings containing at least two 0’s. ', 1),
(1599, 479, 'The set of all strings that begin and end with either 0 or 1. ', 0),
(1600, 480, 'There is unique minimal DFA for every regular language.', 0),
(1601, 480, 'Every NFA can be converted to an equivalent PDA.', 0),
(1602, 480, 'Complement of every context-free language is recursive. ', 0),
(1603, 480, 'Every non-deterministic PDA can be converted to an equivalent deterministic PDA. ', 1),
(1604, 482, 'Not recursive ', 0),
(1605, 482, 'Regular ', 0),
(1606, 482, 'Context free but not regular', 0),
(1607, 482, 'Recursively enumerable but not context free', 0),
(1608, 483, 'begin either with 0 or 1 ', 0),
(1609, 483, 'end with 0 ', 0),
(1610, 483, 'end with 00', 1),
(1611, 483, 'contain the substring 00', 0),
(1612, 484, 'It is not accepted by a Turing Machine ', 0),
(1613, 484, 'It is regular but not context-free ', 0),
(1614, 484, 'It is context-free but not regular ', 0),
(1615, 484, 'It is neither regular nor context-free, but accepted by a Turing machine ', 1),
(1616, 485, 'Whether the intersection of two regular languages is infinite', 1),
(1617, 485, 'Whether a given context-free language is regular', 0),
(1618, 485, 'Whether two push-down automata accept the same language ', 0),
(1619, 485, 'Whether a given grammar is context-free  ', 1),
(1620, 486, 'regular', 0),
(1621, 486, 'context-free', 0),
(1622, 486, 'context-sensitive', 0),
(1623, 486, 'recursive', 1),
(1624, 487, 'Every NFA can be converted to an equivalent DFA', 0),
(1625, 487, 'Every non-deterministic Turing machine can be converted to an equivalent deterministic Turing machine ', 0),
(1626, 487, 'Every regular language is also a context-free language ', 0),
(1627, 487, 'Every subset of a recursively enumerable set is recursive', 1),
(1628, 488, '<img src=\"./image/choice/488.1.jpg\"/><br/>', 1),
(1629, 488, '<img src=\"./image/choice/488.2.jpg\"/><br/>', 0),
(1630, 488, '<img src=\"./image/choice/488.3.jpg\"/><br/>', 0),
(1631, 488, '<img src=\"./image/choice/488.4.jpg\"/><br/>', 0),
(1632, 489, 'Every left-recursive grammar can be converted to a right-recursive grammar and vice-versa', 1),
(1633, 489, 'All e-productions can be removed from any context-free grammar by suitable transformations ', 0),
(1634, 489, 'The language generated by a context-free grammar all of whose productions are of the form X ® w or X ® wY a non-terminal), is always regular (where, w is a string of  erminals and Y is', 1),
(1635, 489, 'The derivation trees of strings generated by a context-free grammar in Chomsky Normal Form are always binary trees', 1),
(1636, 490, 'E - P, F - R, G - Q, H - S', 0),
(1637, 490, 'E - R, F - P, G - S, H - Q', 0),
(1638, 490, 'E - R, F - P, G - Q, H - S ', 1),
(1639, 490, 'E - P, F - R, G - S, H - Q ', 0),
(1640, 491, 'P-2, Q-1, R-3, S-4 ', 0),
(1641, 491, 'P-1, Q-3, R-2, S-4 ', 0),
(1642, 491, 'P-1, Q-2, R-3, S-4', 1),
(1643, 491, 'P-3, Q-2, R-1, S-4', 0),
(1644, 492, 'I', 1),
(1645, 492, 'II', 0),
(1646, 492, 'III', 0),
(1647, 492, 'IV', 1),
(1648, 493, 'm ≤ 2<sup>n</sup>', 1),
(1649, 493, 'n ≤ m', 0),
(1650, 493, 'M has one accept state', 0),
(1651, 493, 'm = 2<sup>n</sup>', 0),
(1652, 494, 'Set of all strings that do not end with ab', 1),
(1653, 494, 'Set of all strings that begin with either an a or a b', 0),
(1654, 494, 'Set of all strings that do not contain the substring ab', 0),
(1655, 494, 'The set described by the regular expression b*aa*(ba)*b*', 0),
(1656, 496, 'Such an M cannot exist.', 0),
(1657, 496, 'Such Ms exist and their rank is always n.', 1),
(1658, 496, 'Such M s exist, but their eigenvalues are always real.', 0),
(1659, 496, 'No eigenvalue of any such M can be real.', 0),
(1660, 498, 'Strings  that  begin  and  end  with  the  same  symbol', 0),
(1661, 498, 'All  odd  and  even  length  palindromes', 0),
(1662, 498, 'All  odd  length  palindromes', 1),
(1663, 498, 'All even length palindromes', 0),
(1664, 499, ' Every  subset  of  a  regular  set  is  regular', 0),
(1665, 499, 'Every  finite  subset  of  non-regular  set  is  regular', 1),
(1666, 499, 'The union of two non-regular set is not regular', 0),
(1667, 499, 'Infinite  union  of  finite  set  is  regular', 0),
(1668, 500, 'union, intersection', 0),
(1669, 500, 'union, kleene closure', 1),
(1670, 500, 'ntersection; complement', 0),
(1671, 500, 'complement, kleene closure', 0),
(1672, 502, 'a technique for overcoming internal fragmentation', 0),
(1673, 502, 'a paging technique', 0),
(1674, 502, 'a technique for overcoming external fragmentation', 1),
(1675, 502, 'a technique for compressing the data', 0),
(1676, 503, 'resource allocation graph', 1),
(1677, 503, 'starvation graph', 0),
(1678, 503, 'inversion  graph', 0),
(1679, 503, 'none  of  the  above', 0),
(1680, 504, 'the  speed  of  dispatching  a  process  from  running  to  the  ready  state', 0),
(1681, 504, 'the time of dispatching a process from running to ready state and keeping the CPUidle', 0),
(1682, 504, 'he  time  to  stop  one  process  and  start  running  another  one', 1),
(1683, 504, 'none of these', 0),
(1684, 505, 'shortest job scheduling algorithm', 0),
(1685, 505, 'round robin scheduling algorithm', 1),
(1686, 505, 'priority scheduling algorithm', 0),
(1687, 505, 'multilevel queue scheduling algorithm', 0),
(1688, 506, 'Semaphores', 0),
(1689, 506, 'Test  and  set  instruction', 0),
(1690, 506, 'Both  options', 1),
(1691, 506, 'None  of  the  options', 0),
(1692, 507, 'Insertion sort', 0),
(1693, 507, 'Quick sort', 0),
(1694, 507, 'Merge sort', 1),
(1695, 507, 'Selection sort', 0),
(1696, 508, 'X > Y', 1),
(1697, 508, 'X < Y ', 0),
(1698, 508, 'X = Y', 0),
(1699, 508, 'X! = Y', 0),
(1700, 512, 'Sum equation of full adder', 1),
(1701, 512, 'Carry equation of full adder', 0),
(1702, 512, 'Borrow equation for full subtractor', 0),
(1703, 512, 'Difference equation of a full subtractor', 1),
(1704, 513, 'pos ← –1', 0),
(1705, 513, 'pos ← 0', 0),
(1706, 513, 'pos ← 1', 0),
(1707, 513, 'pos ← N – 1', 1),
(1708, 514, 'Every fish is eaten by some bear', 0),
(1709, 514, 'Bears eat only fish', 0),
(1710, 514, 'Every bear eats fish', 0),
(1711, 514, 'Only bears eat fish', 1),
(1712, 516, 'Only 1', 0),
(1713, 516, 'Only 2', 0),
(1714, 516, 'Both 1 and 2', 1),
(1715, 516, 'Immediate mode refers to data in cache', 0),
(1716, 517, 'The program counter holds the memory address of the instruction in execution.', 0),
(1717, 517, 'Only opcode is transferred to the control unit.', 0),
(1718, 517, 'An instruction in the instruction register consists of the opcode and the operand.', 0),
(1719, 517, 'The value of the program counter is incremented by 1 once its value has been read to the memory address register.', 1),
(1720, 518, ' 3 only', 0),
(1721, 518, '1 and 3 only', 1),
(1722, 518, '2 and 3 only', 0),
(1723, 518, '1, 2 and 3', 0),
(1724, 519, '(A – B)*C + (D*E) – (F + G)', 0),
(1725, 519, '(A + B)*C – (D – E)*(F + G) ', 1),
(1726, 519, '(A + B – C)*(D – E))*(F + G)', 0),
(1727, 519, '(A + B)*C – (D*E) – (F + G)', 0),
(1728, 520, 'v2v4', 0),
(1729, 520, 'v1v4', 1),
(1730, 520, 'v4v5', 0),
(1731, 520, 'v3v4', 0),
(1732, 521, '67, 12, 10, 5, 4, 7, 23', 0),
(1733, 521, '4, 7, 10, 23, 67, 12, 5', 1),
(1734, 521, '4, 5, 7, 67, 10, 12, 23', 0),
(1735, 521, '10, 7, 4, 67, 23, 12, 5', 0),
(1736, 522, 'BACE ', 1),
(1737, 522, 'CADE', 0),
(1738, 522, 'BAD', 0),
(1739, 522, 'CADD', 0),
(1740, 523, 'Grammar is not ambiguous', 0),
(1741, 523, 'Priority of + over * is ensured', 0),
(1742, 523, 'Right to left evaluation of * and + happens', 0),
(1743, 523, 'None of these', 1),
(1744, 524, 'Ο(n<sup>2</sup>)', 0),
(1745, 524, 'Ο(n log n)', 0),
(1746, 524, 'Ο(n)', 1),
(1747, 524, 'Ο(n log n log n)', 0),
(1748, 525, '5', 0),
(1749, 525, '8', 0),
(1750, 525, '13', 0),
(1751, 525, '0', 1),
(1752, 526, 'Always take the same time', 0),
(1753, 526, '(1/x + 1/z) < (1/w + 1/y) ', 1),
(1754, 526, 'x > y', 0),
(1755, 526, '(w + x) > (y + z)', 0),
(1756, 527, 'L<sub>1</sub> is not a CFL but L<sub>2</sub> is', 0),
(1757, 527, 'L<sub>1</sub> ∩ L<sub>2</sub> = ∅ and L<sub>1</sub> is non-regular', 1),
(1758, 527, 'L<sub>1</sub> ∪ L<sub>2</sub> is not a CFL but L<sub>2</sub> is', 0),
(1759, 527, 'There is a 4-state PDA that accepts L<sub>1</sub>, but there is no DPDA that accepts L<sub>2</sub>', 0),
(1760, 528, '{0<sup>n</sup> 10<sup>2n</sup> | n ≥ 1}', 0),
(1761, 528, '{0<sup>i</sup> 10<sup>j</sup> 10<sup>k</sup> | i, j, k ≥ 0} ∪ {0<sup>n</sup> 10<sup>2n</sup> | n ≥ l}', 1),
(1762, 528, '{0<sup>i</sup> 10<sup>j</sup> | i, j ≥ 0} ∪ {0<sup>n</sup> 10<sup>2n</sup> | n ≥ l}', 0),
(1763, 528, 'The set of all strings over {0, 1} containing at least two 0’s', 0),
(1764, 529, 'L<sub>2</sub> and L<sub>3</sub> only', 0),
(1765, 529, 'L<sub>1</sub> and L<sub>2</sub> only', 0),
(1766, 529, 'L<sub>3</sub> only', 0),
(1767, 529, 'L<sub>2</sub> only', 1),
(1768, 530, 'L1 = L2', 1),
(1769, 530, 'L1 ⊂ L2', 0),
(1770, 530, 'L1 ∩ L2‘ = ∅', 1),
(1771, 530, 'L1 ∪ L2 ≠ L1', 0),
(1772, 531, 'aabbaba', 0),
(1773, 531, 'aabaaba', 0),
(1774, 531, 'abababb', 0),
(1775, 531, 'aabbaab', 1),
(1776, 532, 'Membership problem for CFGs. ', 0),
(1777, 532, 'Ambiguity problem for CFGs. ', 1),
(1778, 532, 'Finiteness problem for FSAs.', 0),
(1779, 532, 'Equivalence problem for FSAs. ', 0),
(1780, 533, 'Every subset of a regular set is regular.', 0),
(1781, 533, 'Every finite subset of a non-regular set is regular. ', 1),
(1782, 533, 'The union of two non-regular sets is not regular. ', 0),
(1783, 533, 'Infinite union of finite sets is regular.', 0),
(1784, 535, 'not recursive.', 0),
(1785, 535, 'is recursive and is a deterministic CFL. ', 1),
(1786, 535, 'is a regular language. ', 0),
(1787, 535, 'is not a deterministic CFL but a CFL. ', 0),
(1788, 536, '{ww<sup>R</sup>|w ∈ {0,1}<sup>+</sup>} ', 0),
(1789, 536, '{ww<sup>R</sup>x|x, w ∈ {0,1}<sup>+</sup>} ', 1),
(1790, 536, '{wxw<sup>R</sup>|x, w ∈ {0,1}<sup>+</sup>}', 0),
(1791, 536, '{xww<sup>R</sup>|x, w ∈ {0,1}<sup>+</sup>} ', 0),
(1792, 537, 'b*ab*ab*ab*', 0),
(1793, 537, '(a+b)* ', 0),
(1794, 537, 'b*a(a+b)*', 1),
(1795, 537, 'b*ab*ab*', 0),
(1796, 538, 'All strings of x and y', 0),
(1797, 538, 'All strings of x and y which have either even number of x and even number of y or odd number or x and odd number of y', 0),
(1798, 538, 'All strings of x and y which have equal number of x and y', 0),
(1799, 538, 'All strings of x and y with either even number of x and odd number of y or odd number of x and even number of y', 1),
(1800, 539, '(i), (ii), and (iii)', 0),
(1801, 539, '(ii), (v), and (vi)', 0),
(1802, 539, '(ii), (iii), and (iv)', 1),
(1803, 539, '(i), (iii), and (iv)', 0),
(1804, 540, 'G<sub>1</sub> is context-free but not regular and G<sub>2</sub> is regular', 0),
(1805, 540, 'G<sub>2</sub> is context-free but not regular and G<sub>1</sub> is regular', 0),
(1806, 540, 'Both G<sub>1</sub> and G<sub>2</sub> are regular', 0),
(1807, 540, 'Both G<sub>1</sub> and G<sub>2</sub> are context-free but neither of them is regular', 1),
(1808, 541, 'Given a Turing machine M, a stings s and an integer k, M accepts s within k steps ', 0),
(1809, 541, 'Equivalence of two given Turing machines ', 1),
(1810, 541, 'Language accepted by a given finite state machine is not empty ', 0),
(1811, 541, 'Language generated by a context free grammar is non empty', 0),
(1812, 542, '0*(1+0)*', 0),
(1813, 542, '0*1010* ', 0),
(1814, 542, '0*1*01', 0),
(1815, 542, '0(10+1)* ', 1),
(1816, 543, 'Set of all strings over Σ', 0),
(1817, 543, 'Set of all languages over Σ ', 1),
(1818, 543, 'Set of all regular languages over Σ ', 0),
(1819, 543, 'Set of all languages over Σ accepted by Turing machines ', 0),
(1820, 544, 'Every finite subset of a non-regular set is regular', 0),
(1821, 544, 'Every subset of a regular set is regular', 1),
(1822, 544, 'Every finite subset of a regular set is regular', 0),
(1823, 544, 'The intersection of two regular sets is regular', 0),
(1824, 546, 'n', 0),
(1825, 546, 'n<sup>2</sup>', 0),
(1826, 546, '2<sup>n</sup>', 0),
(1827, 546, 'n(n+1)/2', 1),
(1828, 547, 'The numbers 1, 2, 4, 8, ……………., 2<sup>n</sup>, ………… written in binary', 1),
(1829, 547, 'The numbers 1, 2, 4, ………………., 2<sup>n</sup>, …………..written in unary', 0),
(1830, 547, 'The set of binary string in which the number of zeros is the same as the number of ones', 0),
(1831, 547, 'The set {1, 101, 11011, 1110111, ………..}', 0),
(1832, 548, 'A ⊂ B', 0),
(1833, 548, 'B ⊂ A', 0),
(1834, 548, 'A and B are incomparable ', 0),
(1835, 548, 'A = B', 1),
(1836, 549, 'Ambiguous', 0),
(1837, 549, 'Unambiguous', 0),
(1838, 549, 'Information is not sufficient to decide whether it is ambiguous or unambiguous', 1),
(1839, 549, 'None of the above', 0),
(1840, 550, 'L1 – L2 is not context free ', 1),
(1841, 550, 'L1 ∩ L2 is context free', 0),
(1842, 550, '~L1 is context free ', 1),
(1843, 550, '~L2 is regular', 0),
(1844, 551, 'L<sub>D</sub> = L<sub>E</sub> ', 1),
(1845, 551, 'L<sub>D</sub> ⊃ L<sub>E</sub>', 0),
(1846, 551, 'L<sub>E</sub> = L<sub>D</sub> ', 0),
(1847, 551, 'None of the above', 0),
(1848, 552, 'Union, intersection', 0),
(1849, 552, 'Union, Kleene closure', 1),
(1850, 552, 'Intersection, complement', 0),
(1851, 552, 'Complement, Kleene closure ', 0),
(1852, 553, 'n states', 0),
(1853, 553, 'n   1 states', 1),
(1854, 553, 'n   2 states', 0),
(1855, 553, 'None of the above', 0),
(1856, 554, 'Both (P1) and (P2) are decidable ', 1),
(1857, 554, 'Neither (P1) nor (P2) are decidable ', 0),
(1858, 554, 'Only (P1) is decidable ', 0),
(1859, 554, 'Only (P2) is decidable ', 0),
(1860, 555, 'L must be {a<sup>n</sup> |n is odd} ', 0),
(1861, 555, 'L must be {a<sup>n</sup> |n is even} ', 0),
(1862, 555, 'L must be {a<sup>n</sup>|≥0} ', 0),
(1863, 555, 'Either L must be {a<sup>n</sup> |n is odd}, or L must be {a<sup>n</sup> | n is even} ', 1),
(1864, 556, 'L = 0<sup> </sup>', 0),
(1865, 556, 'L is regular but not 0<sup> </sup> ', 1),
(1866, 556, 'L is context free but not regular ', 0),
(1867, 556, 'L is not context free', 0),
(1868, 557, ' S ⊂ T', 0),
(1869, 557, 'T ⊂ S ', 0),
(1870, 557, 'S = T ', 1),
(1871, 557, 'S ∩ T = ɸ', 0),
(1872, 558, 'A context free language ', 0),
(1873, 558, 'A context sensitive language ', 1),
(1874, 558, 'A regular language ', 0),
(1875, 558, 'Parsable fully only by a Turing machine ', 0),
(1876, 559, 'The complement of a recursive language is recursive. ', 1),
(1877, 559, 'The complement of a recursively enumerable language is recursively enumerable. ', 0),
(1878, 559, 'The complement of a recursive language is either recursive or recursively enumerable.', 0),
(1879, 559, 'The complement of a context-free language is context-free. ', 0),
(1880, 561, 'Outputs the sum of the present and the previous bits of the input. ', 1),
(1881, 561, 'Outputs 01 whenever the input sequence contains 11 ', 0),
(1882, 561, 'Outputs 00 whenever the input sequence contains 10 ', 0),
(1883, 561, 'None of the above ', 0),
(1884, 562, 'Context free ', 0),
(1885, 562, 'Regular ', 1),
(1886, 562, 'Deterministic Context free ', 0),
(1887, 562, 'Recursive', 0),
(1888, 563, 'L<sub>1</sub> = {0,1}* - L ', 0),
(1889, 563, 'L<sub>1</sub> = {0,1}* ', 1),
(1890, 563, 'L<sub>1</sub> ⊆ L ', 0),
(1891, 563, 'L<sub>1</sub> = L ', 0),
(1892, 564, '<img src=\"./image/choice/564.1.jpg\"/><br/>', 0),
(1893, 564, '<img src=\"./image/choice/564.2.jpg\"/><br/>', 0),
(1894, 564, '<img src=\"./image/choice/564.3.jpg\"/><br/>', 0),
(1895, 564, '<img src=\"./image/choice/564.4.jpg\"/><br/>', 1),
(1896, 565, 'M does not halt on any string in (0 1)<sup> </sup> ', 1),
(1897, 565, 'M does not halt on any string in (00 1)*', 0),
(1898, 565, 'M halts on all strings ending in a 0 ', 0),
(1899, 565, 'M halts on all strings ending in a 1 ', 0),
(1900, 566, 'L1 ∈ P and L2 is finite', 0),
(1901, 566, 'L1 ∈ NP and L2 ∈ P ', 0),
(1902, 566, 'L1 is undecidable and L2 is decidable ', 1),
(1903, 566, 'L1 is recursively enumerable and L2 is recursive', 0),
(1904, 567, 'G is not ambiguous ', 0),
(1905, 567, 'There exist x, y ∈ L(G) such that xy ∉ L(G) ', 0),
(1906, 567, 'There is a deterministic pushdown automaton that accepts L(G) ', 1),
(1907, 567, 'We can find a deterministic finite state automaton that accepts L(G) ', 0),
(1908, 569, 'L is necessarily finite ', 0),
(1909, 569, 'L is regular but not necessarily finite ', 0),
(1910, 569, 'L is context free but not necessarily regular ', 0),
(1911, 569, 'L is recursive but not necessarily context free ', 1),
(1912, 570, '(1*0)*1* ', 1),
(1913, 570, '0+(0+10)* ', 0),
(1914, 570, '(0+1)*10(0+1)* ', 0),
(1915, 570, 'None of the above ', 0),
(1916, 571, 'aaa', 0),
(1917, 571, 'aabab', 1),
(1918, 571, 'baaba', 0),
(1919, 571, 'bab', 0),
(1920, 572, 'There exist context-free languages such that all the context-free grammars generating them are ambiguous', 0),
(1921, 572, 'An unambiguous context free grammar always has a unique parse tree for each string of the language generated by it', 0),
(1922, 572, 'Both deterministic and non-deterministic pushdown automata always accept the same set of languages', 1),
(1923, 572, 'A finite set of string from one alphabet is always a regular language ', 0),
(1924, 573, '(a* + b* + c*)*', 0),
(1925, 573, '(a*b*c*)*', 0),
(1926, 573, '((ab)* + c*)*', 1),
(1927, 573, '(a*b* + c*)*', 0),
(1928, 574, 'Both S<sub>1</sub> and S<sub>2</sub> are true ', 1),
(1929, 574, 'S<sub>1</sub> is true but S<sub>2</sub> is not necessarily true ', 0),
(1930, 574, 'S<sub>2</sub> is true but S<sub>1</sub> is not necessarily true', 0),
(1931, 574, 'Neither is necessarily true ', 0),
(1932, 575, 'regular ', 0),
(1933, 575, 'context-free but not regular ', 1),
(1934, 575, 'context sensitive but not context free ', 0),
(1935, 575, 'type-0 but not context sensitive ', 0),
(1936, 576, 'divisible by 3 and 2 ', 1),
(1937, 576, 'odd and even ', 0),
(1938, 576, 'even and odd ', 0),
(1939, 576, 'divisible by 2 and 3 ', 0),
(1940, 577, '<img src=\"./image/choice/577.1.jpg\"/><br/>', 0),
(1941, 577, '<img src=\"./image/choice/577.2.jpg\"/><br/>', 0),
(1942, 577, '<img src=\"./image/choice/577.3.jpg\"/><br/>', 1),
(1943, 577, '<img src=\"./image/choice/577.4.jpg\"/><br/>', 0),
(1944, 579, 'id + id + id + id', 1),
(1945, 579, 'id + (id* (id * id))', 0),
(1946, 579, '(id* (id * id)) + id', 0),
(1947, 579, '((id * id + id) * id)', 0),
(1948, 580, 'L is necessarily a regular language', 0),
(1949, 580, 'L is necessarily a context-free language, but not necessarily a regular language', 0),
(1950, 580, 'L is necessarily a non-regular language', 0),
(1951, 580, 'None of the above', 1),
(1952, 582, 'L1 = L2', 1),
(1953, 582, 'L1 ⊂ L2', 0),
(1954, 582, 'L2 ⊂ L1', 0),
(1955, 582, 'None of the above', 0),
(1956, 583, '<img src=\"./image/choice/583.1.jpg\"/><br/>', 0),
(1957, 583, '<img src=\"./image/choice/583.2.jpg\"/><br/>', 0),
(1958, 583, '<img src=\"./image/choice/583.3.jpg\"/><br/>', 1),
(1959, 583, 'None of the above', 0),
(1960, 584, 'regular', 1),
(1961, 584, 'context-free but not regular', 0),
(1962, 584, 'context-free but its complement is not context-free', 0),
(1963, 584, 'not context-free', 0),
(1964, 585, 'It represents a finite set of finite strings.', 0),
(1965, 585, 'It represents an infinite set of finite strings.', 1),
(1966, 585, 'It represents a finite set of infinite strings.', 0),
(1967, 585, 'It represents an infinite set of infinite strings. ', 0),
(1968, 586, 'It is necessarily regular but not necessarily context-free.', 0),
(1969, 586, 'It is necessarily context-free.', 0),
(1970, 586, 'It is necessarily non-regular.', 0),
(1971, 586, 'None of the above.', 1),
(1972, 587, 'P3 is decidable if P1 is reducible to P3 ', 0),
(1973, 587, 'P3 is undecidable if P3 is reducible to P2', 0),
(1974, 587, 'P3 is undecidable if P2 is reducible to P3', 1),
(1975, 587, 'P3 is decidable if P3 is reducible to P2\'s complement ', 0),
(1976, 588, '{w ∈ {a, b}* | every a in w is followed by exactly two b\'s}', 0),
(1977, 588, '{w ∈ {a, b}*| every a in w is followed by at least two b’} ', 1),
(1978, 588, '{w ∈ {a, b}*| w contains the substring \'abb\'} ', 0),
(1979, 588, '{w ∈ {a, b}*| w does not contain \'aa\' as a substring}', 0),
(1980, 589, 'D<sub>f</sub> ⊂ N<sub>f</sub> and D<sub>p</sub> ⊂ N<sub>p</sub> ', 0),
(1981, 589, 'D<sub>f</sub> ⊂ N<sub>f</sub> and D<sub>p</sub> = N<sub>p</sub>', 0),
(1982, 589, 'D<sub>f</sub> = N<sub>f</sub> and D<sub>p</sub> = N<sub>p</sub> ', 0),
(1983, 589, 'D<sub>f</sub> = N<sub>f</sub> and D<sub>p</sub> ⊂ N<sub>p</sub> ', 1),
(1984, 590, '<img src=\"./image/choice/590.1.jpg\"/><br/>', 0),
(1985, 590, '<img src=\"./image/choice/590.2.jpg\"/><br/>', 1),
(1986, 590, '<img src=\"./image/choice/590.3.jpg\"/><br/>', 0),
(1987, 590, '<img src=\"./image/choice/590.4.jpg\"/><br/>', 0),
(1988, 591, 'L1 ∩ L2 is a context-free language', 1),
(1989, 591, 'L1 ∪ L2 is a context-free language ', 0),
(1990, 591, 'L1 and L2 are context-free languages ', 0),
(1991, 591, 'L1 ∩ L2 is a context sensitive language ', 0),
(1992, 592, 'L1 is a deterministic CFL ', 0),
(1993, 592, 'L2 is a deterministic CFL ', 1),
(1994, 592, 'L3 is a CFL, but not a deterministic CFL ', 0),
(1995, 592, 'L3 is a deterministic CFL', 0),
(1996, 593, 'It computes 1\'s complement of the input number ', 0),
(1997, 593, 'It computes 2\'s complement of the input number ', 1),
(1998, 593, 'It increments the input number ', 0),
(1999, 593, 'It decrements the input number ', 0),
(2000, 594, '(a + b)*', 1),
(2001, 594, '{ϵ, a, ab, bab}', 0),
(2002, 594, '(ab)*', 0),
(2003, 594, '{a<sup>n</sup>b<sup>n</sup> | n ≥ 0}', 0),
(2004, 595, 'Both I and IV', 0),
(2005, 595, 'Only I', 1),
(2006, 595, 'Only IV', 0),
(2007, 595, 'Both II and III', 0),
(2008, 596, '<img src=\"./image/choice/596.1.jpg\"/><br/>', 1),
(2009, 596, '<img src=\"./image/choice/596.2.jpg\"/><br/>', 0),
(2010, 596, '<img src=\"./image/choice/596.3.jpg\"/><br/>', 0),
(2011, 596, '<img src=\"./image/choice/596.3.jpg\"/><br/>', 0),
(2012, 597, '<img src=\"./image/choice/597.1.jpg\"/><br/>', 1),
(2013, 597, '<img src=\"./image/choice/597.2.jpg\"/><br/>', 0),
(2014, 597, '<img src=\"./image/choice/597.3.jpg\"/><br/>', 0),
(2015, 597, '<img src=\"./image/choice/597.3.jpg\"/><br/>', 0),
(2016, 598, 'L is recursively enumerable, but not recursive', 0),
(2017, 598, 'L is recursive, but not context-free ', 0),
(2018, 598, 'L is context-free, but not regular', 0),
(2019, 598, 'L is regular ', 1),
(2020, 599, 'L = {s ∈ (0 1)* | n<sub>0</sub>(s) is a 3-digit prime}', 0),
(2021, 599, 'L = {s ∈ (0 1)* | for every prefix s\' of s,|n<sub>0</sub>(s\') - n<sub>1</sub>(s\')| ≤ 2}', 0),
(2022, 599, 'L = {s ∈ (0 1)* |n<sub>0</sub>(s) - n<sub>1</sub>(s)| ≤ 4} ', 1),
(2023, 599, 'L = {s ∈ (0 1)* | n<sub>0</sub>(s) mod 7 = n<sub>1</sub>(s) mod 5 = 0} ', 0),
(2024, 600, 'L<sub>1</sub> only', 0),
(2025, 600, 'L<sub>3</sub> only ', 0),
(2026, 600, 'L<sub>1</sub> and L<sub>2</sub> ', 0),
(2027, 600, 'L<sub>2</sub> and L<sub>3</sub> ', 1),
(2028, 601, 'max(l,m)+2', 0),
(2029, 601, 'l+m+2 ', 0),
(2030, 601, 'l+m+3 ', 0),
(2031, 601, 'max(l, m)+3 ', 1),
(2032, 602, 'S→AC|CB <br/>C→aCb|a|b <br/>A→aA|ϵ <br/>B→Bb|ϵ<br/><br/>', 0),
(2033, 602, 'S→aS|Sb|a|b <br/><br/>', 0),
(2034, 602, 'S→AC|CB <br/>C→aCb|ϵ <br/>A→aA|ϵ <br/>B→Bb|ϵ <br/><br/>', 0),
(2035, 602, 'S→AC|CB <br/>C→aCb|ϵ<br/> A→aA|a <br/>B→Bb|b ', 1),
(2036, 604, 'L1 ∩ L2 is a deterministic CFL', 0),
(2037, 604, 'L3 ∩ L1 is recursive', 1),
(2038, 604, 'L1 ∪ L2 is context free', 0),
(2039, 604, 'L1 ∩ L2 ∩ L3 is recursively enumerable', 0),
(2040, 605, 'I only', 0),
(2041, 605, 'I and III only ', 1),
(2042, 605, 'II and III only ', 0),
(2043, 605, 'I, II and III ', 0),
(2044, 606, 'The automaton accepts u and v but not w', 0),
(2045, 606, 'The automaton accepts each of u, v, and w', 0),
(2046, 606, 'The automaton rejects each of u, v, and w', 0),
(2047, 606, 'The automaton accepts u but rejects v and w', 1),
(2048, 607, 'aaaa', 0),
(2049, 607, 'baba', 1),
(2050, 607, 'abba', 0),
(2051, 607, 'babaaabab', 0),
(2052, 608, '(a + b)* a(a + b)b', 1),
(2053, 608, '(abb)*', 0),
(2054, 608, '(a + b)* a(a + b)* b(a + b)*', 0),
(2055, 608, '(a + b)*', 0),
(2056, 611, '{w ∈ (a + b)* | #a(w) is even) and {w ∈ (a + b)* | #a(w) is odd}', 1),
(2057, 611, '{w ∈ (a + b)* | #a(w) is even) and {w ∈ (a + b)* | #b(w) is odd}', 0),
(2058, 611, '{w ∈ (a + b)* | #a(w) = #b(w) and {w ∈ (a + b)* | #a(w) ≠ #b(w)}', 0),
(2059, 611, '{ϵ}, {wa | w ∈ (a + b)* and {wb | w ∈ (a + b)*} ', 0),
(2060, 610, 'Every language has a regular superset', 0),
(2061, 610, 'Every language has a regular subset', 0),
(2062, 610, 'Every subset of a regular language is regular', 1),
(2063, 610, 'Every subset of a finite language is regular ', 0),
(2064, 609, '{a<sup>n</sup>b<sup>n</sup>c<sup>n</sup> ∣ n≥0}', 0),
(2065, 609, '{a<sup>l</sup>b<sup>m</sup>c<sup>n</sup> ∣ l≠m or m≠n}', 1),
(2066, 609, '{a<sup>n</sup>b<sup>n</sup> ∣ n≥0}', 0),
(2067, 609, '{a<sup>m</sup>b<sup>n</sup>∣ m,n≥0}', 0),
(2068, 612, 'always regular', 0),
(2069, 612, 'never regular', 0),
(2070, 612, 'always a deterministic context-free language', 0),
(2071, 612, 'always a context-free language ', 1),
(2072, 613, 'S  = S’ . y’   S . x', 1),
(2073, 613, 'S  =S. x . y’   S’ . y . x’', 0),
(2074, 613, 'S  =x . y’', 0),
(2075, 613, 'S  =S’ . y   S . x’col', 0),
(2076, 614, '((a + b)* b)*', 1),
(2077, 614, '{a<sup>m</sup>b<sup>n</sup> | m ≤ n}', 0),
(2078, 614, '{a<sup>m</sup>b<sup>n</sup> | m = n}', 0),
(2079, 614, 'a* b*', 0),
(2080, 615, '{a<sup>l</sup>b<sup>m</sup>c<sup>n</sup> | l = m = n}', 1),
(2081, 615, '{a<sup>l</sup>b<sup>m</sup>c<sup>n</sup> | l = m}', 0),
(2082, 615, '{a<sup>l</sup>b<sup>m</sup>c<sup>n</sup> | 2l = m n}', 0),
(2083, 615, '{a<sup>l</sup>b<sup>m</sup>c<sup>n</sup> | m=n}', 0),
(2084, 616, '{w⊂w<sup>R</sup>|w ∈ {a,b}*} ', 1),
(2085, 616, '{ww<sup>R</sup>|w ∈ {a,b,c}*}', 0),
(2086, 616, '{a<sup>n</sup>b<sup>n</sup>c<sup>n</sup>|n ≥ 0}', 0),
(2087, 616, '{w|w is a palindrome over {a,b,c}}', 0),
(2088, 617, 'I', 1),
(2089, 617, 'II', 0),
(2090, 617, 'III', 1),
(2091, 617, 'IV', 0),
(2092, 618, 'The Halting problem of Turing machines is undecidable. ', 0),
(2093, 618, 'Determining whether a context-free grammar is ambiguous is undecidbale. ', 0),
(2094, 618, 'Given two arbitrary context-free grammars G1 and G2 it is undecidable whether L(G1) = L(G2). ', 0),
(2095, 618, 'Given two regular grammars G1 and G2 it is undecidable whether L(G1) = L(G2). ', 1),
(2096, 619, 'L = {x|x has an equal number of a\'s and b\'s } is regular ', 0),
(2097, 619, 'L = {a<sup>n</sup>b<sup>n</sup>|n≥1} is regular', 0);
INSERT INTO `choice` (`id`, `q_id`, `choice`, `correct`) VALUES
(2098, 619, 'L = {x|x has more a\'s and b\'s} is regular', 0),
(2099, 619, 'L = {a<sup>m</sup>b<sup>n</sup>|m ≥ 1, n ≥ 1} is regular', 1),
(2100, 620, 'L1, L2', 0),
(2101, 620, 'L1 ∩ L2 ', 1),
(2102, 620, 'L1 ∩ R ', 0),
(2103, 620, 'L1 ∪ L2', 0),
(2104, 621, 'the set of all binary strings with unequal number of 0’s and 1’s ', 0),
(2105, 621, 'the set of all binary strings including the null string ', 1),
(2106, 621, 'the set of all binary strings with exactly one more 0’s than the number of 1’s or one more 1 than the number of 0’s ', 0),
(2107, 621, 'None of the above ', 0),
(2108, 622, 'the sentence if a then if b then c:=d', 0),
(2109, 622, 'the left most and right most derivations of the sentence if a then if b then c:=d give rise top different parse trees ', 0),
(2110, 622, 'the sentence if a then if b then c:=d else c:=f has more than two parse trees', 0),
(2111, 622, 'the sentence if a then if then c:=d else c:=f has two parse trees ', 1),
(2112, 624, '(L ∪ D)<sup>+</sup> ', 0),
(2113, 624, 'L(L ∪ D)*', 1),
(2114, 624, '(L⋅D)*', 0),
(2115, 624, 'L⋅(L⋅D)*', 0),
(2116, 625, 'Context free ', 0),
(2117, 625, 'Regular ', 0),
(2118, 625, 'Context sensitive ', 0),
(2119, 625, 'LR(k)', 1),
(2120, 626, 'I only', 1),
(2121, 626, 'I and II', 0),
(2122, 626, 'II and III', 0),
(2123, 626, 'II only', 0),
(2124, 627, '01', 0),
(2125, 627, '10', 1),
(2126, 627, '101', 0),
(2127, 627, '110', 0),
(2128, 628, 'regular, regular', 0),
(2129, 628, 'not regular, regular ', 0),
(2130, 628, 'regular, not regular', 1),
(2131, 628, 'not regular, no regular ', 0),
(2132, 629, 'Regular grammar to context free grammar ', 0),
(2133, 629, 'Non-deterministic FSA to deterministic FSA ', 0),
(2134, 629, 'Non-deterministic PDA to deterministic PDA ', 1),
(2135, 629, 'Non-deterministic Turing machine to deterministic Turing machine', 0),
(2136, 630, 'Syntax of if-then-else statements ', 0),
(2137, 630, 'Syntax of recursive procedures ', 0),
(2138, 630, 'Whether a variable has been declared before its use ', 1),
(2139, 630, 'Variable names of arbitrary length ', 0),
(2140, 631, 'The grammar contains useless non-terminals.', 0),
(2141, 631, 'It produces more than one parse tree for some sentence.', 1),
(2142, 631, 'Some production has two non terminals side by side on the right-hand side.', 0),
(2143, 631, 'None of the above.', 0),
(2144, 632, 'Membership problem in context-free languages.', 1),
(2145, 632, 'Whether a given context-free language is regular.', 0),
(2146, 632, 'Whether a finite state automation halts on all inputs.', 1),
(2147, 632, 'Membership problem for type 0 languages.', 0),
(2148, 633, 'Union', 1),
(2149, 633, 'Intersection', 0),
(2150, 633, 'Concatenation', 1),
(2151, 633, 'Complementation', 0),
(2152, 634, 'R1 ∩ R2 is not regular.', 0),
(2153, 634, 'R1 ∪ R2 is regular.', 1),
(2154, 634, 'Σ* − R1 is regular.', 1),
(2155, 634, 'R1* is not regular.', 0),
(2156, 635, 'An arbitrary Turing machine halts after 100 steps.', 0),
(2157, 635, 'A Turing machine prints a specific letter.', 1),
(2158, 635, 'A Turing machine computes the products of two numbers.', 1),
(2159, 635, 'None of the above.', 0),
(2160, 636, 'A proper superset of context free languages.', 1),
(2161, 636, 'Always recognizable by pushdown automata.', 0),
(2162, 636, 'Also called type ∅ languages.', 0),
(2163, 636, 'Recognizable by Turing machines.', 1),
(2164, 637, 'It could be undecidable ', 0),
(2165, 637, 'It is Turing-machine recognizable ', 0),
(2166, 637, 'It is a context-sensitive language ', 0),
(2167, 637, 'It is a regular language ', 1),
(2168, 638, 'L(s) ⊆ L(r) and L(s) ⊆ L(t) ', 1),
(2169, 638, 'L(r) ⊆ L(s) and L(s) ⊆ L(t) ', 0),
(2170, 638, 'L(s) ⊆ L(t) and L(s) ⊆ L(r) ', 1),
(2171, 638, 'L(t) ⊆ L(s) and L(s) ⊆ L(r) ', 0),
(2172, 639, 'X is decidable ', 0),
(2173, 639, 'X is undecidable but partially decidable ', 1),
(2174, 639, 'X is undecidable and not even partially decidable ', 0),
(2175, 639, 'X is not a decision problem ', 0),
(2176, 640, 'L1', 0),
(2177, 640, 'L2', 0),
(2178, 640, 'L3', 1),
(2179, 640, 'L4', 0),
(2180, 642, 'N<sup>2</sup>', 0),
(2181, 642, '2<sup>N</sup>', 1),
(2182, 642, '2N', 0),
(2183, 642, 'N!', 0),
(2184, 643, 'If a language is context free it can always be accepted by a deterministic push-down automaton ', 0),
(2185, 643, 'The union of two context free languages is context free ', 1),
(2186, 643, 'The intersection of two context free languages is context free ', 0),
(2187, 643, 'The complement of a context free language is context free ', 0),
(2188, 644, 'Only S1 is correct ', 1),
(2189, 644, 'Only S2 is correct ', 0),
(2190, 644, 'Both S1 and S2 are correct ', 0),
(2191, 644, 'None of S1 and S2 is correct ', 0),
(2192, 645, 'M<sub>1</sub> is non-deterministic finite automaton', 1),
(2193, 645, 'M<sub>1</sub> is a non-deterministic PDA ', 0),
(2194, 645, 'M<sub>1</sub> is a non-deterministic Turing machine', 1),
(2195, 645, 'For no machine M<sub>1</sub> use the above statement true ', 0),
(2196, 646, 'closed under union ', 1),
(2197, 646, 'closed under complementation ', 0),
(2198, 646, 'closed under intersection ', 0),
(2199, 646, 'closed under Kleene closure ', 1),
(2200, 647, '2l ', 0),
(2201, 647, '2l + 1', 0),
(2202, 647, '2l - 1', 1),
(2203, 647, 'l', 0),
(2204, 648, 'r(*) = r* ', 1),
(2205, 648, '(r*s*) = (r+s)*', 0),
(2206, 648, '(r+s)* = r* + s*', 0),
(2207, 648, 'r*s* = r* + s*', 0),
(2208, 649, 'FOLLOW(A) and LFOLLOW (A) may be different.', 1),
(2209, 649, 'FOLLOW(A) and RFOLLOW (A) are always the same. ', 1),
(2210, 649, 'All the three sets are identical. ', 0),
(2211, 649, 'All the three sets are different. ', 0),
(2212, 650, 'Hamiltonian circuit problem ', 1),
(2213, 650, 'The 0/1 Knapsack problem', 0),
(2214, 650, 'Finding bi-connected components of a graph ', 0),
(2215, 650, 'The graph colouring problem', 0),
(2216, 651, 'a.b=1', 0),
(2217, 651, 'a+b=1', 1),
(2218, 651, 'a\'+b\'=1', 0),
(2219, 651, '(a.b)\'=1', 0),
(2220, 652, 'Every subset of countable set is countable', 1),
(2221, 652, 'A is recursive if both A and its complement are accepted by Turing machines.', 1),
(2222, 652, 'The intersection of two CFL\'s is also a CFL.', 0),
(2223, 652, 'A minimal DFA that is equiavlent to an NDFA with n nodes has always 2<sup>n</sup> states.', 0),
(2224, 653, '1 only', 0),
(2225, 653, '2 only', 1),
(2226, 653, '1 and 2 Both', 0),
(2227, 653, 'None', 0),
(2228, 654, '(A)-(q), (B)-(r), (C)-(s), (D)-(p)', 0),
(2229, 654, '(A)-(r), (B)-(s), (C)-(q), (D)-(p)', 1),
(2230, 654, '(A)-(p), (B)-(s), (C)-(q), (D)-(r)', 0),
(2231, 654, '(A)-(r), (B)-(s), (C)-(p), (D)-(q)', 0),
(2232, 655, '(a) - (r), (b) - (p), (c) - (s), (d) - (q)', 0),
(2233, 655, '(a) - (q), (b) - (r), (c) - (s), (d) - (p)', 0),
(2234, 655, '(a) - (s), (b) - (p), (c) - (r), (d) - (q)', 0),
(2235, 655, '(a) - (q), (b) - (p), (c) - (r), (d) - (s)', 1),
(2236, 656, 'The amount of virtual memory available is limited by the availability of secondary storage. ', 0),
(2237, 656, 'Any implementation of a critical section requires the use of an indivisible machine-instruction, such as test-and-set. ', 1),
(2238, 656, 'The LRU page replacement policy may cause hashing for some type of programs. ', 0),
(2239, 656, 'The best fit techniques for memory allocation ensures the memory will never be fragmented. ', 1),
(2240, 657, 'the length of MAR', 1),
(2241, 657, 'the available secondary storage', 1),
(2242, 657, 'the available main memory ', 0),
(2243, 657, 'all of the above ', 0),
(2244, 658, 'A-S, B-Q, C-P, D-R', 0),
(2245, 658, 'A-Q, B-P, C-R, D-Q', 0),
(2246, 658, 'A-R, B-P, C-Q, D-S', 0),
(2247, 658, 'A-R, B-P, C-S, D-Q', 1),
(2248, 659, 'flag[j]=true and turn=i ', 0),
(2249, 659, 'flag[j]=true and turn=j ', 1),
(2250, 659, 'flag[i]=true and turn=j ', 0),
(2251, 659, 'flag[i]=true and turn=i ', 0),
(2252, 661, 'always decrease the number of page faults ', 0),
(2253, 661, 'always increase the number of page faults ', 0),
(2254, 661, 'sometimes increase the number of page faults ', 1),
(2255, 661, 'never affect the number of page faults ', 0),
(2256, 662, 'Round-Robin ', 0),
(2257, 662, 'Shortest-Job-First ', 1),
(2258, 662, 'Highest-Response-Ratio-Next ', 0),
(2259, 662, 'First-Come-First-Served ', 0),
(2260, 663, 'Virtual memory implements the translation of a program’s address space into physical memory address space ', 0),
(2261, 663, 'Virtual memory implements the translation of a program’s address space into physical memory address space ', 0),
(2262, 663, 'Virtual memory increases the degree of multiprogramming ', 0),
(2263, 663, 'Virtual memory reduces the context switching overhead', 1),
(2264, 664, 'The terminal used to the input data for a program being executed. ', 0),
(2265, 664, 'The secondary memory device in a virtual memory system ', 0),
(2266, 664, 'A line printer used to print the output of a number of jobs. ', 1),
(2267, 664, 'None of the above ', 0),
(2268, 668, '7', 0),
(2269, 668, '9', 0),
(2270, 668, '13', 1),
(2271, 668, '15', 1),
(2272, 669, 'P = 12.5, Q = 2×10<sup>6</sup>', 0),
(2273, 669, 'P = 13, Q = 2.5×10<sup>6</sup>', 0),
(2274, 669, 'P = 13, Q = 2×10<sup>6</sup>', 0),
(2275, 669, 'P = 12.5, Q = 2.5×10<sup>6</sup>', 1),
(2276, 670, 'either first fit or best fit policy (any one) ', 0),
(2277, 670, 'first fit but not best fit policy ', 1),
(2278, 670, 'best fit but first fit policy ', 0),
(2279, 670, 'None of the above', 0),
(2280, 671, 'LRU page replacement algorithm is used ', 0),
(2281, 671, 'FIFO page replacement algorithm is used ', 1),
(2282, 671, 'LFU page replacement algorithm is used ', 0),
(2283, 671, 'None of the above ', 0),
(2284, 672, 'smaller, smaller', 0),
(2285, 672, 'smaller, larger', 0),
(2286, 672, 'larger, smaller ', 1),
(2287, 672, 'larger, larger ', 0),
(2288, 674, '{3,2,1),1 ', 1),
(2289, 674, '(2,1,3},0 ', 0),
(2290, 674, '{3,2,1),0', 0),
(2291, 674, '{1,2,3},5 ', 0),
(2292, 675, 'Shortest Job First ', 0),
(2293, 675, 'Round Robin', 1),
(2294, 675, 'First Come First Serve ', 0),
(2295, 675, 'Elevator ', 0),
(2296, 676, 'the segment table is often too large to fit in one page ', 1),
(2297, 676, 'each segment is spread over a number of pages ', 1),
(2298, 676, 'segment tables point to page table and not to the physical locations of the segment ', 0),
(2299, 676, 'the processor’s description base register points to a page table', 0),
(2300, 677, 'ROM is a Read/Write memory ', 0),
(2301, 677, 'PC points to the last instruction that was executed ', 0),
(2302, 677, 'Stack works on the principle of LIFO ', 1),
(2303, 677, 'All instructions affect the flags', 0),
(2304, 679, 'ensure that all philosophers pick up the left fork before the right fork ', 0),
(2305, 679, 'ensure that all philosophers pick up the right fork before the left fork ', 0),
(2306, 679, 'ensure that one particular philosopher picks up the left fork before the right fork, and that all other philosophers pick up the right fork before the left fork', 1),
(2307, 679, 'None of the above', 0),
(2308, 681, 'A – 3 B – 4 C – 1 D – 2 ', 0),
(2309, 681, 'A – 4 B – 3 C – 1 D – 2 ', 0),
(2310, 681, 'A – 4 B – 3 C – 2 D – 1 ', 0),
(2311, 681, 'A – 3 B – 4 C – 2 D – 1 ', 1),
(2312, 682, 'which should run in a certain specified amount of time', 0),
(2313, 682, 'which avoids deadlocks ', 0),
(2314, 682, 'where shared resources are accessed ', 1),
(2315, 682, 'which must be enclosed by a pair of semaphore operations, P and V ', 0),
(2316, 683, 'a batch operating system', 0),
(2317, 683, 'an operating system with a preemptive scheduler', 1),
(2318, 683, 'an operating system with a non-preemptive scheduler', 0),
(2319, 683, 'a uni-programmed operating system', 0),
(2320, 684, '1', 0),
(2321, 684, '2', 0),
(2322, 684, '3', 0),
(2323, 684, 'None of the above', 1),
(2324, 686, 'helps avoid unnecessary writes on a paging device ', 1),
(2325, 686, 'helps maintain LRU information ', 0),
(2326, 686, 'allows only read on a page ', 0),
(2327, 686, 'None of the above ', 0),
(2328, 687, 'implies changing the name of a file ', 0),
(2329, 687, 'can be employed to use an existing file as input file for a program ', 1),
(2330, 687, 'implies connection 2 programs through a pipe ', 0),
(2331, 687, 'None of the above ', 0),
(2332, 688, 'reduces page I/O', 0),
(2333, 688, 'decreases the degree of multiprogramming', 1),
(2334, 688, 'implies excessive page I/O ', 0),
(2335, 688, 'improve the system performance', 0),
(2336, 689, 'A – 3 B – 4 C – 2 D – 1 ', 0),
(2337, 689, 'A – 4 B – 3 C – 2 D – 1 ', 0),
(2338, 689, 'A – 2 B – 4 C – 1 D – 3 ', 1),
(2339, 689, 'A – 3 B – 4 C – 3 D – 2 ', 0),
(2340, 690, 'will always be to the page used in the previous page reference ', 0),
(2341, 690, 'is likely to be to one of the pages used in the last few page references ', 1),
(2342, 690, 'will always be to one of the pages existing in memory ', 0),
(2343, 690, 'will always lead to a page fault ', 0),
(2344, 691, 'i+j/k', 1),
(2345, 691, 'i+j*k', 0),
(2346, 691, '(i+j)/k', 0),
(2347, 691, '(i+j)*k', 0),
(2348, 692, '<img src=\"./image/choice/692.1.jpg\"/><br/>', 1),
(2349, 692, '<img src=\"./image/choice/692.2.jpg\"/><br/>', 0),
(2350, 692, '<img src=\"./image/choice/692.3.jpg\"/><br/>', 0),
(2351, 692, '<img src=\"./image/choice/692.4.jpg\"/><br/>', 0),
(2352, 693, '12 KB', 0),
(2353, 693, '14 KB', 1),
(2354, 693, '10 KB', 0),
(2355, 693, '8 KB', 0),
(2356, 696, 'cycle steating', 0),
(2357, 696, 'race condition', 1),
(2358, 696, 'a time lock', 0),
(2359, 696, 'a deadlock', 0),
(2360, 697, 'The terminal used to enter the input data for the C program being executed', 0),
(2361, 697, 'An output device used to print the output of a number of jobs', 1),
(2362, 697, 'The secondary memory device in a virtual storage system', 0),
(2363, 697, 'The swapping area on a disk used by the swapper', 0),
(2364, 698, '0, 200, 500, 600 ', 0),
(2365, 698, '0, 200, 1000, 1600', 1),
(2366, 698, '200, 500, 600, 800', 0),
(2367, 698, '200, 700, 1300, 2100', 0),
(2368, 699, '0.125 0.125', 0),
(2369, 699, '0.25 0.25 ', 0),
(2370, 699, '0.25 0.125 ', 1),
(2371, 699, '0.125 0.25 ', 0),
(2372, 700, 'Saving current register values and restoring saved register values for process B. ', 0),
(2373, 700, 'Changing address translation tables.', 0),
(2374, 700, 'Swapping out the memory image of process A to the disk. ', 1),
(2375, 700, 'Invalidating the translation look-aside buffer.', 0),
(2376, 701, 'Faster access to memory on an average.', 0),
(2377, 701, 'Processes can be given protected address spaces.', 1),
(2378, 701, 'Linker can assign addresses independent of where the program will be loaded in physical memory.', 0),
(2379, 701, 'Programs larger than the physical memory size can be run. ', 1),
(2380, 702, 'Address translation', 1),
(2381, 702, 'DMA for disk transfer', 0),
(2382, 702, 'At least two modes of CPU execution (privileged and non-privileged) ', 1),
(2383, 702, 'Demand paging', 0),
(2384, 703, 'a software interrupt ', 1),
(2385, 703, 'polling', 0),
(2386, 703, 'an indirect jump', 0),
(2387, 703, 'a privileged instruction', 0),
(2388, 704, 'Farthest cylinder next ', 0),
(2389, 704, 'Nearest cylinder next', 1),
(2390, 704, 'First come first served ', 0),
(2391, 704, 'Elevator algorithm', 0),
(2392, 705, '(A) – 2 (B) – 4 (C) – 3 (D) - 1 ', 0),
(2393, 705, '(A) – 1 (B) – 2 (C) – 3 (D) – 4 ', 0),
(2394, 705, '(A) – 3 (B) – 2 (C) – 4 (D) - 1 ', 1),
(2395, 705, '(A) – 4 (B) – 1 (C) – 2 (D) – 3', 0),
(2396, 706, 'Which of the following is NOT a valid deadlock prevention scheme?', 0),
(2397, 706, 'Number the resources uniquely and never request a lower numbered resource than the last one requested', 0),
(2398, 706, 'Never request a resource after releasing any resource ', 1),
(2399, 706, 'Request and all required resources be allocated before execution', 0),
(2400, 707, '1.9999 milliseconds ', 0),
(2401, 707, '1 millisecond ', 0),
(2402, 707, '9.999 microseconds ', 0),
(2403, 707, '1.9999 microseconds ', 1),
(2404, 708, '1600 × 400 resolution with 256 colours on a 17 inch monitor ', 0),
(2405, 708, '1600 × 400 resolution with 16 million colours on a 14 inch monitor ', 1),
(2406, 708, '800 × 400 resolution with 16 million colours on a 17 inch monitor ', 0),
(2407, 708, '800 × 800 resolution with 256 colours on a 14 inch monitor ', 0),
(2408, 709, 'Thrashing ', 0),
(2409, 709, 'Deadlock ', 1),
(2410, 709, 'Starvation, but not deadlock ', 0),
(2411, 709, 'None of the above ', 0),
(2412, 710, 'General purpose registers ', 0),
(2413, 710, 'Translation look-aside buffer ', 1),
(2414, 710, 'Program counter ', 0),
(2415, 710, 'All of the above ', 0),
(2416, 711, 'the size of the blocks, and the size of the address of the blocks. ', 0),
(2417, 711, 'the number of blocks used for the index, and the size of the blocks. ', 1),
(2418, 711, 'the size of the blocks, the number of blocks used for the index, and the size of the address of the blocks. ', 0),
(2419, 711, 'None of the above ', 0),
(2420, 712, 'A', 0),
(2421, 712, 'A and B ', 1),
(2422, 712, 'A and C ', 0),
(2423, 712, 'A, B and C ', 0),
(2424, 713, 'Security is dynamic ', 0),
(2425, 713, 'The path for searching dynamic libraries is not known till runtime ', 1),
(2426, 713, 'Linking is insecure ', 0),
(2427, 713, 'Cryptographic procedures are not available for dynamic linking ', 0),
(2428, 714, 'Has not been used for the longest time in the past. ', 0),
(2429, 714, 'Will not be used for the longest time in the future. ', 1),
(2430, 714, 'Has been used least number of times. ', 0),
(2431, 714, 'Has been used most number of times. ', 0),
(2432, 715, 'P(S) at W, V(S) at X, P(T) at Y, V(T) at Z, S and T initially 1 ', 0),
(2433, 715, 'P(S) at W, V(T) at X, P(T) at Y, V(S) at Z, S and T initially 1 ', 0),
(2434, 715, 'P(S) at W, V(S) at X, P(S) at Y, V(S) at Z, S initially 1 ', 1),
(2435, 715, 'V(S) at W, V(T) at X, P(S) at Y, P(T) at Z, S and T initially 1 ', 0),
(2436, 716, 'P(S) at W, V(S) at X, P(T) at Y, V(T) at Z, S and T initially 1 ', 0),
(2437, 716, 'P(S) at W, V(T) at X, P(T) at Y, V(S) at Z, S initially 1, and T initially 0 ', 1),
(2438, 716, 'P(S) at W, V(T) at X, P(T) at Y, V(S) at Z, S and T initially 1 ', 0),
(2439, 716, 'P(S) at W, V(S) at X, P(T) at Y, V(T) at Z, S initially 1, and T initially 0 ', 0),
(2440, 717, '8 KB', 0),
(2441, 717, '12 KB ', 0),
(2442, 717, '16 KB ', 1),
(2443, 717, '20 KB ', 0),
(2444, 718, '1.5 ns ', 0),
(2445, 718, '2 ns ', 0),
(2446, 718, '3 ns ', 0),
(2447, 718, '4 ns ', 1),
(2448, 719, 'First come first served scheduling ', 0),
(2449, 719, 'Shortest remaining time first scheduling ', 0),
(2450, 719, 'Static priority scheduling with different priorities for the two processes ', 0),
(2451, 719, 'Round robin scheduling with a time quantum of 5 ms ', 1),
(2452, 720, 'the large amount of internal fragmentation ', 0),
(2453, 720, 'the large amount of external fragmentation ', 0),
(2454, 720, 'the large memory overhead in maintaining page tables ', 1),
(2455, 720, 'the large computation overhead in the translation process ', 0),
(2456, 721, '2', 0),
(2457, 721, '10', 0),
(2458, 721, '12', 0),
(2459, 721, '14', 1),
(2460, 722, 'P(full), V(empty), P(full), V(empty)', 0),
(2461, 722, 'P(full), V(empty), P(empty), V(full)', 0),
(2462, 722, 'P(empty), V(full), P(empty), V(full)', 0),
(2463, 722, 'P(empty), V(full), P(full), V(empty)', 1),
(2464, 723, 'n', 0),
(2465, 723, 'n(n 1)/2', 0),
(2466, 723, '2<sup>n</sup>-1', 1),
(2467, 723, '2<sup>n</sup>-1', 0),
(2468, 724, 'The scheme is deadlock-free, but not starvation-free', 1),
(2469, 724, 'The scheme is not deadlock-free, but starvation-free', 0),
(2470, 724, 'The scheme is neither deadlock-free nor starvation-free', 0),
(2471, 724, 'The scheme is both deadlock-free and starvation-free', 0),
(2472, 725, '2 and 3', 0),
(2473, 725, '3 and 3', 0),
(2474, 725, '3 and 4', 1),
(2475, 725, '4 and 4 ', 0),
(2476, 726, '0.5%', 0),
(2477, 726, '1%', 0),
(2478, 726, '5%', 1),
(2479, 726, '10%', 0),
(2480, 728, 'T1.I1   T2.I3   T4.I3   T3', 1),
(2481, 728, '(T1   T2   T3).I3   T1.I1', 0),
(2482, 728, '(T1   T2 ).I1   (T2   T4).I3   T3', 0),
(2483, 728, '(T1   T2 ).I2   (T1   T3).I1   T3', 0),
(2484, 731, 'Stack', 1),
(2485, 731, 'Address Space', 0),
(2486, 731, 'File Descriptor Table', 0),
(2487, 731, 'Message Queue', 0),
(2488, 732, '2<sup>24</sup> bytes ', 0),
(2489, 732, '2<sup>32</sup> bytes ', 0),
(2490, 732, '2<sup>34</sup> bytes ', 1),
(2491, 732, '2<sup>48</sup> bytes ', 0),
(2492, 733, 'P(S<sub>y</sub>), P(S<sub>x</sub>); P(S<sub>x</sub>), P(S<sub>y</sub>) ', 0),
(2493, 733, 'P(S<sub>x</sub>), P(S<sub>y</sub>); P(S<sub>y</sub>), P(S<sub>x</sub>) ', 0),
(2494, 733, 'P(S<sub>x</sub>), P(S<sub>x</sub>); P(S<sub>y</sub>), P(S<sub>y</sub>) ', 0),
(2495, 733, 'P(S<sub>x</sub>), P(S<sub>y</sub>); P(S<sub>x</sub>), P(S<sub>y</sub>) ', 1),
(2496, 736, 'the instruction set architecture ', 1),
(2497, 736, 'page size ', 0),
(2498, 736, 'physical memory size ', 0),
(2499, 736, 'number of processes in memory ', 0),
(2500, 738, 'I', 1),
(2501, 738, 'II', 0),
(2502, 738, 'III', 1),
(2503, 738, 'IV', 1),
(2504, 740, '(i) 80 MB (ii) 2040 MB', 0),
(2505, 740, '(i) 2040 MB (ii) 80 MB', 0),
(2506, 740, '(i) 80 MB (ii) 360 MB', 0),
(2507, 740, '(i) 80 MB (ii) 360 MB', 1),
(2508, 741, 'I', 1),
(2509, 741, 'II', 1),
(2510, 741, 'III', 0),
(2511, 741, 'IV', 0),
(2512, 742, '0 3 5 7 16 55', 0),
(2513, 742, '0 3 5 7 9 16 55', 0),
(2514, 742, '0 5 7 9 16 55', 1),
(2515, 742, '3 5 7 9 16 55', 0),
(2516, 743, '30 sec, 30 sec', 0),
(2517, 743, '30 sec, 10 sec', 0),
(2518, 743, '42 sec, 42 sec', 0),
(2519, 743, '30 sec, 42 sec ', 1),
(2520, 744, '000 ,101, 111', 1),
(2521, 744, '101, 110, 111', 1),
(2522, 744, '011, 101, 111', 1),
(2523, 744, '001, 110, 111', 1),
(2524, 746, 'Both 1 and 2 are true', 1),
(2525, 746, '1 is true but 2 is false', 0),
(2526, 746, '2 is true but 1 is false', 0),
(2527, 746, 'Both 1 and 2 are false', 0),
(2528, 747, 'Virtual memory increases ', 0),
(2529, 747, 'Larger RAMs are faster ', 0),
(2530, 747, 'Fewer page faults occur ', 1),
(2531, 747, 'Fewer segmentation faults occur ', 0),
(2532, 748, 'I/O protection is ensured by operating system routine(s) ', 1),
(2533, 748, 'I/O protection is ensured by a hardware trap ', 0),
(2534, 748, 'I/O protection is ensured during system configuration ', 0),
(2535, 748, 'I/O protection is not possible ', 0),
(2536, 749, '<img src=\"./image/choice/749.1.jpg\"/><br/>', 0),
(2537, 749, '<img src=\"./image/choice/749.2.jpg\"/><br/>', 0),
(2538, 749, '<img src=\"./image/choice/749.3.jpg\"/><br/>', 1),
(2539, 749, '<img src=\"./image/choice/749.4.jpg\"/><br/>', 0),
(2540, 750, 'u = x   10 and v = y ', 0),
(2541, 750, 'u = x   10 and v is ≠ y ', 0),
(2542, 750, 'u   10 = x and v = y ', 1),
(2543, 750, 'u   10 = x and v ≠ y ', 0),
(2544, 751, 'P(x_sem), V(next)', 0),
(2545, 751, 'V(next), P(x_sem)', 0),
(2546, 751, 'P(next), V(x_sem)', 0),
(2547, 751, 'P(x_sem), V(x_sem)', 1),
(2548, 752, 'P < S < T', 0),
(2549, 752, 'S < P < T', 0),
(2550, 752, 'S < T < P', 1),
(2551, 752, 'T < S < P', 0),
(2552, 753, '1 only', 1),
(2553, 753, '2 only', 0),
(2554, 753, 'Neither 1 nor 2', 0),
(2555, 753, 'Both 1 and 2', 0),
(2556, 754, '11, 15, 9', 0),
(2557, 754, '10, 15, 9', 1),
(2558, 754, '11, 16, 10', 0),
(2559, 754, '12, 17, 11', 0),
(2560, 755, 'It is a multiprogrammed operating system', 0),
(2561, 755, 'It uses preemptive scheduling', 1),
(2562, 755, 'It uses non-preemptive scheduling', 0),
(2563, 755, 'It is a multi-user operating system ', 0),
(2564, 756, '1 only', 0),
(2565, 756, '2 only', 0),
(2566, 756, 'Neither 1 nor 2', 0),
(2567, 756, 'Both 1 and 2', 1),
(2568, 757, 'Efficient implementation of multi-user support is no longer possible ', 0),
(2569, 757, 'The processor cache organization can be made more efficient now ', 0),
(2570, 757, 'Hardware support for memory management is no longer needed', 1),
(2571, 757, 'CPU scheduling can be made more efficient now', 0),
(2572, 759, 'The implementation may not work if context switching is disabled in P', 1),
(2573, 759, 'Instead of using fetch-and-set, a pair of normal load/store can be used', 0),
(2574, 759, 'The implementation of V is wrong ', 0),
(2575, 759, 'The code does not implement a binary semaphore', 0),
(2576, 762, 'min (x<sub>p</sub>, x<sub>q</sub>) < max<sub>k≠p,q</sub>y<sub>k</sub>', 0),
(2577, 762, 'x<sub>p</sub>   x<sub>q</sub> ≥ min<sub>k≠p,q</sub>y<sub>k</sub>', 0),
(2578, 762, 'max (x<sub>p</sub>, x<sub>q</sub>) > 1', 0),
(2579, 762, 'min (x<sub>p</sub>, x<sub>q</sub>) > 1', 0),
(2580, 763, 'Lines 6 to 10 are simply replaced by process_arrived-- ', 0),
(2581, 763, 'At the beginning of the barrier the first process to enter the barrier waits until process_arrived becomes zero before proceeding to execute P(S). ', 1),
(2582, 763, 'Context switch is disabled at the beginning of the barrier and re-enabled at the end. ', 0),
(2583, 763, 'The variable process_left is made private instead of shared. ', 0),
(2584, 764, 'The barrier implementation is wrong due to the use of binary semaphore S ', 0),
(2585, 764, 'The barrier implementation may lead to a deadlock if two barriers in invocations are used in immediate succession ', 1),
(2586, 764, 'Lines 6 to 10 need not be inside a critical section ', 0),
(2587, 764, 'The barrier implementation is correct if there are only two processes instead of three ', 0),
(2588, 767, '11, 139, 170, 178, 181, 184, 201, 265', 0),
(2589, 767, '10, 138, 170, 178, 181, 185, 201, 265', 1),
(2590, 767, '10, 139, 169, 178, 181, 184, 201, 265', 0),
(2591, 767, '10, 138, 170, 178, 181, 185, 200, 265', 0),
(2592, 768, '0.0194', 1),
(2593, 768, '0.0233', 0),
(2594, 768, '0.0514', 0),
(2595, 768, '0.0981', 0),
(2596, 769, 'Non-decreasing order of t<sub>i</sub>', 0),
(2597, 769, 'Non-increasing order of w<sub>i</sub>', 0),
(2598, 769, 'Non-increasing order of w<sub>i</sub>t<sub>i</sub>', 0),
(2599, 769, 'None-increasing order of w<sub>i</sub>/t<sub>i</sub>', 1),
(2600, 772, '(i) is false and (ii) is true', 0),
(2601, 772, 'Both (i) and (ii) are false', 0),
(2602, 772, '(i) is true and (ii) is false', 1),
(2603, 772, 'Both (i) and (ii) are true', 0),
(2604, 775, 'It does not ensure mutual exclusion.', 0),
(2605, 775, 'It does not ensure bounded waiting. ', 0),
(2606, 775, 'It requires that processes enter the critical section in strict alternation. ', 0),
(2607, 775, 'It does not prevent deadlocks, but ensures mutual exclusion.', 1),
(2608, 776, 'P0', 0),
(2609, 776, 'P1 ', 0),
(2610, 776, 'P2', 1),
(2611, 776, 'None of the above, since the system is in a deadlock. ', 0),
(2612, 777, 'Both P and Q are true, and Q is the reason for P ', 0),
(2613, 777, 'Both P and Q are true, but Q is not the reason for P', 1),
(2614, 777, 'P is false, but Q is true ', 0),
(2615, 777, 'Both P and Q are false ', 0),
(2616, 779, 'Context switch time is longer for kernel level threads than for user level threads.', 0),
(2617, 779, 'User level threads do not need any hardware support. ', 0),
(2618, 779, 'Related kernel level threads can be scheduled on different processors in a multi-processor system. ', 0),
(2619, 779, 'Blocking one kernel level thread blocks all related threads. ', 1),
(2620, 780, 'P – 3 Q – 2 R – 1', 1),
(2621, 780, 'P – 1 Q – 2 R – 3 ', 0),
(2622, 780, 'P – 2 Q – 3 R – 1 ', 0),
(2623, 780, 'P – 1 Q – 3 R – 2 ', 0),
(2624, 781, 'I-d, II-a, III-b, IV-c', 0),
(2625, 781, 'I-b, II-c, III-a, IV-d', 0),
(2626, 781, 'I-c, II-d, III-a, IV-b', 0),
(2627, 781, 'I-b, II-c, III-d, IV-a', 1),
(2628, 782, 'degenerate to shortest job first', 0),
(2629, 782, 'degenerate to priority scheduling', 0),
(2630, 782, 'degenerate to first come first serve', 0),
(2631, 782, 'none of the above', 1),
(2632, 783, 'Both starvation and deadlock can occur', 0),
(2633, 783, 'Starvation can occur but deadlock cannot occur', 1),
(2634, 783, 'Starvation cannot occur but deadlock can occur', 0),
(2635, 783, 'Neither starvation nor deadlock can occur ', 0),
(2636, 784, 'The process can deadlock', 0),
(2637, 784, 'One of the threads can starve', 0),
(2638, 784, 'Some of the items produced by the producer may be lost', 0),
(2639, 784, 'Values generated and stored in ‘x’ by the producer will always be consumed before the producer can generate a new value', 1),
(2640, 785, '6 and 1, 2, 3, 4', 0),
(2641, 785, '7 and 1, 2, 4, 5', 1),
(2642, 785, '8 and 1, 2, 4, 5', 0),
(2643, 785, '9 and 1, 2, 3, 5', 0),
(2644, 786, '20, 20 and 20 ', 0),
(2645, 786, '24, 24 and 24 ', 0),
(2646, 786, '24, 24 and 20 ', 0),
(2647, 786, '25, 25 and 24 ', 1),
(2648, 787, 'n', 0),
(2649, 787, '2<sup>n</sup> - 1 ', 1),
(2650, 787, '2<sup>n</sup> ', 0),
(2651, 787, '2<sup>n+1</sup> - 1 ', 0),
(2652, 788, 'In deadlock prevention, the request for resources is always granted if the resulting state is safe ', 1),
(2653, 788, 'In deadlock avoidance, the request for resources is always granted if the result state is safe', 0),
(2654, 788, 'Deadlock avoidance is less restrictive than deadlock prevention', 0),
(2655, 788, 'Deadlock avoidance requires knowledge of resource requirements a priori ', 0),
(2656, 789, 'An ISR is invoked on completion of I/O in synchronous I/O but not in asynchronous I/O ', 0),
(2657, 789, 'In both synchronous and asynchronous I/O, an ISR (Interrupt Service Routine) is invoked after completion of the I/O ', 1),
(2658, 789, 'A process making a synchronous I/O call waits until I/O is complete, but a process making an asynchronous I/O call does not wait for completion of the I/O ', 0),
(2659, 789, 'In the case of synchronous I/O, the process waiting for the completion of I/O is woken up by the ISR that is invoked after the completion of I/O ', 0),
(2660, 790, '0 and 0 ', 0),
(2661, 790, '0 and 1', 0),
(2662, 790, '1 and 0', 1),
(2663, 790, '1 and 1', 0),
(2664, 791, 'contiguous allocation ', 0),
(2665, 791, 'linked allocation ', 0),
(2666, 791, 'indexed allocation', 0),
(2667, 791, 'an extension of indexed allocation ', 1),
(2668, 792, 'It reduces the memory access time to read or write a memory location. ', 0),
(2669, 792, 'It helps to reduce the size of page table needed to implement the virtual address space of a process. ', 1),
(2670, 792, 'It is required by the translation lookaside buffer. ', 0),
(2671, 792, 'It helps to reduce the number of page faults in page replacement algorithms. ', 0),
(2672, 793, 'I', 1),
(2673, 793, 'II', 0),
(2674, 793, 'III', 0),
(2675, 793, 'IV', 0),
(2676, 794, 'I', 0),
(2677, 794, 'II', 1),
(2678, 794, 'III', 1),
(2679, 794, 'IV', 0),
(2680, 796, 'All processes will finish without any deadlock.', 1),
(2681, 796, 'Only P1 and P2 will be in deadlock. ', 0),
(2682, 796, 'Only P1 and P3 will be in a deadlock. ', 0),
(2683, 796, 'All three processes will be in deadlock.', 0),
(2684, 797, 'Virtual page number', 0),
(2685, 797, 'Page frame number ', 1),
(2686, 797, 'Both virtual page number and page frame number ', 0),
(2687, 797, 'Access right information ', 0),
(2688, 798, 'n = 40, k = 26', 0),
(2689, 798, 'n = 21, k = 12', 1),
(2690, 798, 'n = 20, k = 10 ', 0),
(2691, 798, 'n = 41, k = 19 ', 0),
(2692, 799, 'At least twice', 1),
(2693, 799, 'Exactly twice', 0),
(2694, 799, 'Exactly thrice', 0),
(2695, 799, 'Exactly once', 0),
(2696, 801, 'Mutual exclusion but not progress ', 1),
(2697, 801, 'Progress but not mutual exclusion', 0),
(2698, 801, 'Neither mutual exclusion nor progress ', 0),
(2699, 801, 'Both mutual exclusion and progress', 0),
(2700, 802, 'I', 1),
(2701, 802, 'II', 1),
(2702, 802, 'III', 1),
(2703, 802, 'none', 0),
(2704, 804, '(t<sub>1</sub>) > (t<sub>2</sub>)', 0),
(2705, 804, '(t<sub>1</sub>) = (t<sub>2</sub>)', 0),
(2706, 804, '(t<sub>1</sub>) < (t<sub>2</sub>)', 1),
(2707, 804, 'Nothing can be said about the relation between t1 and t2', 0),
(2708, 805, 'On per-thread basis, the OS maintains only CPU register state', 0),
(2709, 805, 'The OS does not maintain a separate stack for each thread', 0),
(2710, 805, 'On per-thread basis, the OS does not maintain virtual memory state', 1),
(2711, 805, 'On per thread basis, the OS maintains only scheduling and accounting information ', 0),
(2712, 807, 'OPTIMAL < LRU < FIFO ', 0),
(2713, 807, 'OPTIMAL < FIFO < LRU ', 1),
(2714, 807, 'OPTIMAL = LRU ', 0),
(2715, 807, 'OPTIMAL = FIFO ', 0),
(2716, 808, '3 KBytes', 0),
(2717, 808, '35 KBytes', 1),
(2718, 808, '280 KBytes', 0),
(2719, 808, 'dependent on the size of the disk ', 0),
(2720, 809, 'fails as L can overflow ', 0),
(2721, 809, 'fails as L can take on a non-zero value when the lock is actually available ', 1),
(2722, 809, 'works correctly but may starve some processes ', 0),
(2723, 809, 'works correctly without starvation ', 0),
(2724, 810, 'FCFS: P1, P2, P3 RR2: P1, P2, P3', 0),
(2725, 810, 'FCFS: P1, P3, P2 RR2: P1, P3, P2', 0),
(2726, 810, 'FCFS: P1, P2, P3 RR2: P1, P3, P2', 1),
(2727, 810, 'FCFS: P1, P3, P2 RR2: P1, P2, P3', 0),
(2728, 813, 'ExitX(R,S) { P(R); V(S); } EntryY(R,S) { P(S); V(R); } ', 0),
(2729, 813, 'ExitX(R,S) { V(R); V(S); } EntryY(R,S) { P(R); P(S); } ', 0),
(2730, 813, 'ExitX(R,S) { P(S); V(R); } EntryY(R,S) { V(S); P(R); } ', 1),
(2731, 813, 'ExitX(R,S) { V(R); P(S); } EntryY(R,S) { V(S); P(R); } ', 0),
(2732, 817, '8×2<sup>20</sup>', 0),
(2733, 817, '4×2<sup>20</sup>', 0),
(2734, 817, '16×2<sup>10</sup>', 0),
(2735, 817, '256×2<sup>10</sup>', 1),
(2736, 820, 'Min (X<sub>p</sub>, X<sub>q</sub>) ≥ Min {Y<sub>k</sub> | 1 ≤ k ≤ n, k ≠ p, k ≠ q}', 0),
(2737, 820, 'X<sub>p</sub>   X<sub>q</sub> < Max {Y<sub>k</sub> | 1 ≤ k ≤ n, k ≠ p, k ≠ q}', 0),
(2738, 820, 'Min (X<sub>p</sub>, X<sub>q</sub>) ≤ Max {Y<sub>k</sub> | 1 ≤ k ≤ n, k ≠ p, k ≠ q} ', 0),
(2739, 820, 'X<sub>p</sub>   X<sub>q</sub> < Min {Y<sub>k</sub> | 1 ≤ k ≤ n, k ≠ p, k ≠ q}', 1),
(2740, 821, 'The hole created by worst fit is always larger than the hole created by first fit. ', 0),
(2741, 821, 'The hole created by best fit is never larger than the hole created by first fit. ', 1),
(2742, 821, 'The hole created by first fit is always larger than the hole created by next fit.', 0),
(2743, 821, 'The hole created by next fit is never larger than the hole created by best fit. ', 0),
(2744, 822, 'A running process can move to ready state.', 1),
(2745, 822, ' A ready process can move to ready state.', 1),
(2746, 822, 'A blocked process can move to running state.', 0),
(2747, 822, 'A blocked process can move to ready state.', 1),
(2748, 824, 'It ensures that all processes execute CODE SECTION P mutually exclusively. ', 0),
(2749, 824, 'It ensures that at most two processes are in CODE SECTION Q at any time.', 0),
(2750, 824, 'It ensures that no process executes CODE SECTION Q before every process has finished CODE SECTION P. ', 1),
(2751, 824, 'It ensures that at most n-1 processes are in CODE SECTION P at any time. ', 0),
(2752, 825, 'The head reverses its direction of movement between servicing of Q and P.', 0),
(2753, 825, 'T is serviced before P.', 0),
(2754, 825, 'R is serviced before P. ', 0),
(2755, 825, 'Q is serviced after S, but before T. ', 1),
(2756, 827, '(D-M)/(X-M)', 0),
(2757, 827, '(X-M)/(D-M)', 1),
(2758, 827, '(D-X)/(D-M)', 0),
(2759, 827, '(X-M)/(D-X)', 0),
(2760, 828, 'P: full, Q: full, R: empty, S: empty ', 0),
(2761, 828, 'P: empty, Q: empty, R: full, S: full ', 0),
(2762, 828, 'P: full, Q: empty, R: empty, S: full ', 1),
(2763, 828, 'P: empty, Q: full, R: full, S: empty ', 0),
(2764, 830, 'The system is in safe state. ', 1),
(2765, 830, 'The system is not in safe state, but would be safe if one more instance of E were available.', 0),
(2766, 830, 'The system is not in safe state, but would be safe if one more instance of F were available. ', 0),
(2767, 830, 'The system is not in safe state, but would be safe if one more instance of G were available. ', 0),
(2768, 831, 'global variables but not heap.', 0),
(2769, 831, 'heap but not global variables.', 0),
(2770, 831, 'neither global variables nor heap.', 0),
(2771, 831, 'both heap and global variables.', 1),
(2772, 833, 'x = 1, y = 2', 0),
(2773, 833, 'x = 2, y = 1', 0),
(2774, 833, 'x = 2, y = 2', 0),
(2775, 833, 'x = 1, y = 1', 1),
(2776, 834, 'S1 is true, S2 is true', 0),
(2777, 834, 'S1 is true, S2 is false', 1),
(2778, 834, 'S1 is false, S2 is true', 0),
(2779, 834, 'S1 is false, S2 is false', 0),
(2780, 835, 'Program counter', 0),
(2781, 835, 'Stack', 0),
(2782, 835, 'Address space', 1),
(2783, 835, 'Registers', 0),
(2784, 836, 'Contiguous', 0),
(2785, 836, 'Linked', 1),
(2786, 836, 'Indexed', 1),
(2787, 836, 'none', 0),
(2788, 837, 'Safe, Deadlocked', 0),
(2789, 837, 'Safe, Not Deadlocked', 1),
(2790, 837, 'Not Safe, Deadlocked', 0),
(2791, 837, 'Not Safe, Not Deadlocked', 0),
(2792, 839, 'Shortest remaining time ﬁrst ', 1),
(2793, 839, 'Round-robin with time quantum less than the shortest CPU burst ', 0),
(2794, 839, 'Uniform random ', 0),
(2795, 839, 'Highest priority ﬁrst with priority proportional to CPU burst length', 0),
(2796, 843, 'At most one process can be in the critical section at any time ', 1),
(2797, 843, 'The bounded wait condition is satisﬁed ', 0),
(2798, 843, 'The progress condition is satisﬁed ', 0),
(2799, 843, 'It cannot cause a deadlock', 0),
(2800, 844, 'LRU (Least Recently Used) ', 0),
(2801, 844, 'OPT (Optimal Page Replacement) ', 0),
(2802, 844, 'MRU (Most Recently Used) ', 0),
(2803, 844, 'FIFO (First In First Out)', 1),
(2804, 846, 'This is a correct two-process synchronization solution. ', 0),
(2805, 846, 'This solution violates mutual exclusion requirement. ', 0),
(2806, 846, 'This solution violates progress requirement. ', 1),
(2807, 846, 'This solution violates bounded wait requirement.', 0),
(2808, 851, 'Both incur the same number of page faults ', 1),
(2809, 851, 'FIFO incurs 2 more page faults than LRU ', 0),
(2810, 851, 'LRU incurs 2 more page faults than FIFO', 0),
(2811, 851, 'FIFO incurs 1 more page faults than LRU', 0),
(2812, 855, 'n', 0),
(2813, 855, 'n<sup>2</sup>', 0),
(2814, 855, '2n<sup> </sup>', 0),
(2815, 855, 'Independent of n ', 1),
(2816, 856, 'Any one of I and III but not II or IV ', 0),
(2817, 856, 'Any one of I, III, and IV but not II ', 0),
(2818, 856, 'Any one of II and III but not I or IV ', 0),
(2819, 856, 'Any one of I, II, III, and IV p', 1),
(2820, 857, ' First Come First Serve ', 0),
(2821, 857, 'Non-preemptive Shortest Job First', 0),
(2822, 857, 'Shortest Remaining Time ', 1),
(2823, 857, 'Round Robin with Quantum value two ', 0),
(2824, 859, 'User level threads are not scheduled by the kernel. ', 0),
(2825, 859, 'When a user level thread is blocked, all other threads of its process are blocked. ', 0),
(2826, 859, 'Context switching between user level threads is faster than context switching between kernel level threads. ', 0),
(2827, 859, 'Kernel level threads cannot share the code segment. ', 1),
(2828, 860, 'Only REQ1 can be permitted. ', 0),
(2829, 860, 'Only REQ2 can be permitted. ', 1),
(2830, 860, 'Both REQ1 and REQ2 can be permitted. ', 0),
(2831, 860, 'Neither REQ1 nor REQ2 can be permitted. ', 0),
(2832, 864, 'The producer will be able to add an item to the buffer, but the consumer can never consume it. ', 0),
(2833, 864, 'The consumer will remove no more than one item from the buffer. ', 0),
(2834, 864, 'Deadlock occurs if the consumer succeeds in acquiring semaphore s when the buffer is empty. ', 1),
(2835, 864, 'The starting value for the semaphore n must be 1 and not 0 for deadlock-free operation. ', 0),
(2836, 866, 'Least-recently-used ', 0),
(2837, 866, 'First-in-first-out ', 0),
(2838, 866, 'Last-in-first-out ', 1),
(2839, 866, 'Most-recently-used ', 0),
(2840, 868, '6 and 6 ', 1),
(2841, 868, '8 and 10 ', 0),
(2842, 868, '9 and 12 ', 0),
(2843, 868, '4 and 4 ', 0),
(2844, 872, 'This algorithm is equivalent to the first-come-first-serve algorithm. ', 0),
(2845, 872, 'This algorithm is equivalent to the round-robin algorithm. ', 1),
(2846, 872, 'This algorithm is equivalent to the shortest-job-first algorithm. ', 0),
(2847, 872, 'This algorithm is equivalent to the shortest-remaining-time-first algorithm. ', 0),
(2848, 873, 'X: P(a)P(b)P(c) Y: P(b)P(c)P(d) Z: P(c)P(d)P(a) ', 0),
(2849, 873, 'X: P(b)P(a)P(c) Y: P(b)P(c)P(d) Z: P(a)P(c)P(d) ', 1),
(2850, 873, 'X: P(b)P(a)P(c) Y: P(c)P(b)P(d) Z: P(a)P(c)P(d) ', 0),
(2851, 873, 'X: P(a)P(b)P(c) Y: P(c)P(b)P(d) Z: P(c)P(d)P(a) ', 0),
(2852, 879, ' 0, c', 1),
(2853, 879, '0, a+2', 0),
(2854, 879, '‘0’, ‘a+2’', 0),
(2855, 879, '‘0’, ‘c’', 0),
(2856, 880, 'Hi Bye Bye Hi', 1),
(2857, 880, 'Hi Bye Hi Bye', 0),
(2858, 880, 'Bye Hi Hi Bye', 0),
(2859, 880, 'Bye Hi Bye Hi', 0),
(2860, 883, 'compiler error as the return of malloc is not typecast approximately', 0),
(2861, 883, 'compiler error because the comparison should be made as x==NULL and not as showncompiler error because the comparison should be made as x==NULL and not as shown', 0),
(2862, 883, 'compiles successfully but execution may result in dangling pointer', 0),
(2863, 883, 'compiles successfully but execution may result in memory leak', 1),
(2864, 884, '53423122233445', 1),
(2865, 884, '53423120112233', 0),
(2866, 884, '53423122132435', 0),
(2867, 884, '53423120213243', 0),
(2868, 885, 'Return of 6 and 6 respectively.', 0),
(2869, 885, 'Infinite loop and abnormal termination respectively.', 0),
(2870, 885, 'Abnormal termination and infinite loop respectively.', 1),
(2871, 885, 'Both terminating abnormally.', 0),
(2872, 888, 'P→(ii), Q→(iv), R→(i), S→(iii)', 1),
(2873, 888, 'P→(ii), Q→(i), R→(iv), S→(iii)', 0),
(2874, 888, 'P→(ii), Q→(iv), R→(iii), S→(i)', 0),
(2875, 888, 'P→(iii), Q→(iv), R→(i), S→(ii)', 0),
(2876, 889, '0, 0', 0),
(2877, 889, '0, 1', 0),
(2878, 889, '1, 0', 1),
(2879, 889, '1, 1', 0),
(2880, 890, '(q == r) ', 0),
(2881, 890, '(x > 0) ', 0),
(2882, 890, '(q == 0) ', 1),
(2883, 890, '(q == 0) ', 0),
(2884, 894, 'f(s, *s)', 0),
(2885, 894, 'i = f(i, s) ', 0),
(2886, 894, 'f(i, *s)', 0),
(2887, 894, 'f(i, *p)', 1),
(2888, 896, 'a != n ', 0),
(2889, 896, 'b != 0 ', 0),
(2890, 896, 'b > (a + 1)', 0),
(2891, 896, 'b != a', 1),
(2892, 897, '3 1 2 2 1 3 4 4 4 ', 1),
(2893, 897, '3 1 2 1 1 1 2 2 2 ', 0),
(2894, 897, '3 1 2 2 1 3 4 ', 0),
(2895, 897, '3 1 2 1 1 1 2', 0),
(2896, 898, '6, 2 ', 0),
(2897, 898, '6, 6 ', 0),
(2898, 898, '4, 2 ', 0),
(2899, 898, '4, 4', 1),
(2900, 900, 'X<sup>Y</sup> = a<sup>b</sup>', 0),
(2901, 900, '(res * a)<sup>Y</sup> = (res * X)<sup>b</sup>', 0),
(2902, 900, 'X<sup>Y</sup> = res * a<sup>b</sup>', 1),
(2903, 900, 'X<sup>Y</sup> = (res * a)<sup>b</sup>', 0),
(2904, 903, '2036, 2036, 2036 ', 0),
(2905, 903, '2012, 4, 2204 ', 0),
(2906, 903, '2036, 10, 10', 0),
(2907, 903, '2012, 4, 6 ', 0),
(2908, 905, 'n<sup>3</sup>', 0),
(2909, 905, 'n(log n)<sup>2</sup>', 0),
(2910, 905, 'nlog n', 0),
(2911, 905, 'nlog (log n) ', 1),
(2912, 906, 'ABCD EFGH ', 0),
(2913, 906, 'ABCD', 0),
(2914, 906, 'HGFE DCBA ', 0),
(2915, 906, 'DCBA', 1),
(2916, 914, 'Compilation fails. ', 0),
(2917, 914, 'Execution results in a run-time error. ', 0),
(2918, 914, 'On execution, the value printed is 5 more than the address of variable i. ', 0),
(2919, 914, 'On execution, the value printed is 5 more than the integer value entered. ', 1),
(2920, 916, 'p = n * (n-1) * (n-2) / 6;', 0),
(2921, 916, 'p = n * (n-1) / 2 * (n-2) / 3; ', 1),
(2922, 916, 'p = n * (n-1) / 3 * (n-2) / 2; ', 0),
(2923, 916, 'p = n * (n-1) * (n-2) / 6.0; ', 0),
(2924, 918, 'The function returns 0 for all values of j. ', 0),
(2925, 918, 'The function prints the string something for all values of j. ', 0),
(2926, 918, 'The function returns 0 when j = 50.', 0),
(2927, 918, 'The function will exhaust the runtime stack or run into an infinite loop when j = 50. ', 1),
(2928, 919, 'The matrix A itself', 1),
(2929, 919, 'Transpose of the matrix A', 0),
(2930, 919, 'Adding 100 to the upper diagonal elements and subtracting 100 from lower diagonal elements of A', 0),
(2931, 919, 'None of the above', 0),
(2932, 921, 'Θ(n<sup>2</sup>) ', 0),
(2933, 921, 'Θ(n<sup>2</sup> log n)', 1),
(2934, 921, 'Θ(n<sup>3</sup>) ', 0),
(2935, 921, 'Θ(n<sup>3</sup> logn)', 0),
(2936, 922, 'None', 0),
(2937, 922, '2 only ', 0),
(2938, 922, '3 and 4 only ', 1),
(2939, 922, '4 only ', 0),
(2940, 923, 'No Choice', 0),
(2941, 923, 'Choice A', 0),
(2942, 923, 'Choice A Choice B No Choice', 1),
(2943, 923, 'Program gives no output as it is erroneous ', 0),
(2944, 924, 'GATE2011', 0),
(2945, 924, 'E2011', 0),
(2946, 924, '2011', 1),
(2947, 924, '011', 0),
(2948, 926, '<img src=\"./image/choice/927.1.jpg\"/><br/>', 0),
(2949, 926, '<img src=\"./image/choice/927.2.jpg\"/><br/>', 0),
(2950, 926, '<img src=\"./image/choice/927.3.jpg\"/><br/>', 1),
(2951, 926, '<img src=\"./image/choice/927.4.jpg\"/>', 0),
(2952, 928, '2 2', 0),
(2953, 928, '2 1', 0),
(2954, 928, '0 1', 0),
(2955, 928, '0 2', 1),
(2956, 931, 'x = 3, y = 4, z = 2', 1),
(2957, 931, 'x = 6, y = 5, z = 3 ', 0),
(2958, 931, 'x = 6, y = 3, z = 5 ', 0),
(2959, 931, 'x = 5, y = 4, z = 5', 0),
(2960, 933, '?1 is (getchar( ) != ’\\n’) , ?2 is getchar(c);', 0),
(2961, 933, '?1 is (c = getchar( ) ) != ’\\n’) , ?2 is getchar(c);', 0),
(2962, 933, '?1 is (c != ’\\n’), ?2 is putchar(c);', 0),
(2963, 933, '?1 is ((c = getchar()) != ’\\n’), ?2 is putchar(c);', 1),
(2964, 934, '1661 and 1640', 0),
(2965, 934, '59 and 59', 0),
(2966, 934, '1640 and 1640 ', 1),
(2967, 934, '1640 and 1661 ', 0),
(2968, 935, 'call swap (x, y) ', 1),
(2969, 935, 'call swap (', 0),
(2970, 935, 'swap (x,y) cannot be used as it does not return any value ', 0),
(2971, 935, 'swap (x,y) cannot be used as the parameters are passed by value ', 0),
(2972, 937, 'a[i] ≥ b [i] => c[2i] ≥ a [i]', 0),
(2973, 937, 'a[i] ≥ b [i] => c[2i] ≥ b [i]', 1),
(2974, 937, 'a[i] ≥ b [i] => c[2i] ≤ a [i]', 1),
(2975, 937, 'a[i] ≥ b [i] => c[2i] ≤ b [i]', 0),
(2976, 938, 'a[j] – a[i] > S', 0),
(2977, 938, 'a[j] – a[i] < S', 1),
(2978, 938, 'a[i] – a[j] < S', 0),
(2979, 938, 'a[i] – a[j] > S ', 0),
(2980, 939, '1, 2, 3, 4, 5, 6, 7', 0),
(2981, 939, '2, 1, 4, 3, 6, 5, 7', 1),
(2982, 939, '1, 3, 2, 5, 4, 7, 6', 0),
(2983, 939, '2, 3, 4, 5, 6, 7, 1', 0),
(2984, 940, 'A : count [a[j]]++ and B : count[b[j]]–', 0),
(2985, 940, 'A : count [a[j]]++ and B : count[b[j]]++', 0),
(2986, 940, 'A : count [a[j++]]++ and B : count[b[j]]–', 0),
(2987, 940, 'A : count [a[j]]++and B : count[b[j++]]–', 1),
(2988, 941, 'no compile warning or error', 0),
(2989, 941, 'some compiler-warnings due to type-mismatch eventually leading to unintended results ', 0),
(2990, 941, 'some compiler-warnings not leading to unintended results', 0),
(2991, 941, 'no compile warning or error', 1),
(2992, 942, 'A function that takes an integer pointer as argument and returns an integer.', 0),
(2993, 942, 'A function that takes an integer as argument and returns an integer pointer.', 0),
(2994, 942, 'A pointer to a function that takes an integer pointer as argument and returns an integer.', 1),
(2995, 942, 'A function that takes an integer pointer as argument and returns a function pointer.', 0),
(2996, 943, '(n == 0) || (m == 1)', 0),
(2997, 943, '(n == 0) ', 0),
(2998, 943, '(n == 0) || (m == n)', 1),
(2999, 943, '(n == 0) ', 0),
(3000, 944, '8, -12, 7, 23, 8', 1),
(3001, 944, '8, 8, 7, 23, 7', 0),
(3002, 944, '-12, -12, 27, -31, 23', 0),
(3003, 944, '-12, -12, 27, -31, 56', 0),
(3004, 945, 'a = 0, b = 3 <br/>a = 0, b = 3<br/>', 0),
(3005, 945, 'a = 3, b = 0 <br/>a = 12, b = 9<br/>', 0),
(3006, 945, 'a = 3, b = 6 <br/>a = 3, b = 6<br/>', 0),
(3007, 945, 'a = 6, b = 3 <br/>a = 15, b = 12<br/>', 1),
(3008, 946, 'jungle, n, 8, ncestor', 0),
(3009, 946, 'etter, u, 6, ungle', 1),
(3010, 946, 'cetter, k, 6, jungle', 0),
(3011, 946, 'etter, u, 8, ncestor', 0),
(3012, 947, 'S1', 0),
(3013, 947, 'S2 and S3', 0),
(3014, 947, 'S2 and S4 ', 1),
(3015, 947, 'S2 and S5 ', 0),
(3016, 948, 'Early, late, decrease, increase', 0),
(3017, 948, 'Late, early, increase, decrease', 0),
(3018, 948, 'Late, early, decrease, increase', 0),
(3019, 948, 'Early, late, increase, decrease', 1),
(3020, 949, 'x = 10, y = 10', 0),
(3021, 949, 'x = 20, y = 10', 0),
(3022, 949, 'x = 10, y = 20', 1),
(3023, 949, 'x = 20, y = 20 ', 0),
(3024, 950, 'Call by value : i = 70, j = 10; Call by reference : i = 60, j = 70', 0),
(3025, 950, 'Call by value : i = 50, j = 60; Call by reference : i = 50, j = 70', 0),
(3026, 950, 'Call by value : i = 10, j = 70; Call by reference : i = 100, j = 60', 0),
(3027, 950, 'Call by value : i = 100, j = 60; Call by reference : i = 10, j = 70', 1),
(3028, 952, 'The function f terminates for finitely many different values of n ≥ 1. ', 0),
(3029, 952, ' The function f terminates for infinitely many different values of n ≥ 1.', 1),
(3030, 952, 'The function f does not terminate for finitely many different values of n ≥ 1. ', 0),
(3031, 952, 'The function f does not terminate for infinitely many different values of n ≥ 1. Which one of the following options is true of the above?', 1),
(3032, 954, 'Both P1 and P2', 0),
(3033, 954, 'P2 only', 0),
(3034, 954, 'P1 only', 0),
(3035, 954, 'Neither P1 nor P2', 0),
(3036, 955, '010110101', 0),
(3037, 955, '010101101', 0),
(3038, 955, '10110101', 0),
(3039, 955, '10101101', 1),
(3040, 956, 'dlrow', 0),
(3041, 956, 'Null String', 1),
(3042, 956, 'dlrld', 0),
(3043, 956, 'worow ', 0),
(3044, 957, '5, 5', 0),
(3045, 957, '5, 4', 0),
(3046, 957, '4, 5', 1),
(3047, 957, '4, 4', 0),
(3048, 958, '2, 3', 0),
(3049, 958, '2, 4', 0),
(3050, 958, '3, 2', 1),
(3051, 958, '3, 3', 0),
(3052, 959, '<img src=\"./image/choice/959.1.jpg\"/><br/>', 0),
(3053, 959, '<img src=\"./image/choice/959.2.jpg\"/><br/>', 1),
(3054, 959, '<img src=\"./image/choice/959.3.jpg\"/><br/>', 0),
(3055, 959, '<img src=\"./image/choice/959.4.jpg\"/><br/>', 0),
(3056, 960, 'have well indented programs ', 0),
(3057, 960, 'be able to infer the flow of control from the compiled code ', 0),
(3058, 960, 'be able to infer the flow of control from the program text ', 1),
(3059, 960, 'avoid the use of GOTO statements ', 0),
(3060, 962, 'n = d<sub>1</sub>d<sub>2</sub>…d<sub>m-i</sub> and rev = d<sub>m</sub>d<sub>m-1</sub>…d<sub>m-i+1</sub>', 1),
(3061, 962, 'n = d<sub>m-i+1</sub>…d<sub>m-1</sub>d<sub>m</sub> or rev = d<sub>m-i</sub>…d<sub>2</sub>d<sub>1</sub> ', 0),
(3062, 962, 'n ≠ rev', 0),
(3063, 962, 'n = d<sub>1</sub>d<sub>2</sub>…d<sub>m</sub> and rev = d<sub>m</sub>…d<sub>2</sub>d<sub>1</sub> ', 0),
(3064, 963, 'gnirts', 0),
(3065, 963, 'string ', 0),
(3066, 963, 'gnirt', 0),
(3067, 963, 'no output is printed ', 1),
(3068, 964, 'x + y using repeated subtraction ', 0),
(3069, 964, 'x mod y using repeated subtraction ', 0),
(3070, 964, 'the greatest common divisor of x and y ', 1),
(3071, 964, 'the least common multiple of x and y ', 0),
(3072, 965, 'x = 1 + x;', 0),
(3073, 965, 'x = 1 - x;', 1),
(3074, 965, 'x = x - 1;', 0),
(3075, 965, 'x = 1 % x;', 0),
(3076, 966, 'abcd', 0),
(3077, 966, 'dcba', 0),
(3078, 966, 'abad', 0),
(3079, 966, 'cabd', 1),
(3080, 967, '<img src=\"./image/choice/967.1.jpg\"/><br/>', 0),
(3081, 967, '<img src=\"./image/choice/967.2.jpg\"/><br/>', 0),
(3082, 967, '<img src=\"./image/choice/967.3.jpg\"/><br/>', 1),
(3083, 967, '<img src=\"./image/choice/967.4.jpg\"/><br/>', 0),
(3084, 968, '43 80', 1),
(3085, 968, '42 74', 0),
(3086, 968, '33 37', 0),
(3087, 968, '32 32', 0),
(3088, 969, '?1 is getchar() ! = ‘\\n’ ,?2 is getchar(c);', 0),
(3089, 969, '?1 is (c = getchar()); ! = ‘\\n’,  ?2 is getchar(c);', 0),
(3090, 969, '?1 is c! = ‘\\n’, ?2 is putchar(c);', 0),
(3091, 969, '?1 is (c = getchar()) ! = ‘\\n’, ?2 is putchar(c);', 1),
(3092, 970, 'AB<br/> UV <br/>VW<br/> VW<br/>', 0),
(3093, 970, 'AB<br/> UV <br/>AB<br/> VW<br/>', 1),
(3094, 970, 'AB<br/> UV<br/> UV<br/> VW<br/>', 0),
(3095, 970, 'AB <br/>UV<br/> VW <br/>UV', 0),
(3096, 971, '115, 220', 0),
(3097, 971, '25, 220 ', 0),
(3098, 971, '25, 15 ', 0),
(3099, 971, '115, 105 ', 1),
(3100, 972, '{m|m ≤ n, (∃i)[m=i!]} ', 0),
(3101, 972, '{m|m ≤ n, (∃i)[m=i<sup>2</sup>]} ', 0),
(3102, 972, '{m|m ≤ n, m is prime} ', 0),
(3103, 972, '{ } ', 1),
(3104, 973, '12 7 6 ', 1),
(3105, 973, '22 12 11 ', 0),
(3106, 973, '14 6 6 ', 0),
(3107, 973, '7 6 6 ', 0);
INSERT INTO `choice` (`id`, `q_id`, `choice`, `correct`) VALUES
(3108, 974, 'At most one activation record exists between the current activation record and the activation record for the main ', 0),
(3109, 974, 'The number of activation records between the current activation record and the activation record for the main depends on the actual function calling sequence.', 1),
(3110, 974, 'The visibility of global variables depends on the actual function calling sequence. ', 0),
(3111, 974, 'Recursion requires the activation record for the recursive function to be saved on a different stack before the recursive fraction can be called. ', 0),
(3112, 975, 'An array, each element of which is a pointer to a structure of type node ', 1),
(3113, 975, 'A structure of 2 fields, each field being a pointer to an array of 10 elements ', 0),
(3114, 975, 'A structure of 3 fields: an integer, a float, and an array of 10 elements ', 0),
(3115, 975, 'An array, each element of which is a structure of type node ', 0),
(3116, 976, 'X – 1 Y – 3 Z – 2 ', 0),
(3117, 976, 'X – 2 Y – 1 Z – 3 ', 0),
(3118, 976, 'X – 3 Y – 2 Z – 1 ', 0),
(3119, 976, 'X – 3 Y – 1 Z – 2', 1),
(3120, 977, 'multiple variables having the same memory location ', 1),
(3121, 977, 'multiple variables having the same value ', 0),
(3122, 977, 'multiple variables having the same identifier ', 0),
(3123, 977, 'multiple uses of the same variable ', 0),
(3124, 978, '22 bytes ', 0),
(3125, 978, '14 bytes ', 0),
(3126, 978, '18 bytes ', 1),
(3127, 978, '10 bytes', 0),
(3128, 980, 'Finds the maximum of a, b, and c ', 0),
(3129, 980, 'Finds the minimum of a, b and c', 0),
(3130, 980, 'Finds the middle number of a, b, c', 0),
(3131, 980, 'None of the above ', 1),
(3132, 981, '10, 3', 0),
(3133, 981, '31, 3', 1),
(3134, 981, '27, 7', 0),
(3135, 981, 'None of the above', 0),
(3136, 982, 'Passing an expression as a parameter', 1),
(3137, 982, 'Passing an array as a parameter', 0),
(3138, 982, 'Passing a pointer as a parameter', 0),
(3139, 982, 'Passing as array element as a parameter', 1),
(3140, 983, 'It makes it more difficult to verify programs.', 1),
(3141, 983, 'It makes programs more inefficient.', 0),
(3142, 983, 'It makes it more difficult to modify existing programs.', 0),
(3143, 983, 'It results in the compiler generating longer machine code.', 0),
(3144, 984, 'Each leaf node has a pointer to the next leaf node', 0),
(3145, 984, 'Non-leaf nodes have pointers to data records', 1),
(3146, 984, 'B<sup> </sup> Tree is a height-balanced tree', 0),
(3147, 984, 'Key values in each node are kept in sorted order', 0),
(3148, 985, 'Both I and II', 1),
(3149, 985, 'Neither I nor II', 0),
(3150, 985, 'II only', 0),
(3151, 985, 'I only', 0),
(3152, 988, 'I only', 0),
(3153, 988, 'Neither I nor II', 0),
(3154, 988, 'II only', 1),
(3155, 988, 'Both I and II', 0),
(3156, 990, 'Ovals that contain underlined identifiers ', 0),
(3157, 990, 'Rectangles with double/bold border ', 0),
(3158, 990, 'Diamonds with double/bold border ', 1),
(3159, 990, 'Ovals with double/bold border ', 0),
(3160, 991, '<img src=\"./image/choice/991.1.jpg\"/><br/>', 0),
(3161, 991, '<img src=\"./image/choice/991.2.jpg\"/><br/>', 1),
(3162, 991, '<img src=\"./image/choice/991.3.jpg\"/><br/>', 0),
(3163, 991, '<img src=\"./image/choice/991.4.jpg\"/><br/>', 0),
(3164, 992, 'A cell in R holds a set instead of an atomic value. ', 0),
(3165, 992, 'R has a nontrivial functional dependency X-->A, where X is not a superkey and A is a non-prime attribute and X is not a proper subset of any key. ', 0),
(3166, 992, 'R has a nontrivial functional dependency X-->A, where X is not a superkey and A is a non-prime attribute and X is a proper subset of some key. ', 0),
(3167, 992, 'R has a nontrivial functional dependency X-->A, where X is not a superkey and A is a prime attribute. ', 1),
(3168, 994, 'Every entity in E1 is associated with exactly one entity in E2. ', 1),
(3169, 994, 'Some entity in E1 is associated with more than one entity in E2. ', 0),
(3170, 994, 'Every entity in E2 is associated with exactly one entity in E1. ', 0),
(3171, 994, 'Every entity in E2 is associated with at most one entity in E1. ', 0),
(3172, 995, 'Query 1 ', 0),
(3173, 995, 'Query 2', 0),
(3174, 995, 'Query 3', 0),
(3175, 995, 'Query 4', 1),
(3176, 996, 'Schema I', 0),
(3177, 996, 'Schema II', 1),
(3178, 996, 'Schema III', 0),
(3179, 996, 'Schema IV', 0),
(3180, 997, 'σ<sub>B<5</sub> (r ⨝ s) ', 0),
(3181, 997, 'σ<sub>B<5</sub> (r LOJ s) ', 0),
(3182, 997, 'r LOJ (σ<sub>B<5</sub>(s)) ', 1),
(3183, 997, 'σ<sub>B<5</sub>(r) LOJ s', 0),
(3184, 998, 'V→W<br/> V→X<br/> Y→V<br/> Y→Z<br/>', 1),
(3185, 998, 'V→W<br/> W→X<br/> Y→V<br/> Y→Z<br/>', 0),
(3186, 998, 'V→W<br/> V→X<br/> Y→V<br/> Y→X <br/>Y→Z<br/>', 0),
(3187, 998, 'V→W <br/>W→X<br/> Y→V<br/> Y→X <br/>Y→Z', 0),
(3188, 1000, '{t│∃u ∈ EMP(t[EmpName] = u[EmpName] ∧ ∀v ∈ DEPT(t[DeptId] ≠ v[DeptId]))}', 1),
(3189, 1000, '{t│∃u ∈ EMP(t[EmpName] = u[EmpName] ∧ ∃v ∈ DEPT(t[DeptId] ≠ v[DeptId]))}', 1),
(3190, 1000, '{t│∃u ∈ EMP(t[EmpName] = u[EmpName] ∧ ∃v ∈ DEPT(t[DeptId] = v[DeptId]))} ', 1),
(3191, 1000, 'none', 0),
(3192, 1001, 'The database system is both deadlock-free and starvation-free.', 1),
(3193, 1001, 'The database system is deadlock-free, but not starvation-free.', 0),
(3194, 1001, 'The database system is starvation-free, but not deadlock-free.', 0),
(3195, 1001, 'The database system is neither deadlock-free nor starvation-free.', 0),
(3196, 1003, 'Relationship R is one-to-many and the participation of A in R is total.', 0),
(3197, 1003, 'Relationship R is one-to-many and the participation of A in R is partial.', 0),
(3198, 1003, 'Relationship R is many-to-one and the participation of A in R is total. ', 1),
(3199, 1003, 'Relationship R is one-to-many and the participation of A in R is partial.', 0),
(3200, 1008, 'VXYZ', 0),
(3201, 1008, 'VWXZ ', 1),
(3202, 1008, 'VWXY ', 0),
(3203, 1008, 'VWXYZ', 0),
(3204, 1009, 'Atomicity ', 0),
(3205, 1009, 'Consistency ', 0),
(3206, 1009, 'Isolation ', 0),
(3207, 1009, 'Deadlock-freedom', 1),
(3208, 1010, '1NF', 0),
(3209, 1010, '2NF', 1),
(3210, 1010, '3NF', 0),
(3211, 1010, 'BCNF', 0),
(3212, 1011, 'guarantee serializability and deadlock-freedom ', 1),
(3213, 1011, 'guarantee neither serializability nor deadlock-freedom ', 0),
(3214, 1011, 'guarantee serializability but not deadlock-freedom ', 0),
(3215, 1011, 'guarantee deadlock-freedom but not serializability', 0),
(3216, 1012, 'the lengths of the paths from the root to all leaf nodes are all equal. ', 1),
(3217, 1012, 'the lengths of the paths from the root to all leaf nodes differ from each other by at most 1. ', 0),
(3218, 1012, 'the number of children of any two non-leaf sibling nodes differ by at most 1. ', 0),
(3219, 1012, 'the number of records in any two leaf nodes differ by at most 1.', 0),
(3220, 1013, 'Topological order ', 1),
(3221, 1013, 'Depth-ﬁrst order ', 0),
(3222, 1013, 'Breadth-ﬁrst order ', 0),
(3223, 1013, 'Ascending order of transaction indices', 0),
(3224, 1014, 'S is non-recoverable ', 0),
(3225, 1014, 'S is recoverable, but has a cascading abort ', 0),
(3226, 1014, 'S does not have a cascading abort', 1),
(3227, 1014, 'S is strict', 0),
(3228, 1016, 'the selection operation in relational algebra ', 0),
(3229, 1016, 'the selection operation in relational algebra, except that SELECT in SQL retains duplicates ', 0),
(3230, 1016, 'the projection operation in relational algebra ', 0),
(3231, 1016, 'the projection operation in relational algebra, except that SELECT in SQL retains duplicates ', 1),
(3232, 1019, 'Atomicity', 0),
(3233, 1019, 'Consistency', 1),
(3234, 1019, 'Isolation', 0),
(3235, 1019, 'Durability', 0),
(3236, 1021, 'R contains a,b,e,f,g but not c, d. ', 0),
(3237, 1021, ' R contains all of a,b,c,d,e,f,g ', 0),
(3238, 1021, 'R contains e,f,g but not a,b ', 1),
(3239, 1021, 'R contains e but not f,g ', 0),
(3240, 1022, ' Undo T3, T1; Redo T2 ', 1),
(3241, 1022, 'Undo T3, T1; Redo T2, T4 ', 0),
(3242, 1022, 'Undo: none; redo: T2, T4, T3, T1 ', 0),
(3243, 1022, 'Undo T3, T1; T4; Redo: T2 ', 0),
(3244, 1023, '{P,R}→{S,T} ', 0),
(3245, 1023, '{P,R}→{R,T} ', 0),
(3246, 1023, '{P,S}→{S}', 1),
(3247, 1023, '{P,S,U}→{Q}', 0),
(3248, 1024, 'WHERE P1.capacity >= All (select P2.capacity from Cinema P2) ', 1),
(3249, 1024, 'WHERE P1.capacity >= Any (select P2.capacity from Cinema P2) ', 0),
(3250, 1024, 'WHERE P1.capacity > All (select max(P2.capacity) from Cinema P2) ', 0),
(3251, 1024, 'WHERE P1.capacity > Any (select max(P2.capacity) from Cinema P2) ', 0),
(3252, 1025, '{E,F}', 0),
(3253, 1025, '{E,F,H}', 1),
(3254, 1025, '{E,F,H,K,L}', 0),
(3255, 1025, '{E}', 0),
(3256, 1026, 'S1 is TRUE and S2 is FALSE. ', 0),
(3257, 1026, 'Both S1 and S2 are TRUE. ', 0),
(3258, 1026, 'S1 is FALSE and S2 is TRUE. ', 0),
(3259, 1026, 'Both S1 and S2 are FALSE. ', 1),
(3260, 1027, 'r1 (x); r2 (x); w1 (x); r3 (x); w2 (x) ', 0),
(3261, 1027, ' r2 (x);r1 (x);w2 (x);r3 (x);w1 (x) ', 0),
(3262, 1027, 'r3 (x);r2 (x);r1 (x);w2 (x);w1 (x) ', 0),
(3263, 1027, 'r2 (x);w2 (x);r3 (x);r1 (x);w1 (x)', 1),
(3264, 1028, 'S1 is TRUE and S2 is FALSE. ', 1),
(3265, 1028, 'Both S1 and S2 are TRUE.', 0),
(3266, 1028, 'S1 is FALSE and S2 is TRUE. ', 0),
(3267, 1028, 'Both S1 and S2 are FALSE. ', 0),
(3268, 1029, 'It executes but does not give the correct result.', 0),
(3269, 1029, 'It executes and gives the correct result. ', 1),
(3270, 1029, 'It generates an error because of pairwise comparison. ', 0),
(3271, 1029, 'It generates an error because the GROUP BY clause cannot be used with table joins in a subquery.', 0),
(3272, 1032, 'S is conflict-serializable but not recoverable ', 0),
(3273, 1032, 'S is not conflict-serializable but is recoverable ', 0),
(3274, 1032, 'S is both conflict-serializable and recoverable ', 1),
(3275, 1032, 'S is neither conflict-serializable nor is it recoverable ', 0),
(3276, 1033, 'relation r(R) is in the outer loop. ', 0),
(3277, 1033, 'relation s(S) is in the outer loop. ', 0),
(3278, 1033, 'join selection factor between r(R) and s(S) is more than 0.5. ', 1),
(3279, 1033, 'join selection factor between r(R) and s(S) is less than 0.5. ', 0),
(3280, 1034, 'select R.* from R,S where R.a=S.a', 0),
(3281, 1034, 'select distinct R.* from R,S where R.a=S.a ', 0),
(3282, 1034, 'select R.* from R,(select distinct a from S) as S1 where R.a=S1.a ', 1),
(3283, 1034, 'select R.* from R,S where R.a=S.a and is unique R', 0),
(3284, 1035, 'π<sub>A1</sub> (σ<sub>(F1∧F2)</sub> (r))', 1),
(3285, 1035, 'π<sub>A1</sub> (σ<sub>(F1∨F2)</sub> (r))', 0),
(3286, 1035, 'π<sub>A2</sub> (σ<sub>(F1∧F2)</sub> (r))', 0),
(3287, 1035, 'π<sub>A2</sub> (σ<sub>(F1∨F2)</sub> (r))', 0),
(3288, 1036, 'in all candidate keys of R. ', 0),
(3289, 1036, 'in some candidate key of R. ', 1),
(3290, 1036, 'in a foreign key of R. ', 0),
(3291, 1036, 'only in the primary key of R . ', 0),
(3292, 1037, 'some dependent. ', 0),
(3293, 1037, 'all dependents. ', 0),
(3294, 1037, 'some of his/her dependents. ', 0),
(3295, 1037, 'all of his/her dependents. ', 1),
(3296, 1038, 'Names of all the employees with at least one of their customers having a ‘GOOD’ rating. ', 0),
(3297, 1038, 'Names of all the employees with at most one of their customers having a ‘GOOD’ rating. ', 0),
(3298, 1038, 'Names of all the employees with none of their customers having a ‘GOOD’ rating. ', 0),
(3299, 1038, 'Names of all the employees with all their customers having a ‘GOOD’ rating. ', 1),
(3300, 1039, 'it is on a set of fields that form a candidate key. ', 0),
(3301, 1039, 'it is on a set of fields that include the primary key. ', 0),
(3302, 1039, 'the data records of the file are organized in the same order as the data entries of the index. ', 1),
(3303, 1039, 'the data records of the file are organized not in the same order as the data entries of the index. ', 0),
(3304, 1040, 'I', 1),
(3305, 1040, 'II', 1),
(3306, 1040, 'III', 1),
(3307, 1040, 'IV', 1),
(3308, 1042, 'in 1NF, but not in 2NF. ', 1),
(3309, 1042, 'in 2NF, but not in 3NF. ', 0),
(3310, 1042, 'in 3NF, but not in BCNF.', 0),
(3311, 1042, 'in BCNF. ', 0),
(3312, 1043, 'Every relation in 3NF is also in BCNF ', 0),
(3313, 1043, 'A relation R is in 3NF if every non-prime attribute of R is fully functionally dependent on every key of R ', 0),
(3314, 1043, 'Every relation in BCNF is also in 3NF ', 1),
(3315, 1043, 'No relation can be in both BCNF and 3NF ', 0),
(3316, 1044, 'An attribute of an entity can have more than one value ', 0),
(3317, 1044, 'An attribute of an entity can be composite ', 0),
(3318, 1044, 'In a row of a relational table, an attribute can have more than one value ', 1),
(3319, 1044, 'In a row of a relational table, an attribute can have exactly one value or a NULL value ', 0),
(3320, 1045, 'An SQL query can contain a HAVING clause even if it does not have a GROUP BY clause ', 0),
(3321, 1045, 'An SQL query can contain a HAVING clause even if it has a GROUP BY clause ', 1),
(3322, 1045, 'All attributes used in the GROUP BY clause must appear in the SELECT clause ', 1),
(3323, 1045, 'Not all attributes used in the GROUP BY clause need to appear in the SELECT clause', 0),
(3324, 1046, 'a serializable schedule ', 0),
(3325, 1046, 'a schedule that is not conflict serializable', 1),
(3326, 1046, 'a conflict serializable schedule ', 0),
(3327, 1046, 'a schedule for which a precedence graph cannot be drawn ', 0),
(3328, 1047, '∏<sub>B</sub> (r<sub>1</sub>) - ∏<sub>C</sub> (r<sub>2</sub>) = ∅', 0),
(3329, 1047, '∏<sub>C</sub> (r<sub>2</sub>) - ∏<sub>B</sub> (r<sub>1</sub>) = ∅', 0),
(3330, 1047, '∏<sub>B</sub> (r<sub>1</sub>) = ∏<sub>C</sub> (r<sub>2</sub>)', 1),
(3331, 1047, '∏<sub>B</sub> (r<sub>1</sub>) - ∏<sub>C</sub> (r<sub>2</sub>) ≠ ∅', 0),
(3332, 1050, 'BankAccount_Num is a candidate key', 1),
(3333, 1050, 'Registration_Num can be a primary key ', 0),
(3334, 1050, 'UID is a candidate key if all students are from the same country', 0),
(3335, 1050, 'If S is a superkey such that S∩UID is NULL then S∪UID is also a superkey', 0),
(3336, 1051, 'BankAccount_Num is a candidate key', 1),
(3337, 1051, 'Registration_Num can be a primary key ', 0),
(3338, 1051, 'UID is a candidate key if all students are from the same country', 0),
(3339, 1051, 'If S is a superkey such that S∩UID is NULL then S∪UID is also a superkey', 0),
(3340, 1055, '1, 0', 0),
(3341, 1055, '1, 2', 0),
(3342, 1055, '1, 3', 1),
(3343, 1055, '1, 5', 0),
(3344, 1056, 'I only ', 0),
(3345, 1056, 'II only', 1),
(3346, 1056, 'Both I and II', 0),
(3347, 1056, 'Neither I nor II', 0),
(3348, 1057, 'T1 → T3 → T2', 1),
(3349, 1057, 'T2 → T1 → T3', 0),
(3350, 1057, 'T2 → T3 → T1', 0),
(3351, 1057, 'T3 → T1 → T2', 0),
(3352, 1059, 'S1', 0),
(3353, 1059, 'S2', 1),
(3354, 1059, 'S3', 1),
(3355, 1059, 'S4', 0),
(3356, 1061, 'I', 1),
(3357, 1061, 'II', 1),
(3358, 1061, 'III', 0),
(3359, 1061, 'IV', 0),
(3360, 1062, 'Find the names of all suppliers who have supplied a non-blue part. ', 1),
(3361, 1062, 'Find the names of all suppliers who have not supplied a non-blue part.', 0),
(3362, 1062, 'Find the names of all suppliers who have supplied only blue parts. ', 0),
(3363, 1062, 'Find the names of all suppliers who have not supplied only blue parts. ', 0),
(3364, 1063, 'The schema is in BCNF', 1),
(3365, 1063, 'The schema is in 3NF but not in BCNF ', 0),
(3366, 1063, 'The schema is in 2NF but not in 3NF', 0),
(3367, 1063, 'The schema is not in 2NF', 0),
(3368, 1064, 'I', 0),
(3369, 1064, 'II', 0),
(3370, 1064, 'III', 1),
(3371, 1064, 'IV', 0),
(3372, 1065, 'non-key and ordering ', 1),
(3373, 1065, 'non-key and non-ordering ', 0),
(3374, 1065, 'key and ordering ', 0),
(3375, 1065, 'key and non-ordering ', 0),
(3376, 1067, 'I', 1),
(3377, 1067, 'II', 0),
(3378, 1067, 'III', 1),
(3379, 1067, 'IV', 1),
(3380, 1068, 'Both Book and Collection are in BCNF ', 0),
(3381, 1068, 'Both Book and Collection are in 3NF only ', 0),
(3382, 1068, 'Book is in 2NF and Collection is in 3NF ', 1),
(3383, 1068, 'Both Book and Collection are in 2NF only ', 0),
(3384, 1069, '8 and 0', 0),
(3385, 1069, '128 and 6', 0),
(3386, 1069, '256 and 4 ', 1),
(3387, 1069, '512 and 5', 0),
(3388, 1071, '{M1, M2, M3, P1}', 1),
(3389, 1071, '{M1, P1, N1, N2} ', 0),
(3390, 1071, '{M1, P1, N1}', 0),
(3391, 1071, '{M1, P1} ', 0),
(3392, 1072, 'gives a lossless join, and is dependency preserving', 1),
(3393, 1072, 'gives a lossless join, but is not dependency preserving', 0),
(3394, 1072, 'does not give a lossless join, but is dependency preserving', 0),
(3395, 1072, 'does not give a lossless join and is not dependency preserving ', 0),
(3396, 1073, 'in BCNF', 0),
(3397, 1073, 'in 3NF, but not in BCNF', 0),
(3398, 1073, 'in 2NF, but not in 3NF', 0),
(3399, 1073, 'not in 2NF', 1),
(3400, 1074, 'S1, S2 and S3 are all conflict equivalent to each other', 0),
(3401, 1074, 'No two of S1, S2 and S3 are conflict equivalent to each other', 0),
(3402, 1074, 'S2 is conflict equivalent to S3, but not to S1', 0),
(3403, 1074, 'S1 is conflict equivalent to S2, but not to S3', 1),
(3404, 1075, 'for each school with more than 200 students appearing in exams, the name of the school and the number of 100s scored by its students', 0),
(3405, 1075, 'for each school with more than 200 students in it, the name of the school and the number of 100s scored by its students', 0),
(3406, 1075, 'for each school with more than 200 students in it, the name of the school and the number of its students scoring 100 in at least one exam', 0),
(3407, 1075, 'nothing; the query has a syntax error ', 1),
(3408, 1076, 'The empty set', 0),
(3409, 1076, 'schools with more than 35% of its students enrolled in some exam or the other', 1),
(3410, 1076, 'schools with a pass percentage above 35% over all exams taken together', 0),
(3411, 1076, 'schools with a pass percentage above 35% over each exam', 0),
(3412, 1077, 'Courses in which all the female students are enrolled. ', 0),
(3413, 1077, 'Courses in which a proper subset of female students are enrolled. ', 1),
(3414, 1077, 'Courses in which only male students are enrolled. ', 0),
(3415, 1077, 'None of the above ', 0),
(3416, 1078, 'Names of employees with a male supervisor. ', 0),
(3417, 1078, 'Names of employees with no immediate male subordinates.', 0),
(3418, 1078, 'Names of employees with no immediate female subordinates.', 1),
(3419, 1078, 'Names of employees with a female supervisor. ', 0),
(3420, 1079, 'Any relation with two attributes is in BCNF', 0),
(3421, 1079, 'A relation in which every key has only one attribute is in 2NF ', 0),
(3422, 1079, 'A prime attribute can be transitively dependent on a key in a 3NF relation', 0),
(3423, 1079, 'A prime attribute can be transitively dependent on a key in a BCNF relation', 1),
(3424, 1081, 'Both S1 and S2 are conflict serializable. ', 0),
(3425, 1081, 'S1 is conflict serializable and S2 is not conflict serializable.', 0),
(3426, 1081, 'S1 is not conflict serializable and S2 is conflict serializable. ', 1),
(3427, 1081, 'Both S1 and S2 are not conflict serializable. ', 0),
(3428, 1082, '50', 0),
(3429, 1082, '100', 0),
(3430, 1082, '150', 0),
(3431, 1082, '200', 1),
(3432, 1083, '<img src=\"./image/choice/1083.1.jpg\"/><br/>', 0),
(3433, 1083, '<img src=\"./image/choice/1083.2.jpg\"/><br/>', 0),
(3434, 1083, '<img src=\"./image/choice/1083.3.jpg\"/><br/>', 1),
(3435, 1083, '<img src=\"./image/choice/1083.4.jpg\"/><br/>', 0),
(3436, 1084, 'If A ↠ B and A ↠ C then A → BC ', 0),
(3437, 1084, 'If A → B and A → C then A ↠ BC ', 1),
(3438, 1084, 'If A ↠ BC and A → B then A → C', 0),
(3439, 1084, 'If A → BC and A → B then A ↠ C ', 1),
(3440, 1085, 'П<sub>c-name</sub> (σ<sub>bal ', 1),
(3441, 1085, 'П<sub>c-name</sub> (σ<sub>b-city = “Agra”</sub>branch ⋈ (σ<sub>bal ', 0),
(3442, 1085, 'П<sub>c-name</sub> (σ<sub>b-city = “Agra”</sub> branch ⋈ σ<sub>b-city = “Agra” ⋀ bal ', 0),
(3443, 1085, 'П<sub>c-name</sub> (σ<sub>b-city = “Agra” ⋀ bal ', 0),
(3444, 1087, 'Statements (i) and (ii) are true', 0),
(3445, 1087, 'Statements (ii) and (iii) are true', 1),
(3446, 1087, 'Statements (iii) and (i) are true', 0),
(3447, 1087, 'All the statements are false', 0),
(3448, 1088, 'We must redo log record 6 to set B to 10500. ', 0),
(3449, 1088, 'We must undo log record 6 to set B to 10000 and then redo log records 2 and 3. ', 1),
(3450, 1088, 'We need not redo log records 2 and 3 because transaction T1 has committed. ', 0),
(3451, 1088, 'We can apply redo and undo operations in arbitrary order because they are idempotent. ', 0),
(3452, 1090, '2 and 5 ', 0),
(3453, 1090, '1 and 3 ', 0),
(3454, 1090, '1 and 4 ', 1),
(3455, 1090, '3 and 5 ', 0),
(3456, 1089, '{CF}<sup>+</sup> = {ACDEFG}', 0),
(3457, 1089, '{BG}<sup>+</sup> = {ABCDG} ', 1),
(3458, 1089, '{AF}<sup>+</sup> = {ACDEFG}', 0),
(3459, 1089, '{AB}<sup>+</sup> = {ABCDFG} ', 0),
(3460, 1091, 'All queries return identical row sets for any database. ', 0),
(3461, 1091, 'Query2 and Query4 return identical row sets for all databases but there exist databases for which Query1 and Query2 return different row sets. ', 1),
(3462, 1091, 'There exist databases for which Query3 returns strictly fewer rows than Query2. ', 0),
(3463, 1091, 'There exist databases for which Query4 will encounter an integrity violation at runtime. ', 0),
(3464, 1093, '2 and 3 only', 0),
(3465, 1093, '1 and 2 only', 0),
(3466, 1093, '1 and 3 only', 0),
(3467, 1093, '1, 2 and 3', 1),
(3468, 1095, 'VXZ', 0),
(3469, 1095, 'VXY', 1),
(3470, 1095, 'VWXY', 0),
(3471, 1095, 'VWXYZ', 0),
(3472, 1096, 'Karthikeyan, Boris', 1),
(3473, 1096, 'Sachin, Salman', 0),
(3474, 1096, 'Karthikeyan, Boris, Sachin', 0),
(3475, 1096, 'Schumacher, Senna ', 0),
(3476, 1097, '36 - 40', 0),
(3477, 1097, '44 - 48', 1),
(3478, 1097, '60 - 64', 0),
(3479, 1097, '100 - 104', 0),
(3480, 1098, 'AE, BE ', 0),
(3481, 1098, 'AE, BE, DE ', 0),
(3482, 1098, 'AEH, BEH, BCH', 0),
(3483, 1098, 'AEH, BEH, DEH', 1),
(3484, 1099, 'Titles of the four most expensive books ', 0),
(3485, 1099, 'Title of the fifth most inexpensive book ', 0),
(3486, 1099, 'Title of the fifth most expensive book ', 0),
(3487, 1099, 'Titles of the five most expensive books ', 1),
(3488, 1100, '(3,4) and (6,4)', 0),
(3489, 1100, '(5,2) and (7,2) ', 0),
(3490, 1100, '(5,2), (7,2) and (9,5) ', 1),
(3491, 1100, '(3,4), (4,3) and (6,4) ', 0),
(3492, 1101, 's ⊂ r ', 0),
(3493, 1101, 'r ∪ s = r ', 0),
(3494, 1101, 'r ⊂ s', 1),
(3495, 1101, 'r * s = s ', 0),
(3496, 1102, 'Database relations have a large number of records', 0),
(3497, 1102, 'Database relations are sorted on the primary key ', 0),
(3498, 1102, 'B - trees require less memory than binary search trees ', 0),
(3499, 1102, 'Data transfer from disks is in blocks', 1),
(3500, 1103, 'Which one of the following statements about normal forms is FALSE?  ', 0),
(3501, 1103, 'Lossless, dependency-preserving decomposition into 3NF is always possible ', 0),
(3502, 1103, 'Lossless, dependency-preserving decomposition into BCNF is always possible', 1),
(3503, 1103, 'Any relation with two attributes is in BCNF ', 0),
(3504, 1104, 'Person', 0),
(3505, 1104, 'Hotel Room', 0),
(3506, 1104, 'Lodging', 1),
(3507, 1104, 'None of these', 0),
(3508, 1105, '1 NF', 1),
(3509, 1105, '2 NF', 0),
(3510, 1105, '3 NF', 0),
(3511, 1105, 'None', 0),
(3512, 1107, 'Execute T1 followed by T2 followed by T3', 0),
(3513, 1107, 'Execute T2, followed by T3; T1 running concurrently throughout', 0),
(3514, 1107, 'Execute T3 followed by T2; T1 running concurrently throughout', 0),
(3515, 1107, 'Execute T3 followed by T2 followed by T1 ', 1),
(3516, 1109, 'do not supply any item', 0),
(3517, 1109, 'supply exactly one item', 0),
(3518, 1109, 'supply one or more items', 0),
(3519, 1109, 'supply two or more items', 1),
(3520, 1110, 'CD → AC', 0),
(3521, 1110, 'BD → CD', 1),
(3522, 1110, 'BC → CD', 0),
(3523, 1110, 'AC → BC', 0),
(3524, 1111, '800000', 0),
(3525, 1111, '40080', 0),
(3526, 1111, '32020', 1),
(3527, 1111, '100', 0),
(3528, 1112, '0', 0),
(3529, 1112, '30400', 1),
(3530, 1112, '38400', 0),
(3531, 1112, '798400', 0),
(3532, 1113, 'Indexed sequential file organization.', 0),
(3533, 1113, 'Two-way linked list.', 0),
(3534, 1113, 'Inverted file organization.', 1),
(3535, 1113, 'Sequential file organization.', 0),
(3536, 1114, 'Transitive functional dependencies.', 0),
(3537, 1114, 'Non-trivial functional dependencies involving prime attributes on the right-side. ', 1),
(3538, 1114, 'Non-trivial functional dependencies involving prime attributes only on the left-side. ', 0),
(3539, 1114, 'Non-trivial functional dependencies involving only prime attributes.', 1),
(3540, 1115, '(a) - (q), (b) - (r), (c) - (p), (d) - (s)', 1),
(3541, 1115, '(a) - (s), (b) - (r), (c) - (p), (d) - (q)', 0),
(3542, 1115, '(a) - (q), (b) - (s), (c) - (r), (d) - (p)', 0),
(3543, 1115, '(a) - (q), (b) - (r), (c) - (s), (d) - (p)', 0),
(3544, 1116, '{t|∃u ∈ R<sub>1</sub> (t[A] = u[A])∧ ¬∃s ∈ R<sub>2</sub> (t[A] = s[A])}', 0),
(3545, 1116, '{t|∀u ∈ R<sub>1</sub> (u[A]= \"x\" ⇒ ∃s ∈ R<sub>2</sub> (t[A] = s[A] ∧ s[A] = u[A]))}', 0),
(3546, 1116, '{t|¬(t ∈ R<sub>1</sub>)}', 1),
(3547, 1116, '{t|∃u ∈ R<sub>1</sub> (t[A] = u[A])∧ ∃s ∈ R<sub>2</sub> (t[A] = s[A])}', 0),
(3548, 1117, 'A → B, B → CD', 0),
(3549, 1117, 'A → B, B → C, C → D', 0),
(3550, 1117, 'AB → C, C → AD', 1),
(3551, 1117, 'A → BCD', 0),
(3552, 1118, 'σ<sub>A=a</sub> (r) ', 0),
(3553, 1118, 'r', 0),
(3554, 1118, 'σ<sub>A=a</sub> (r)⨝s ', 1),
(3555, 1118, 'None of the above ', 0),
(3556, 1119, 'List of all vertices adjacent to a given vertex ', 0),
(3557, 1119, 'List all vertices which have self loops ', 0),
(3558, 1119, 'List all vertices which belong to cycles of less than three vertices ', 0),
(3559, 1119, 'List all vertices reachable from a given vertex ', 1),
(3560, 1120, 'dependency preserving and lossless join ', 0),
(3561, 1120, 'lossless join but not dependency preserving ', 0),
(3562, 1120, 'dependency preserving but not lossless join ', 1),
(3563, 1120, 'not dependency preserving and not lossless join ', 0),
(3564, 1121, '2 NF', 0),
(3565, 1121, '5 NF', 0),
(3566, 1121, '4 NF', 0),
(3567, 1121, '3 NF', 1),
(3568, 1122, 'R<sub>1</sub> ∪ R<sub>2</sub>', 0),
(3569, 1122, 'R<sub>1</sub> * R<sub>2</sub>', 0),
(3570, 1122, 'R<sub>1</sub> - R<sub>2</sub>', 0),
(3571, 1122, 'R<sub>1</sub> ∩ R<sub>2</sub>', 1),
(3572, 1123, 'An SQL query automatically eliminates duplicates', 0),
(3573, 1123, 'An SQL query will not work if there are no indexes on the relations', 0),
(3574, 1123, 'SQL permits attribute names to be repeated in the same relation ', 0),
(3575, 1123, 'None of the above', 1),
(3576, 1124, 'XOR gates, NOT gates', 0),
(3577, 1124, '2 to 1 multiplexors', 1),
(3578, 1124, 'AND gates, XOR gates', 1),
(3579, 1124, 'Three-input gates that output (A⋅B)   C for the inputs A⋅B and C', 0),
(3580, 1125, 'A = 0, B = 0, C = 1 ', 0),
(3581, 1125, 'A = 0, B = 1, C = 1 ', 1),
(3582, 1125, 'A = 1, B = 0, C = 1 ', 0),
(3583, 1125, 'A = 1, B = 1, C = 1', 0),
(3584, 1126, 'not in 2NF ', 0),
(3585, 1126, 'in 2NF but not 3NF ', 0),
(3586, 1126, 'in 3NF but not in 2NF ', 0),
(3587, 1126, 'in both 2NF and 3NF', 1),
(3588, 1127, 'This schedule is serialized and can occur in a scheme using 2PL protocol', 0),
(3589, 1127, 'This schedule is serializable but cannot occur in a scheme using 2PL protocol', 0),
(3590, 1127, 'This schedule is not serialiable but can occur in a scheme using 2PL protocol', 0),
(3591, 1127, 'This schedule is not seralisable and cannot occur in a scheme using 2PL protocol. ', 1),
(3592, 1128, 'B-trees are for storing data on disk and B  trees are for main memory. ', 0),
(3593, 1128, 'Range queries are faster on B  trees.', 1),
(3594, 1128, 'B-trees are for primary indexes and B* trees are for secondary indexes. ', 0),
(3595, 1128, 'The height of a B* tree is independent of the number of records.', 0),
(3596, 1129, 'CD', 0),
(3597, 1129, 'EC', 1),
(3598, 1129, 'AE', 0),
(3599, 1129, 'AC', 0),
(3600, 1130, 'x = 5 not AND (not (x = 5) ', 0),
(3601, 1130, 'x = 5 AND x > 4 and x < 6, where x is an integer ', 0),
(3602, 1130, 'x ≠ 5 AND not (x = 5) ', 1),
(3603, 1130, 'None of the above ', 0),
(3604, 1131, 'σ<sub>(A=10∨B=20)</sub> (r)', 0),
(3605, 1131, 'σ<sub>(A=10)</sub> (r) ∪ σ<sub>(B=20)</sub> (r) ', 0),
(3606, 1131, 'σ<sub>(A=10)</sub> (r) ∩ σ<sub>(B=20)</sub> (r) ', 1),
(3607, 1131, 'σ<sub>(A=10)</sub> (r) - σ<sub>(B=20) </sub>(r) ', 0),
(3608, 1132, 'm + n and 0', 0),
(3609, 1132, 'mn and 0', 1),
(3610, 1132, 'm + n and |m – n| ', 0),
(3611, 1132, 'mn and m + n', 0),
(3612, 1133, 'r has no duplicates and s is non-empty ', 1),
(3613, 1133, 'r and s have no duplicates ', 0),
(3614, 1133, 's has no duplicates and r is non-empty ', 0),
(3615, 1133, 'r and s have the same number of tuples ', 0),
(3616, 1134, 'XY → Z and Z → Y ', 0),
(3617, 1134, 'YZ → X and Y → Z', 1),
(3618, 1134, 'YZ → X and X → Z ', 0),
(3619, 1134, 'XZ → Y and Y → X', 0),
(3620, 1135, 'Department address of every employee ', 0),
(3621, 1135, 'Employees whose name is the same as their department name ', 0),
(3622, 1135, 'The sum of all employees’ salaries ', 1),
(3623, 1135, 'All employees of a given department ', 0),
(3624, 1136, 'Disk capacities are greater than memory capacities ', 0),
(3625, 1136, 'Disk access is much slower than memory access ', 1),
(3626, 1136, 'Disk data transfer rates are much less than memory data transfer rates ', 0),
(3627, 1136, 'Disks are more reliable than memory ', 0),
(3628, 1137, 'A functionally determines B and B functionally determines C ', 0),
(3629, 1137, 'A functionally determines B and B does not functionally determines C ', 0),
(3630, 1137, 'B does not functionally determines C ', 1),
(3631, 1137, 'A does not functionally determines B and B does not functionally determines C ', 0),
(3632, 1138, 'Dependency-preservation ', 0),
(3633, 1138, 'Lossless-join ', 0),
(3634, 1138, 'BCNF definition ', 1),
(3635, 1138, '3NF definition ', 0),
(3636, 1140, 'Relational algebra is more powerful than relational calculus. ', 0),
(3637, 1140, 'Relational algebra has the same power as relational calculus. ', 0),
(3638, 1140, 'Relational algebra has the same power as safe relational calculus. ', 1),
(3639, 1140, 'None of the above. ', 0),
(3640, 1141, 'Zero ', 1),
(3641, 1141, 'More than zero but less than that of an equivalent 3NF decomposition ', 0),
(3642, 1141, 'Proportional to the size of F+', 0),
(3643, 1141, 'Indetermine', 0),
(3644, 1142, 'The schedule is serializable as T2; T3; T1 ', 0),
(3645, 1142, 'The schedule is serializable as T2; T1; T3', 0),
(3646, 1142, 'The schedule is serializable as T3; T2; T1 ', 0),
(3647, 1142, 'The schedule is not serializable ', 1),
(3648, 1143, 'Names of students who have got an A grade in all courses taught by Korth ', 0),
(3649, 1143, 'Names of students who have got an A grade in all courses ', 0),
(3650, 1143, 'Names of students who have got an A grade in at least one of the courses taught by Korth ', 0),
(3651, 1143, 'in none of the above ', 1),
(3652, 1144, 'in second normal form but not in third normal form ', 0),
(3653, 1144, 'in third normal form but not in BCNF', 0),
(3654, 1144, 'in BCNF ', 0),
(3655, 1144, 'in none of the above ', 1),
(3656, 1145, '<img src=\"./image/choice/1145.1.jpg\"/><br/>', 1),
(3657, 1145, '<img src=\"./image/choice/1145.2.jpg\"/><br/>', 0),
(3658, 1145, '<img src=\"./image/choice/1145.3.jpg\"/><br/>', 0),
(3659, 1145, '<img src=\"./image/choice/1145.4.jpg\"/><br/>', 0),
(3660, 1146, 'A transaction writes a data item after it is read by an uncommitted transaction ', 0),
(3661, 1146, 'A transaction reads a data item after it is read by an uncommitted transaction', 0),
(3662, 1146, 'A transaction reads a data item after it is written by a committed transaction ', 0),
(3663, 1146, '<img src=\"./image/choice/1145.4.jpg\"/><br/>', 1),
(3664, 1148, 'Both (i) and (ii) will fail', 0),
(3665, 1148, '(i) will fail but (ii) will succeed', 0),
(3666, 1148, '(i) will succeed but (ii) will fail', 1),
(3667, 1148, 'Both (i) and (ii) will succeed', 0),
(3668, 1150, '1NF only', 0),
(3669, 1150, '2NF and hence also in 1NF', 1),
(3670, 1150, '3NF and hence also in 2NF and 1NF', 0),
(3671, 1150, 'BCNF and hence also in 3NF, 2NF an 1NF', 0),
(3672, 1151, '0 row and 4 columns', 0),
(3673, 1151, '3 rows and 4 columns', 0),
(3674, 1151, '3 rows and 5 columns', 0),
(3675, 1151, '6 rows and 5 columns', 1),
(3676, 1153, 'Page', 0),
(3677, 1153, 'Table', 0),
(3678, 1153, 'Row', 1),
(3679, 1153, 'Page, table and row level locking allow the same degree of concurrency ', 0),
(3680, 1154, 'the average salary is more than the average salary in the company ', 0),
(3681, 1154, 'the average salary of male employees is more than the average salary of all male employees in the company ', 0),
(3682, 1154, 'the average salary of male employees is more than the average salary of employees in the same department ', 1),
(3683, 1154, 'the average salary of male employees is more than the average salary in the company ', 0),
(3684, 1156, '2 NF ', 0),
(3685, 1156, '3 NF ', 1),
(3686, 1156, 'BCNF ', 0),
(3687, 1156, '4NF ', 0),
(3688, 1157, '8, 8', 0),
(3689, 1157, '120, 8 ', 1),
(3690, 1157, '960, 8 ', 0),
(3691, 1157, '960, 120 ', 0),
(3692, 1158, 'Π<sub>D</sub>(r2) - Π<sub>C</sub>(r1) ', 0),
(3693, 1158, 'Π<sub>C</sub>(r1) - Π<sub>D</sub>(r2) ', 1),
(3694, 1158, 'Π<sub>D</sub>(r1⨝<sub>C≠D</sub>r2) ', 0),
(3695, 1158, 'Π<sub>C</sub>(r1⨝<sub>C=D</sub>r2) ', 0),
(3696, 1159, 'Age', 0),
(3697, 1159, 'Name', 0),
(3698, 1159, 'Occupation', 1),
(3699, 1159, 'Category', 0),
(3700, 1160, 'σ<sub>C1</sub>(σ<sub>C1</sub>(R1)) → σ<sub>C2</sub>(σ<sub>C2</sub>(R1))', 0),
(3701, 1160, 'σ<sub>C1</sub>(σ<sub>A1</sub>(R1)) → σ<sub>A1</sub>(σ<sub>C1</sub>(R1))', 0),
(3702, 1160, 'σ<sub>C1</sub>(R1 ∪ R2) → σ<sub>C1</sub>(R1) ∪ σ<sub>C1</sub>(R2)', 0),
(3703, 1160, 'π<sub>A1</sub>(σ<sub>C1</sub>(R1)) → σ<sub>C1</sub>(σ<sub>A1</sub>(R1))', 1),
(3704, 1161, 'in first normal form but not in second normal form ', 1),
(3705, 1161, 'in second normal form but not in third normal form ', 0),
(3706, 1161, 'in third normal form ', 0),
(3707, 1161, 'None of the above ', 0),
(3708, 1162, 'None of (a), (b), (c) or (d) can cause its violation ', 0),
(3709, 1162, 'All of (a), (b), (c) and (d) can cause its violation', 0),
(3710, 1162, 'Both (a) and (d) can cause its violation ', 0),
(3711, 1162, 'Both (b) and (c) can cause its violation ', 1),
(3712, 1163, 'There is always a decomposition into BCNF that is lossless and dependency preserving', 0),
(3713, 1163, 'An instance of a relational schema R(A,B,C) has distinct values for attribute A. can you conclude that A is a candidate key for R', 0),
(3714, 1163, 'Logical data independence is easier to achieve than physical data independence', 0),
(3715, 1163, 'None', 1),
(3716, 1164, '1111 1111 1110 0100', 1),
(3717, 1164, '1111 1111 0001 1100', 0),
(3718, 1164, '0000 0000 1110 0100', 0),
(3719, 1164, '1000 0000 1110 0100', 0),
(3720, 1166, 'n bits', 0),
(3721, 1166, 'n + 2 bits', 0),
(3722, 1166, 'n - 1 bits', 0),
(3723, 1166, 'n + 1 bits', 1),
(3724, 1167, '(x + y) ⊕ z = x ⊕ (y + z)', 1),
(3725, 1167, '(x ⊕ y) ⊕ z = x ⊕ (y ⊕ z)', 0),
(3726, 1167, 'x ⊕ y = x + y, if xy = 0', 0),
(3727, 1167, 'x ⊕ y = (xy + x\'y\')\'', 0),
(3728, 1168, '1', 0),
(3729, 1168, '2', 0),
(3730, 1168, '3', 1),
(3731, 1168, '4', 0),
(3732, 1169, 'Σ (2, 14)', 0),
(3733, 1169, 'Σ (7, 8, 11)', 1),
(3734, 1169, 'Σ (2, 7, 8, 11, 14)', 0),
(3735, 1169, 'Σ (0, 2, 3, 5, 6, 7, 8, 11, 14, 15)', 0),
(3736, 1172, 'Z=Σ(0,1,3,7) ', 0),
(3737, 1172, 'Z=Σ(2,4,5,6,7) ', 0),
(3738, 1172, 'Z=Σ(1,4,5,6,7)', 1),
(3739, 1172, 'Z=Σ(2,3,5) ', 0),
(3740, 1173, '0x40800000 ', 0),
(3741, 1173, '0x83400000 ', 0),
(3742, 1173, '0xC8500000 ', 0),
(3743, 1173, '0xC0800000 ', 1),
(3744, 1174, '<img src=\"./image/choice/1174.1.jpg\"/><br/>', 0),
(3745, 1174, '<img src=\"./image/choice/1174.2.jpg\"/><br/>', 0),
(3746, 1174, '<img src=\"./image/choice/1174.3.jpg\"/><br/>', 0),
(3747, 1174, '<img src=\"./image/choice/1174.4.jpg\"/><br/>', 1),
(3748, 1176, 'None of (i), (ii), (iii), (iv) can be exactly represented ', 0),
(3749, 1176, 'Only (ii) cannot be exactly represented ', 0),
(3750, 1176, 'Only (iii) and (iv) cannot be exactly represented ', 1),
(3751, 1176, 'Only (i) and (ii) cannot be exactly represented ', 0),
(3752, 1178, '2<sup>-f</sup> to 2<sup>i</sup>', 0),
(3753, 1178, '2<sup>-f</sup> to (2<sup>i</sup> - 2<sup>-f</sup>)', 0),
(3754, 1178, '0 to 2<sup>i</sup>', 0),
(3755, 1178, '0 to (2<sup>i</sup> - 2</sup>-f</sup> )', 1),
(3756, 1179, 'the carry bit C<sub>7</sub> is 1', 0),
(3757, 1179, 'all the carry bits (C<sub>7</sub>,…,C<sub>0</sub>) are 1', 0),
(3758, 1179, '<img src=\"./image/choice/1179.3.jpg\"/>', 1),
(3759, 1179, '<img src=\"./image/choice/1179.4.jpg\"/>', 0),
(3760, 1181, '<img src=\"./image/choice/1181.1.jpg\"/><br/>', 0),
(3761, 1181, '<img src=\"./image/choice/1181.2.jpg\"/><br/>', 1),
(3762, 1181, '<img src=\"./image/choice/1181.3.jpg\"/><br/>', 0),
(3763, 1181, '<img src=\"./image/choice/1181.4.jpg\"/><br/>', 0),
(3764, 1183, '1.45 × 10<sup>1</sup>', 0),
(3765, 1183, '1.45 × 10<sup>-1</sup>', 0),
(3766, 1183, '2.27 × 10<sup>-1</sup>', 1),
(3767, 1183, '2.27 × 10<sup>1</sup>', 0),
(3768, 1185, 'wx + w(x + y) + x(x + y) = x + wy', 0),
(3769, 1185, '<img src=\"./image/choice/1185.2.jpg\"/>', 0),
(3770, 1185, '<img src=\"./image/choice/1185.3.jpg\"/>', 1),
(3771, 1185, '(w + y)(wxy + wyz) = wxy + wyz', 0),
(3772, 1186, '<img src=\"./image/choice/1186.1.jpg\"/>', 1),
(3773, 1186, '<img src=\"./image/choice/1186.2.jpg\"/>', 0),
(3774, 1186, '<img src=\"./image/choice/1186.3.jpg\"/>', 0),
(3775, 1186, '<img src=\"./image/choice/1186.4.jpg\"/>', 0),
(3776, 1187, 'p=3 and q=1', 1),
(3777, 1187, 'p=3 and q=2', 0),
(3778, 1187, 'p=4 and q=1', 0),
(3779, 1187, 'p=4 and q=2', 0),
(3780, 1188, '<img src=\"./image/choice/1188.1.jpg\"/>', 0),
(3781, 1188, '<img src=\"./image/choice/1188.2.jpg\"/>', 1),
(3782, 1188, '<img src=\"./image/choice/1188.3.jpg\"/>', 0),
(3783, 1188, '<img src=\"./image/choice/1188.4.jpg\"/>', 0),
(3784, 1189, '<img src=\"./image/choice/1189.1.jpg\"/>', 1),
(3785, 1189, '<img src=\"./image/choice/1189.2.jpg\"/>', 0),
(3786, 1189, '<img src=\"./image/choice/1189.3.jpg\"/>', 0),
(3787, 1189, '<img src=\"./image/choice/1189.4.jpg\"/>', 0),
(3788, 1192, '<img src=\"./image/choice/1192.1.jpg\"/>', 0),
(3789, 1192, '<img src=\"./image/choice/1192.2.jpg\"/>', 0),
(3790, 1192, '<img src=\"./image/choice/1192.3.jpg\"/>', 0),
(3791, 1192, '<img src=\"./image/choice/1192.4.jpg\"/>', 1),
(3792, 1193, 'Θ(1) ', 0),
(3793, 1193, 'Θ(log(n))', 1),
(3794, 1193, 'Θ(√n)', 0),
(3795, 1193, 'Θ(n)', 0),
(3796, 1195, 'x<sub>1</sub>x<sub>2</sub>x<sub>3</sub>x<sub>4</sub> = 0', 0),
(3797, 1195, 'x<sub>1</sub>x<sub>3</sub>+x<sub>2</sub> = 0', 0),
(3798, 1195, '<img src=\"./image/choice/1195.3.jpg\"/>', 1),
(3799, 1195, 'x<sub>1</sub> + x<sub>2</sub> + x<sub>3</sub> + x<sub>4</sub> = 0', 0),
(3800, 1197, '0, 1, 3, 7, 15, 14, 12, 8, 0', 0),
(3801, 1197, '0, 1, 3, 5, 7, 9, 11, 13, 15, 0 ', 0),
(3802, 1197, '0, 2, 4, 6, 8, 10, 12, 14, 0', 0),
(3803, 1197, '0, 8, 12, 14, 15, 7, 3, 1, 0', 1),
(3804, 1198, 'Both commutative and associative', 1),
(3805, 1198, 'Commutative but not associative ', 0),
(3806, 1198, 'Not commutative but associative', 0),
(3807, 1198, 'Neither commutative nor associative ', 0),
(3808, 1199, '0110110...', 1),
(3809, 1199, '0100100...', 0),
(3810, 1199, '011101110...', 0),
(3811, 1199, '011001100... ', 0),
(3812, 1204, 'PQ + QR + QS', 1),
(3813, 1204, 'P + Q + R + S', 0),
(3814, 1204, 'P\' + Q\' + R\' + S\'', 0),
(3815, 1204, 'P\'R + P\'R\'S + P', 0),
(3816, 1206, '<img src=\"./image/choice/1206.1.jpg\"/>', 1),
(3817, 1206, '<img src=\"./image/choice/1206.2.jpg\"/>', 0),
(3818, 1206, '<img src=\"./image/choice/1206.3.jpg\"/>', 0),
(3819, 1206, '<img src=\"./image/choice/1206.4.jpg\"/>', 0),
(3820, 1207, '2<sup>n</sup>', 0),
(3821, 1207, '2<sup>(n-1)</sup>', 0),
(3822, 1207, '2<sup>(2<sup>n</sup> )</sup>', 0),
(3823, 1207, '2<sup>(2<sup>n-1</sup> )</sup>', 1),
(3824, 1208, 'k-bit binary up counter. ', 0),
(3825, 1208, 'k-bit binary down counter. ', 0),
(3826, 1208, 'k-bit ring counter. ', 1),
(3827, 1208, 'k-bit Johnson counter. ', 0),
(3828, 1210, '<img src=\"./image/choice/1210.1.jpg\"/>', 0),
(3829, 1210, '<img src=\"./image/choice/1210.2.jpg\"/>', 1),
(3830, 1210, '<img src=\"./image/choice/1210.3.jpg\"/>', 0),
(3831, 1210, '<img src=\"./image/choice/1210.4.jpg\"/>', 0),
(3832, 1211, 'Full adder ', 0),
(3833, 1211, 'Priority encoder ', 0),
(3834, 1211, 'Multiplexor', 1),
(3835, 1211, 'Flip-flop ', 0),
(3836, 1212, '001, 010, 011', 0),
(3837, 1212, '111, 110, 101', 0),
(3838, 1212, '100, 110, 111', 1),
(3839, 1212, '100, 011, 001', 0),
(3840, 1213, 'P+Q', 0),
(3841, 1213, '(P+Q)\'', 0),
(3842, 1213, 'P⨁Q', 0),
(3843, 1213, '(P⨁Q)\'', 1),
(3844, 1215, 'Priority encoder ', 1),
(3845, 1215, 'Decoder', 0),
(3846, 1215, 'Multiplexer ', 0),
(3847, 1215, 'Demultiplexer', 0),
(3848, 1216, 'xy+x\'y\' ', 0),
(3849, 1216, 'x⊕y\'', 0),
(3850, 1216, 'x\'⊕y ', 0),
(3851, 1216, 'x\'⊕y\' ', 1),
(3852, 1217, 'X', 1),
(3853, 1217, 'X + Y ', 0),
(3854, 1217, 'X ⊕ Y ', 0),
(3855, 1217, 'Y', 0),
(3856, 1218, 'fraction bits of 000…000 and exponent value of 0 ', 0),
(3857, 1218, 'fraction bits of 000…000 and exponent value of −1 ', 1),
(3858, 1218, 'fraction bits of 100…000 and exponent value of 0 ', 0),
(3859, 1218, 'no exact representation', 0),
(3860, 1219, '64 bits ', 0),
(3861, 1219, '128 bits ', 0),
(3862, 1219, '1 Kbits ', 0),
(3863, 1219, '2 Kbits ', 1),
(3864, 1220, '<img src=\"./image/choice/1220.1.jpg\"/>', 0),
(3865, 1220, '<img src=\"./image/choice/1220.2.jpg\"/>', 0),
(3866, 1220, '<img src=\"./image/choice/1220.3.jpg\"/>', 0),
(3867, 1220, '<img src=\"./image/choice/1220.4.jpg\"/>', 1),
(3868, 1221, '<img src=\"./image/choice/1221.1.jpg\"/>', 0),
(3869, 1221, 'P+QR', 0),
(3870, 1221, 'P\' + Q\'', 0),
(3871, 1221, '<img src=\"./image/choice/1221.4.jpg\"/>', 1),
(3872, 1223, '<img src=\"./image/choice/1222.1.jpg\"/><br/>', 0),
(3873, 1223, '<img src=\"./image/choice/1222.2.jpg\"/><br/>', 0),
(3874, 1223, '<img src=\"./image/choice/1222.3.jpg\"/><br/>', 0),
(3875, 1223, '<img src=\"./image/choice/1222.4.jpg\"/><br/>', 1),
(3876, 1225, '000 ', 0),
(3877, 1225, '001 ', 0),
(3878, 1225, '010', 0),
(3879, 1225, '011', 1),
(3880, 1226, 'm<sub>2</sub>+m<sub>4</sub>+m<sub>6</sub>+m<sub>7</sub>', 1),
(3881, 1226, 'm<sub>0</sub>+m<sub>1</sub>+m<sub>3</sub>+m<sub>5</sub>', 0),
(3882, 1226, 'm<sub>0</sub>+m</sub>1</sub>+m<sub>6</sub>+m<sub>7</sub>', 0),
(3883, 1226, 'm<sub>2</sub>+m<sub>3</sub>+m<sub>4</sub>+m<sub>5</sub>', 0),
(3884, 1227, '100 nanoseconds', 0),
(3885, 1227, '100*2<sup>10</sup> nanoseconds', 1),
(3886, 1227, '100*2<sup>20</sup> nanoseconds', 0),
(3887, 1227, '3200*2<sup>20</sup> nanoseconds', 0),
(3888, 1228, '(C3D8)<sub>16</sub>', 0),
(3889, 1228, '(187B)<sub>16</sub>', 1),
(3890, 1228, '(F878)<sub>16</sub>', 0),
(3891, 1228, '(987B)<sub>16</sub>', 0),
(3892, 1229, '<img src=\"./image/choice/1229.1.jpg\"/>', 0),
(3893, 1229, 'P⊕Q⊕R ', 1),
(3894, 1229, 'P Q R', 0),
(3895, 1229, '<img src=\"./image/choice/1229.2.jpg\"/>', 0),
(3896, 1230, '<img src=\"./image/choice/1230.1.jpg\"/>', 1),
(3897, 1230, '<img src=\"./image/choice/1230.2.jpg\"/>', 0),
(3898, 1230, '<img src=\"./image/choice/1230.3.jpg\"/>', 0),
(3899, 1230, '<img src=\"./image/choice/1230.4.jpg\"/>', 0),
(3900, 1231, '11, 10, 01, 00 ', 1),
(3901, 1231, '10, 11, 01, 00', 0),
(3902, 1231, '10, 00, 01, 11', 0),
(3903, 1231, '11, 10, 00, 01 ', 0),
(3904, 1232, '(1217)<sub>16</sub> ', 0),
(3905, 1232, '(028F)<sub>16</sub> ', 1),
(3906, 1232, '(2297)<sub>10</sub> ', 0),
(3907, 1232, '(0B17)<sub>16</sub>', 0),
(3908, 1235, 'the normalized value 2<sup>-127</sup> ', 0),
(3909, 1235, 'the normalized value 2<sup>-126</sup> ', 0),
(3910, 1235, 'the normalized value  0 ', 0),
(3911, 1235, 'the special value  0 ', 1),
(3912, 1236, '<img src=\"./image/choice/1236.1.jpg\"/>', 1),
(3913, 1236, '<img src=\"./image/choice/1236.2.jpg\"/>', 0),
(3914, 1236, '<img src=\"./image/choice/1236.3.jpg\"/>', 0),
(3915, 1236, '<img src=\"./image/choice/1236.4.jpg\"/>', 0),
(3916, 1237, 'decimal 10 ', 0),
(3917, 1237, 'decimal 11 ', 0),
(3918, 1237, 'decimal 10 and 11', 0),
(3919, 1237, 'any value >2 ', 1),
(3920, 1238, '<img src=\"./image/choice/1238.1.jpg\"/>', 1),
(3921, 1238, '<img src=\"./image/choice/1238.2.jpg\"/>', 0),
(3922, 1238, '<img src=\"./image/choice/1238.3.jpg\"/>', 0),
(3923, 1238, '<img src=\"./image/choice/1238.4.jpg\"/>', 0),
(3924, 1239, 'EX-NOR', 1),
(3925, 1239, 'implication, negation', 0),
(3926, 1239, 'OR, negation', 0),
(3927, 1239, 'NAND', 0),
(3928, 1240, '-10', 0),
(3929, 1240, '-13', 0),
(3930, 1240, '-26', 1),
(3931, 1240, 'None of these', 0),
(3932, 1241, 'independent of one variable', 1),
(3933, 1241, 'independent of two variables', 0),
(3934, 1241, 'independent of three variable', 0),
(3935, 1241, 'dependent on all the variables', 0),
(3936, 1242, 'xz x’z’', 0),
(3937, 1242, 'xz’ x’z', 1),
(3938, 1242, 'x’y’ yz', 0),
(3939, 1242, 'xy y’z’', 0),
(3940, 1243, '1, 1, 0', 0),
(3941, 1243, '1, 0, 0', 1),
(3942, 1243, '0, 1, 0', 0),
(3943, 1243, '1, 0, 1', 0),
(3944, 1244, '(x⊕y)’ and x’⊕y’', 0),
(3945, 1244, '(x⊕y)’ and x⊕y', 1),
(3946, 1244, 'x⊕y and (x⊕y)’', 0),
(3947, 1244, 'x⊕y and x⊕y', 0),
(3948, 1245, '6', 0),
(3949, 1245, '8', 1),
(3950, 1245, '10', 0),
(3951, 1245, '12', 0),
(3952, 1246, 'n<sup>2</sup>', 0),
(3953, 1246, '2<sup>n</sup>', 0),
(3954, 1246, '2<sup>2<sup>n</sup></sup>', 1),
(3955, 1246, '2<sup>n<sup>2</sup></sup>', 0),
(3956, 1248, 'independent of one variable.', 0),
(3957, 1248, 'independent of two variables. ', 1),
(3958, 1248, 'independent of three variables.', 0),
(3959, 1248, 'dependent on all the variables. ', 0),
(3960, 1249, 'x\'y\'z\' + w\'xy\' + wy\'z + xz', 1),
(3961, 1249, 'w\'y\'z\' + wx\'y\' + xz', 1),
(3962, 1249, 'w\'y\'z\' + wx\'y\' + xyz + xy\'z', 1),
(3963, 1249, 'x\'y\'z\' + wx\'y\' + w\'y', 0),
(3964, 1250, 'Only P and Q are valid.', 0),
(3965, 1250, 'Only Q and R are valid. ', 0),
(3966, 1250, 'Only P and R are valid.', 0),
(3967, 1250, 'All P, Q, R are valid.', 1),
(3968, 1251, '2<sup>n</sup> line to 1 line', 0),
(3969, 1251, '2<sup>n+1</sup> line to 1 line', 0),
(3970, 1251, '2<sup>n-1</sup> line to 1 line', 1),
(3971, 1251, '2<sup>n-1</sup> line to 1 line', 0),
(3972, 1252, '6, 3', 0),
(3973, 1252, '10, 4 ', 1),
(3974, 1252, '6, 4', 0),
(3975, 1252, '10, 5 ', 0),
(3976, 1253, '0, 3, 4', 0),
(3977, 1253, '0, 3, 4, 5 ', 0),
(3978, 1253, '0, 1, 2, 3, 4 ', 1),
(3979, 1253, '0, 1, 2, 3, 4, 5 ', 0),
(3980, 1254, 'For any formula, there is a truth assignment for which at least half the clauses evaluate to true. ', 1),
(3981, 1254, 'For any formula, there is a truth assignment for which all the clauses evaluate to true. ', 0),
(3982, 1254, 'There is a formula such that for each truth assignment, at most one-fourth of the clauses evaluate to true. ', 0),
(3983, 1254, 'None of the above. ', 0),
(3984, 1255, '11, 00', 0),
(3985, 1255, '01, 10', 0),
(3986, 1255, '10, 01', 0),
(3987, 1255, '00, 11', 1),
(3988, 1256, 'X1 = b, X2 = 0, X3 = a', 1),
(3989, 1256, 'X1 = b, X2 = 1, X3 = b', 0),
(3990, 1256, 'X1 = a, X2 = b, X3 = 1', 0),
(3991, 1256, 'X1 = a, X2 = 0, X3 = b ', 0),
(3992, 1257, '1', 0),
(3993, 1257, 'a’ + b’ + c’ + d’', 0),
(3994, 1257, 'a’ + b + c’ + d’', 1),
(3995, 1257, 'a’ + b’ + c + d’', 0),
(3996, 1258, '0110', 1),
(3997, 1258, '1011', 0),
(3998, 1258, '1101', 0),
(3999, 1258, '1111', 0),
(4000, 1259, '(135103.412)<sub>O</sub>', 1),
(4001, 1259, '(564411.412)<sub>O</sub>', 0),
(4002, 1259, '(564411.205)<sub>O</sub>', 0),
(4003, 1259, '(135103.205)<sub>O</sub>', 0),
(4004, 1260, '0000', 1),
(4005, 1260, '0111', 0),
(4006, 1260, '1111', 0),
(4007, 1260, 'None of these', 0),
(4008, 1261, 'c’d’+ ad’ + abc’ + (ac)’d', 1),
(4009, 1261, '(ac)’ + c’d’ + ad’ + abc’d', 0),
(4010, 1261, '(ac)’ + ad’ + abc’ + c’d', 0),
(4011, 1261, 'b’c’d’ + acd’ + (ac)’ + abc’ ', 0),
(4012, 1262, '<img src=\"./image/choice/1262.1.jpg\"/><br/>', 0),
(4013, 1262, '<img src=\"./image/choice/1262.2.jpg\"/><br/>', 0),
(4014, 1262, '<img src=\"./image/choice/1262.3.jpg\"/><br/>', 1),
(4015, 1262, '<img src=\"./image/choice/1262.4.jpg\"/><br/>', 0),
(4016, 1263, '<img src=\"./image/choice/1263.1.jpg\"/><br/>', 0),
(4017, 1263, '<img src=\"./image/choice/1263.2.jpg\"/><br/>', 1),
(4018, 1263, '<img src=\"./image/choice/1263.3.jpg\"/><br/>', 0),
(4019, 1263, '<img src=\"./image/choice/1263.4.jpg\"/><br/>', 0),
(4020, 1264, 'g<sub>0</sub>(h<sub>3</sub>h<sub>2</sub>h<sub>1</sub>h<sub>0</sub>) = Σ(1,2,3,6,10,13,14,15)', 0),
(4021, 1264, 'g<sub>1</sub>(h<sub>3</sub>h<sub>2</sub>h<sub>1</sub>h<sub>0</sub>) = Σ(4,9,10,11,12,13,14,15)', 0),
(4022, 1264, 'g<sub>2</sub>(h<sub>3</sub>h<sub>2</sub>h<sub>1</sub>h<sub>0</sub>) = Σ(2,4,5,6,7,12,13,15)', 1),
(4023, 1264, 'g<sub>3</sub>(h<sub>3</sub>h<sub>2</sub>h<sub>1</sub>h<sub>0</sub>) = Σ(0,1,6,7,10,11,12,13) ', 0),
(4024, 1265, '<img src=\"./image/choice/1265.1.jpg\"/>', 0),
(4025, 1265, '<img src=\"./image/choice/1265.2.jpg\"/>', 0),
(4026, 1265, '<img src=\"./image/choice/1265.3.jpg\"/>', 0),
(4027, 1265, '<img src=\"./image/choice/1265.4.jpg\"/>', 1),
(4028, 1266, '<img src=\"./image/choice/1266.1.jpg\"/>', 1),
(4029, 1266, '<img src=\"./image/choice/1266.2.jpg\"/>', 0),
(4030, 1266, '<img src=\"./image/choice/1266.3.jpg\"/>', 0),
(4031, 1266, '<img src=\"./image/choice/1266.4.jpg\"/>', 0),
(4032, 1267, '<img src=\"./image/choice/1267.1.jpg\"/>', 1),
(4033, 1267, '<img src=\"./image/choice/1267.2.jpg\"/>', 0),
(4034, 1267, '<img src=\"./image/choice/1267.3.jpg\"/>', 0),
(4035, 1267, '<img src=\"./image/choice/1267.4.jpg\"/>', 0),
(4036, 1268, '000', 0),
(4037, 1268, '001', 0),
(4038, 1268, '010', 1),
(4039, 1268, '101', 0),
(4040, 1269, '0001 and an overflow', 0),
(4041, 1269, '1001 and no overflow', 0),
(4042, 1269, '0001 and no overflow', 1),
(4043, 1269, '1001 and an overflow', 0),
(4044, 1270, 'QRS', 0),
(4045, 1270, 'PQS', 0),
(4046, 1270, 'PQ\'S\'', 0),
(4047, 1270, 'Q\'S\'', 1),
(4048, 1271, 'XOR, AND', 0),
(4049, 1271, 'XOR, XOR', 0),
(4050, 1271, 'OR, OR', 0),
(4051, 1271, 'OR, AND', 1),
(4052, 1272, '2Y and Y', 0),
(4053, 1272, '-2Y and 2Y', 0),
(4054, 1272, '-2Y and 0', 1),
(4055, 1272, '0 and Y', 0),
(4056, 1273, 'f is independent of X ', 1),
(4057, 1273, 'f is independent of Y ', 0),
(4058, 1273, 'f is independent of Z ', 0),
(4059, 1273, 'None of X, Y, Z is redundant ', 0),
(4060, 1274, '- 2<sup>n-1</sup> to (2<sup>n-1</sup> - 1)', 1),
(4061, 1274, '-( 2<sup>n-1</sup>-1) to (2<sup>n-1</sup> - 1)', 0),
(4062, 1274, '- 2<sup>n-1</sup> to 2<sup>n-1</sup> ', 0),
(4063, 1274, '-( 2<sup>n-1</sup>-1) to (2<sup>n-1</sup> - 1)', 0),
(4064, 1275, '0D 24', 0),
(4065, 1275, '0D 4D', 0),
(4066, 1275, '4D 0D ', 0),
(4067, 1275, '4D 3D ', 1),
(4068, 1276, '0A 20 ', 0),
(4069, 1276, '11 34 ', 0),
(4070, 1276, '4D D0 ', 0),
(4071, 1276, '4A E8 ', 1),
(4072, 1277, '<img src=\"./image/choice/1276.1.jpg\"/><br/>', 0),
(4073, 1277, '<img src=\"./image/choice/1276.2.jpg\"/><br/>', 0),
(4074, 1277, '<img src=\"./image/choice/1276.3.jpg\"/><br/>', 0),
(4075, 1277, '<img src=\"./image/choice/1276.4.jpg\"/><br/>', 1),
(4076, 1278, 'A<sub>0</sub> A<sub>1</sub> A<sub>1</sub>\' A<sub>3</sub> A<sub>4</sub> ', 1),
(4077, 1278, 'A<sub>0</sub> A<sub>1</sub> A<sub>2</sub>\' A<sub>3</sub> A<sub>4</sub> ', 0),
(4078, 1278, 'A<sub>1</sub> A<sub>2</sub> A<sub>2</sub>\' A<sub>3</sub> A<sub>4</sub>', 0),
(4079, 1278, 'A<sub>1</sub> A<sub>2</sub>\' A<sub>3</sub> A<sub>4</sub> A<sub>5</sub>\' ', 0),
(4080, 1279, '1AF ', 1),
(4081, 1279, 'D78', 0),
(4082, 1279, 'D71', 0),
(4083, 1279, '32F ', 0),
(4084, 1280, 'BC\'D\' + A\'C\'D + AB\'D', 1),
(4085, 1280, 'ABC\' + ACD + B\'C\'D ', 0),
(4086, 1280, 'ACD\' + A\'BC\' + AC\'D\' ', 0),
(4087, 1280, 'A\'BD + ACD\' + BCD\' ', 0),
(4088, 1281, '<img src=\"./image/choice/1281.1.jpg\"/>', 0),
(4089, 1281, '<img src=\"./image/choice/1281.2.jpg\"/>', 0);
INSERT INTO `choice` (`id`, `q_id`, `choice`, `correct`) VALUES
(4090, 1281, '<img src=\"./image/choice/1281.3.jpg\"/>', 1),
(4091, 1281, '<img src=\"./image/choice/1281.4.jpg\"/>', 0),
(4092, 1283, '3<sup>N</sup>', 0),
(4093, 1283, '3<sup>N</sup> - 1', 1),
(4094, 1283, '2<sup>N</sup> - 1', 0),
(4095, 1283, '2', 0),
(4096, 1284, '(1053.6)<sub>8</sub>', 1),
(4097, 1284, '(1053.2)<sub>8</sub>', 0),
(4098, 1284, '(1024.2)<sub>8</sub>', 0),
(4099, 1284, 'None of these', 0),
(4100, 1285, '1, 0, B', 0),
(4101, 1285, '1, 0, A', 0),
(4102, 1285, '0, 1, B', 0),
(4103, 1285, '0, 1, A', 1),
(4104, 1287, 'x\' + y\' ', 0),
(4105, 1287, 'x + y ', 0),
(4106, 1287, 'x + y\' ', 0),
(4107, 1287, 'x\' + y ', 1),
(4108, 1288, 'Q = 0, Q\' = 1 ', 0),
(4109, 1288, 'Q = 1, Q\' = 0 ', 0),
(4110, 1288, 'Q = 1, Q\' = 1 ', 1),
(4111, 1288, 'Indeterminate states ', 0),
(4112, 1289, '8, 16 ', 0),
(4113, 1289, '10, 12', 0),
(4114, 1289, '9, 13 ', 0),
(4115, 1289, '8, 11 ', 1),
(4116, 1290, '9.51 and 10.0 respectively ', 1),
(4117, 1290, '10.0 and 9.51 respectively ', 0),
(4118, 1290, '9.51 and 9.51 respectively ', 0),
(4119, 1290, '10.0 and 10.0 respectively ', 0),
(4120, 1292, 'R to X, 1 to Y, T to Z ', 0),
(4121, 1292, 'T to X, R to Y, T to Z ', 0),
(4122, 1292, 'T to X, R to Y, T to Z ', 0),
(4123, 1292, 'R to X, 0 to Y, T to Z ', 0),
(4124, 1293, 'Q<sub>2</sub><sup>c</sup> ', 0),
(4125, 1293, 'Q<sub>2</sub> + Q<sub>1</sub> ', 0),
(4126, 1293, '(Q<sub>1</sub> + Q<sub>2</sub>)<sup>c</sup> ', 0),
(4127, 1293, 'Q<sub>1</sub> ⊕ Q<sub>2</sub> ', 1),
(4128, 1294, '4 time units ', 0),
(4129, 1294, '6 time units ', 0),
(4130, 1294, '10 time units ', 0),
(4131, 1294, '12 time units ', 1),
(4132, 1295, '1100 0100 ', 1),
(4133, 1295, '1001 1100 ', 0),
(4134, 1295, '1010 0101 ', 0),
(4135, 1295, '1101 0101', 0),
(4136, 1297, '32 K × 16 bits', 0),
(4137, 1297, '64 K × 16 bits', 1),
(4138, 1297, '16 K × 32 bits', 0),
(4139, 1297, '64 K × 32 bits', 0),
(4140, 1298, '1 only', 0),
(4141, 1298, '2 only', 1),
(4142, 1298, '3 only', 0),
(4143, 1298, '1 and 3 only', 0),
(4144, 1299, '(A72E)<sub>16</sub> and (22130232)<sub>4</sub>', 1),
(4145, 1299, '(A72E)<sub>16</sub> and (22131122)<sub>4</sub>', 0),
(4146, 1299, '(A73E)<sub>16</sub> and (22130232)<sub>4</sub>', 0),
(4147, 1299, '(A62E)<sub>16</sub> and (22120232)<sub>4</sub> ', 0),
(4148, 1300, 'AC’ + AB + A’C', 0),
(4149, 1300, 'AB’ + AC’ + A’C', 1),
(4150, 1300, 'A’B + AC’+ AB’', 0),
(4151, 1300, 'A’B + AC + AB’', 0),
(4152, 1301, 'I and III', 1),
(4153, 1301, 'I, II and III', 0),
(4154, 1301, 'II and IV', 0),
(4155, 1301, 'I, II, III and IV ', 0),
(4156, 1302, '11100111 ', 1),
(4157, 1302, '11100100 ', 0),
(4158, 1302, '11010111 ', 0),
(4159, 1302, '11011011 ', 0),
(4160, 1303, 'Θ (1) ', 0),
(4161, 1303, 'Θ (log n) ', 0),
(4162, 1303, 'Θ (n) ', 1),
(4163, 1303, 'Θ (n<sup>2</sup>)', 0),
(4164, 1304, '2<sup>-40</sup> ', 0),
(4165, 1304, '2<sup>-9</sup> ', 0),
(4166, 1304, '2<sup>22</sup>', 1),
(4167, 1304, '2<sup>31</sup>', 0),
(4168, 1305, 'The dynamic range is large.', 0),
(4169, 1305, 'The precision is high.', 0),
(4170, 1305, 'The smallest number is represented by all zeros.', 1),
(4171, 1305, 'Overflow is avoided.', 0),
(4172, 1306, '<img src=\"./image/choice/1306.1.jpg\"/>', 0),
(4173, 1306, 'A⊕B⊕C', 1),
(4174, 1306, 'A⊕B', 0),
(4175, 1306, '<img src=\"./image/choice/1306.4.jpg\"/>', 0),
(4176, 1307, '1111 1111 0000 0000', 0),
(4177, 1307, '1111 0000 1111 000', 1),
(4178, 1307, '1111 0001 0011 010', 0),
(4179, 1307, '1010 1010 1010 1010', 0),
(4180, 1309, 'exclusive OR ', 0),
(4181, 1309, 'exclusive NOR ', 1),
(4182, 1309, 'NAND', 0),
(4183, 1309, 'NOR', 0),
(4184, 1310, 'Y=(ABC)\'+(DE)\'', 0),
(4185, 1310, 'Y=ABC+DE', 0),
(4186, 1310, 'Y=ABC.DE', 0),
(4187, 1310, 'Y=(ABC)\'.(DE)\'', 1),
(4188, 1311, 'faster operation', 0),
(4189, 1311, 'ease of avoiding problems due to hazards ', 1),
(4190, 1311, 'lower hardware requirement ', 0),
(4191, 1311, 'better noise immunity ', 0),
(4192, 1313, '1,3,4,6,7,5,2 ', 0),
(4193, 1313, '1,2,5,3,7,6,4 ', 1),
(4194, 1313, '1,2,7,3,5,6,4 ', 0),
(4195, 1313, '1,6,5,7,2,3,4 ', 0),
(4196, 1314, 'f = x1\' + x2 ', 0),
(4197, 1314, 'f = x1\'x2 + x1x2\' ', 0),
(4198, 1314, ' f = x1x2 + x1\'x2\'', 1),
(4199, 1314, 'f = x1 + x2\'', 0),
(4200, 1315, 'ABE ', 0),
(4201, 1315, 'DBC ', 0),
(4202, 1315, 'DE5 ', 1),
(4203, 1315, '9E7 ', 0),
(4204, 1316, 'AND', 0),
(4205, 1316, 'OR', 0),
(4206, 1316, 'EX-OR', 0),
(4207, 1316, 'NAND', 1),
(4208, 1317, 'Ex-OR gates ', 0),
(4209, 1317, 'Multiplexers ', 1),
(4210, 1317, 'Half adders ', 1),
(4211, 1317, 'OR gates ', 0),
(4212, 1318, 'xy+y\'z ', 1),
(4213, 1318, 'wx\'y\'+xy+xz ', 0),
(4214, 1318, 'w\'x+y\'z+xy ', 0),
(4215, 1318, 'xz+y ', 0),
(4216, 1319, '<img src=\"./image/choice/1319.1.jpg\"/><br/>', 1),
(4217, 1319, '<img src=\"./image/choice/1319.2.jpg\"/><br/>', 0),
(4218, 1319, '<img src=\"./image/choice/1319.3.jpg\"/><br/>', 0),
(4219, 1319, '<img src=\"./image/choice/1319.4.jpg\"/><br/>', 0),
(4220, 1320, 'Shift Register', 0),
(4221, 1320, 'Mod-3 Counter', 1),
(4222, 1320, 'Mod-6 Counter ', 1),
(4223, 1320, 'Mod-2 Counter ', 0),
(4224, 1321, '101010 …..1010 ', 1),
(4225, 1321, '100000 …..0001', 0),
(4226, 1321, '111111 …..1111 ', 0),
(4227, 1321, '011111 …..1110 ', 0),
(4228, 1322, '256 × 16 ', 0),
(4229, 1322, '64 K × 8 ', 0),
(4230, 1322, '4 K × 16 ', 0),
(4231, 1322, '64 K × 16 ', 1),
(4232, 1323, '80%', 0),
(4233, 1323, '20%', 0),
(4234, 1323, '60%', 1),
(4235, 1323, '40%', 0),
(4236, 1324, '4:1 multiplexor ', 0),
(4237, 1324, '2:1 multiplexor', 0),
(4238, 1324, '16:1 multiplexor', 1),
(4239, 1324, '8:1 multiplexor ', 0),
(4240, 1325, 'Sign magnitude', 1),
(4241, 1325, '1’s complement', 1),
(4242, 1325, '2’s complement', 0),
(4243, 1325, 'None of the above', 0),
(4244, 1326, '8 half-adders, 8 full-adders ', 0),
(4245, 1326, '1 half-adder, 15 full-adders', 0),
(4246, 1326, '16 half-adders, 0 full-adders ', 0),
(4247, 1326, '4 half-adders, 12 full-adders', 0),
(4248, 1327, 'On<sup>2</sup> ', 0),
(4249, 1327, 'O(n) ', 1),
(4250, 1327, 'O(log n) ', 0),
(4251, 1327, 'O(1)', 0),
(4252, 1328, '0 – 100 + 1000 ', 0),
(4253, 1328, '0 – 100 + 100 -1 ', 1),
(4254, 1328, '0 – 1 + 100 – 10 + 1 ', 0),
(4255, 1328, '00 – 10 + 100 - 1', 0),
(4256, 1329, '01010101 ', 0),
(4257, 1329, '11010101 ', 0),
(4258, 1329, '00101011 ', 1),
(4259, 1329, '10101011 ', 0),
(4260, 1330, 'x\'+z', 0),
(4261, 1330, 'xyz', 0),
(4262, 1330, 'xy\'+z', 1),
(4263, 1330, 'None of the above', 0),
(4264, 1331, 'is flagged whenever there is carry from sign bit addition ', 0),
(4265, 1331, 'cannot occur when a positive value is added to a negative value ', 1),
(4266, 1331, 'is flagged when the carries from sign bit and previous bit match ', 0),
(4267, 1331, 'None of the above ', 0),
(4268, 1332, 'floating point multiplication ', 0),
(4269, 1332, 'signed 16 bit integer addition ', 0),
(4270, 1332, 'arithmetic left shift ', 0),
(4271, 1332, 'converting a signed integer from one size to another', 1),
(4272, 1333, '1111', 0),
(4273, 1333, '11111', 0),
(4274, 1333, '111111', 0),
(4275, 1333, '10001', 1),
(4276, 1334, 'is equivalent to the binary value 0.1 ', 0),
(4277, 1334, 'is equivalent to the binary value 0.01 ', 1),
(4278, 1334, 'is equivalent to the binary value 0.00111… ', 0),
(4279, 1334, 'cannot be represented precisely in binary ', 0),
(4280, 1335, '⌈log<sub>2</sub> N⌉ ', 1),
(4281, 1335, '⌈log<sub>2</sub> N⌉ -1', 0),
(4282, 1335, '⌈log<sub>2</sub> N⌉ + 1', 0),
(4283, 1335, 'n', 0),
(4284, 1337, 'A = 1, B = 0, C = 0, D = 1 ', 1),
(4285, 1337, 'A = 1, B = 1, C = 0, D = 0', 0),
(4286, 1337, 'A = 1, B = 0, C = 1, D = 1 ', 0),
(4287, 1337, 'A = 1, B = 0, C = 0, D = 0', 0),
(4288, 1338, '<img src=\"./image/choice/1338.1.jpg\"/>', 0),
(4289, 1338, '<img src=\"./image/choice/1338.2.jpg\"/>', 0),
(4290, 1338, '<img src=\"./image/choice/1338.3.jpg\"/>', 1),
(4291, 1338, '<img src=\"./image/choice/1338.4.jpg\"/>', 0),
(4292, 1339, 'Binary of Hex conversion ', 0),
(4293, 1339, 'Binary to BCD conversion ', 0),
(4294, 1339, 'Binary to grey code conversion ', 0),
(4295, 1339, 'Binary to radix-12 conversion ', 1),
(4296, 1340, '0 to 1 ', 0),
(4297, 1340, '0.5 to 1 ', 0),
(4298, 1340, '2<sup>-23</sup> to 0.5 ', 0),
(4299, 1340, '0.5 to (1-2<sup>-23</sup>)', 1),
(4300, 1341, 'Σ9,10', 0),
(4301, 1341, 'Σ9', 1),
(4302, 1341, 'Σ1,8,9', 0),
(4303, 1341, 'Σ8,10,15', 0),
(4304, 1343, 'xy\' is a prime implicent of f', 0),
(4305, 1343, 'xz is a minterm of f ', 0),
(4306, 1343, 'xz is an implicant of f ', 1),
(4307, 1343, 'y is a prime implicant of f ', 0),
(4308, 1344, 'x\' y', 0),
(4309, 1344, 'x', 1),
(4310, 1344, '0', 0),
(4311, 1344, '1', 0),
(4312, 1345, 'complements when n is even ', 0),
(4313, 1345, 'complements when n is odd ', 0),
(4314, 1345, 'divides by 2<sup>n</sup> always', 0),
(4315, 1345, 'remains unchanged when n is even', 1),
(4316, 1346, '<img src=\"./image/choice/1346.1.jpg\"/>', 0),
(4317, 1346, '<img src=\"./image/choice/1346.2.jpg\"/>', 1),
(4318, 1346, '<img src=\"./image/choice/1346.2.jpg\"/>', 0),
(4319, 1346, '<img src=\"./image/choice/1346.4.jpg\"/>', 0),
(4320, 1347, 'x NAND x', 0),
(4321, 1347, 'x NOR x ', 0),
(4322, 1347, 'x NAND 1 ', 0),
(4323, 1347, 'x NOR 1', 1),
(4324, 1348, 'X = 1.0, Y = 1.0 ', 0),
(4325, 1348, 'X = 1.0, Y = 0.0 ', 1),
(4326, 1348, 'X = 0.0, Y = 1.0 ', 0),
(4327, 1348, 'X = 0.0, Y = 0.0 ', 0),
(4328, 1349, '0 1 0 0 ', 0),
(4329, 1349, '1 1 0 1 ', 0),
(4330, 1349, '1 0 1 1 ', 1),
(4331, 1349, '1 0 0 0 ', 0),
(4332, 1350, 'xyz\'', 1),
(4333, 1350, 'xy z', 0),
(4334, 1350, 'x y', 0),
(4335, 1350, 'None of the above', 0),
(4336, 1351, 'Σ(1,4,5) ', 1),
(4337, 1351, 'Σ(6,7) ', 0),
(4338, 1351, 'Σ(0,1,3,5) ', 0),
(4339, 1351, 'None of the above', 0),
(4340, 1352, 'xz y\'z ', 0),
(4341, 1352, 'xz\' zx\' ', 1),
(4342, 1352, 'x\'y zx\' ', 0),
(4343, 1352, 'None of the above', 0),
(4344, 1354, 'A + B, and A – B, but not A + 1 ', 0),
(4345, 1354, 'A + B, and A + 1, but not A – B', 0),
(4346, 1354, 'A + B, but not A – B or A + 1', 0),
(4347, 1354, 'A + B, and A – B, and A + 1 ', 1),
(4348, 1355, '(11, 9) ', 0),
(4349, 1355, '(9, 13) ', 0),
(4350, 1355, '(9, 10)', 1),
(4351, 1355, '(11, 11)', 0),
(4352, 1357, '28 bits and 0 bits', 1),
(4353, 1357, '24 bits and 4 bits', 0),
(4354, 1357, '24 bits and 0 bits', 0),
(4355, 1357, '28 bits and 4 bits', 0),
(4356, 1359, 'Daisy chaining is used to assign priorities in attending interrupts.', 1),
(4357, 1359, 'When a device raises a vectored interrupt, the CPU does polling to identify the source of the interrupt.', 0),
(4358, 1359, 'In polling, the CPU periodically checks the status bits to know if any device needs its attention.', 1),
(4359, 1359, 'During DMA, both the CPU and DMA controller can be bus masters at the same time.', 0),
(4360, 1362, 'A1 and A4 are mapped to different cache sets.', 0),
(4361, 1362, 'A1 and A3 are mapped to the same cache set. ', 0),
(4362, 1362, 'A3 and A4 are mapped to the same cache set. ', 0),
(4363, 1362, 'A2 and A3 are mapped to the same cache set. ', 1),
(4364, 1364, 'Register-to-register arithmetic operations only', 1),
(4365, 1364, 'Fixed-length instruction format', 1),
(4366, 1364, 'Hardwired control unit ', 1),
(4367, 1364, 'None of the above', 0),
(4368, 1366, 'QPTRS', 1),
(4369, 1366, 'PTRSQ', 0),
(4370, 1366, 'TRPQS', 0),
(4371, 1366, 'QTPRS', 0),
(4372, 1367, 'P - N - log<sub>2</sub>K', 0),
(4373, 1367, 'P - N + log<sub>2</sub>K ', 1),
(4374, 1367, 'P - N - M - W - log<sub>2</sub>K', 0),
(4375, 1367, 'P - N - M - W + log<sub>2</sub>K', 0),
(4376, 1370, 'Post-increment addressing mode, (R1) ', 0),
(4377, 1370, 'Pre-decrement addressing mode, -(R1)', 0),
(4378, 1370, 'Register direct addressing mode, R1', 0),
(4379, 1370, 'Index addressing mode, X(R1), where X is an offset represented in 2’s complement 16-bit representation', 1),
(4380, 1375, '0.111 and 0.056', 1),
(4381, 1375, '0.056 and 0.111', 0),
(4382, 1375, '0.0892 and 0.1784', 0),
(4383, 1375, '0.1784 and 0.0892', 0),
(4384, 1385, 'Either S1 or S2 ', 1),
(4385, 1385, 'Either S2 or S3', 0),
(4386, 1385, 'Only S2 and S3 ', 0),
(4387, 1385, 'All of S1, S2 and S3 ', 0),
(4388, 1390, 'Only S1 is true', 0),
(4389, 1390, 'Only S2 is true ', 1),
(4390, 1390, 'Only S1 and S3 are true ', 0),
(4391, 1390, 'Only S2 and S3 are true ', 0),
(4392, 1394, 'A queue cannot be implemented using this stack. ', 0),
(4393, 1394, 'A queue can be implemented where ENQUEUE takes a single instruction and DEQUEUE takes a sequence of two instructions. ', 0),
(4394, 1394, 'A queue can be implemented where ENQUEUE takes a sequence of three instructions and DEQUEUE takes a single instruction. ', 1),
(4395, 1394, 'A queue can be implemented where both ENQUEUE and DEQUEUE take a single instruction each. ', 0),
(4396, 1395, 'A smaller block size implies better spatial locality ', 0),
(4397, 1395, 'A smaller block size implies a smaller cache tag and hence lower cache tag overhead ', 0),
(4398, 1395, 'A smaller block size implies a larger cache tag and hence lower cache hit time ', 0),
(4399, 1395, 'A smaller block size incurs a lower cache miss penalty ', 1),
(4400, 1396, 'Width of tag comparator ', 0),
(4401, 1396, 'Width of set index decoder ', 0),
(4402, 1396, 'Width of way selection multiplexor', 0),
(4403, 1396, 'Width of processor to main memory data bus ', 1),
(4404, 1397, 'C1640000H ', 0),
(4405, 1397, '416C0000H', 0),
(4406, 1397, '41640000H ', 0),
(4407, 1397, 'C16C0000H ', 1),
(4408, 1399, 'P1', 0),
(4409, 1399, 'P2', 0),
(4410, 1399, 'P3', 1),
(4411, 1399, 'P4', 0),
(4412, 1401, '(j mod v) * k to (j mod v) * k + (k-1) ', 1),
(4413, 1401, '(j mod v) to (j mod v) + (k-1) ', 0),
(4414, 1401, '(j mod k) to (j mod k) + (v-1)', 0),
(4415, 1401, '(j mod k) * v to (j mod k) * v + (v-1)', 0),
(4416, 1402, 'Instruction fetch ', 0),
(4417, 1402, 'Operand fetch ', 0),
(4418, 1402, 'Conditional branch ', 0),
(4419, 1402, 'Initiation of interrupt service ', 1),
(4420, 1406, 'as an alternative to register allocation at compile time ', 0),
(4421, 1406, 'for efficient access to function parameters and local variables ', 0),
(4422, 1406, 'to handle certain kinds of hazards ', 1),
(4423, 1406, 'as part of address translation ', 0),
(4424, 1407, '160 Kbits ', 1),
(4425, 1407, '136 Kbits ', 0),
(4426, 1407, '40 Kbits ', 0),
(4427, 1407, '32 Kbits ', 0),
(4428, 1408, 'Immediate Addressing', 0),
(4429, 1408, 'Register Addressing', 0),
(4430, 1408, 'Register Indirect Scaled Addressing ', 0),
(4431, 1408, 'Base Indexed Addressing', 1),
(4432, 1409, 'Interrupt from Hard Dist', 0),
(4433, 1409, 'Interrupt from Mouse', 0),
(4434, 1409, 'Interrupt from Keyboard ', 0),
(4435, 1409, 'Interrupt from CPU temperature sensor', 1),
(4436, 1410, '4864 bits', 0),
(4437, 1410, '6144 bits', 0),
(4438, 1410, '6656 bits', 0),
(4439, 1410, '5376 bits', 1),
(4440, 1411, '0.50 s ', 0),
(4441, 1411, '1.50 s ', 1),
(4442, 1411, '1.25 s', 0),
(4443, 1411, '1.00 s', 0),
(4444, 1414, 'As soon as an interrupt is raised.', 0),
(4445, 1414, 'By checking the interrupt register at the end of fetch cycle.', 0),
(4446, 1414, 'By checking the interrupt register after finishing the execution of the current instruction.', 1),
(4447, 1414, 'By checking the interrupt register at fixed time intervals.', 0),
(4448, 1415, '3', 0),
(4449, 1415, '8', 0),
(4450, 1415, '129', 0),
(4451, 1415, '216', 1),
(4452, 1416, 'non-uniform distribution of requests ', 0),
(4453, 1416, 'arm starting and stopping inertia', 1),
(4454, 1416, 'higher capacity of tracks on the periphery of the platter', 0),
(4455, 1416, 'use of unfair arm scheduling policies ', 0),
(4456, 1417, 'It is useful in creating self-relocating code', 0),
(4457, 1417, 'If it is included in an Instruction Set Architecture, then an additional ALU is required for effective address calculation', 0),
(4458, 1417, 'The amount of increment depends on the size of the data item accessed', 1),
(4459, 1417, 'None of the above', 0),
(4460, 1418, 'It must be a trap instruction', 1),
(4461, 1418, 'It must be a privileged instruction ', 1),
(4462, 1418, 'An exception cannot be allowed to occur during execution of an RFE instruction', 1),
(4463, 1418, 'None of the above', 0),
(4464, 1419, 'L1 must be a write-through cache', 0),
(4465, 1419, 'L2 must be a write-through cache', 0),
(4466, 1419, 'The associativity of L2 must be greater than that of L1 ', 0),
(4467, 1419, 'The L2 cache must be at least as large as the L1 cache ', 1),
(4468, 1420, 'Function locals and parameters', 1),
(4469, 1420, 'Register saves and restores', 0),
(4470, 1420, 'Instruction fetches', 0),
(4471, 1420, 'None of the above', 0),
(4472, 1421, 'Before effective address calculation has started ', 0),
(4473, 1421, 'During effective address calculation', 0),
(4474, 1421, 'After effective address calculation has completed', 1),
(4475, 1421, 'After data cache lookup has completed', 0),
(4476, 1422, '32Kbits', 0),
(4477, 1422, '34Kbits', 0),
(4478, 1422, '64Kbits', 0),
(4479, 1422, '68Kbits ', 1),
(4480, 1423, 'ARR [0] [4]', 0),
(4481, 1423, 'ARR [4] [0] ', 1),
(4482, 1423, 'ARR [0] [5]', 0),
(4483, 1423, 'ARR [5] [0] ', 0),
(4484, 1424, '0%', 0),
(4485, 1424, '25%', 0),
(4486, 1424, '50%', 1),
(4487, 1424, '75%', 0),
(4488, 1425, 'The instruction following the conditional branch instruction in memory is executed.', 1),
(4489, 1425, 'The first instruction in the fall through path is executed. ', 0),
(4490, 1425, 'The first instruction in the taken path is executed. ', 0),
(4491, 1425, 'The branch takes longer to execute than any other instruction.', 0),
(4492, 1426, '10,000 bytes', 0),
(4493, 1426, '12,000 bytes', 1),
(4494, 1426, '15,000 bytes', 0),
(4495, 1426, '27,000 bytes', 0),
(4496, 1429, '256 Mbyte, 19 bits ', 1),
(4497, 1429, '256 Mbyte, 28 bits ', 0),
(4498, 1429, '512 Mbyte, 20 bits', 0),
(4499, 1429, '64 Gbyte, 28 bit ', 0),
(4500, 1430, '9, 6, 5 ', 0),
(4501, 1430, '7, 7, 6', 0),
(4502, 1430, '7, 5, 8 ', 0),
(4503, 1430, '9, 5, 6', 1),
(4504, 1431, '000011000', 1),
(4505, 1431, '110001111', 0),
(4506, 1431, '00011000', 0),
(4507, 1431, '110010101', 0),
(4508, 1432, '7, 6, 7', 0),
(4509, 1432, '8, 5, 7', 0),
(4510, 1432, '8, 6, 6', 0),
(4511, 1432, '9, 4, 7', 1),
(4512, 1434, '125, 7', 0),
(4513, 1434, '125, 10', 0),
(4514, 1434, '135, 7', 0),
(4515, 1434, '135, 10', 1),
(4516, 1435, 'ADD (X)−, (X)', 1),
(4517, 1435, 'ADD (X), (X)−', 0),
(4518, 1435, 'ADD −(X), (X)+', 0),
(4519, 1435, 'ADD −(X), (X)+', 0),
(4520, 1436, 'C800 to C8FF', 0),
(4521, 1436, 'C800 to CFFF', 1),
(4522, 1436, 'DA00 to DFFF', 0),
(4523, 1436, 'CA00 to CAFF', 0),
(4524, 1437, '3, 5, 1, 2, 4', 0),
(4525, 1437, '3, 5, 2, 1, 4 ', 1),
(4526, 1437, '1, 2, 4, 3, 5 ', 0),
(4527, 1437, '2, 1, 4, 5, 3 ', 0),
(4528, 1441, '(016A)<sub>16</sub> ', 0),
(4529, 1441, '(016C)<sub>16</sub>', 0),
(4530, 1441, '(0170)<sub>16</sub>', 0),
(4531, 1441, '(0172)<sub>16</sub>', 1),
(4532, 1444, '2 nanoseconds', 0),
(4533, 1444, '20 nanoseconds', 0),
(4534, 1444, '22 nanoseconds', 1),
(4535, 1444, '88 nanoseconds', 0),
(4536, 1445, '222 nanoseconds ', 0),
(4537, 1445, '888 nanoseconds', 0),
(4538, 1445, '902 nanoseconds ', 1),
(4539, 1445, '968 nanoseconds ', 0),
(4540, 1448, '〈0, 15, 31〉 ', 0),
(4541, 1448, '〈0, 16, 30〉', 0),
(4542, 1448, '〈0, 16, 31〉 ', 1),
(4543, 1448, '〈0, 17, 31〉', 0),
(4544, 1449, '1 only', 0),
(4545, 1449, '2 only', 1),
(4546, 1449, 'both', 0),
(4547, 1449, 'none', 0),
(4548, 1450, 'Θ(1)', 0),
(4549, 1450, 'Θ(sqrt(logn))', 0),
(4550, 1450, 'Θ(log n/(log log n))', 0),
(4551, 1450, 'Θ(log n)', 1),
(4552, 1452, 'O(n<sup>2</sup> )', 1),
(4553, 1452, 'O(nlogn)', 0),
(4554, 1452, 'Θ(nlogn)', 0),
(4555, 1452, 'O(n<sup>3</sup> )', 0),
(4556, 1453, 'Quick sort', 0),
(4557, 1453, 'Insertion sort', 0),
(4558, 1453, 'Selection sort', 1),
(4559, 1453, 'Heap sort', 0),
(4560, 1454, 'T (n) ≤ 2T (n /5)   n', 0),
(4561, 1454, 'T (n) ≤ T (n /5)   T (4n /5)   n', 0),
(4562, 1454, 'T (n) ≤ 2T (4n /5)   n', 1),
(4563, 1454, 'T (n) ≤ 2T (n /2)   n', 0),
(4564, 1455, 'Θ(n)', 0),
(4565, 1455, 'Θ(n logn)', 1),
(4566, 1455, 'Θ(n<sup>2</sup> )', 0),
(4567, 1455, 'Θ(n<sup>2</sup> logn)', 0),
(4568, 1456, 'remain Θ(n<sup>2</sup> )', 1),
(4569, 1456, 'become Θ(n(log n)<sup>2</sup> )', 0),
(4570, 1456, 'become Θ(nlogn)', 0),
(4571, 1456, 'become Θ(n)', 0),
(4572, 1457, 't(n) is O(1)', 1),
(4573, 1457, 'n < t(n) <n log<sub>2</sub>n', 0),
(4574, 1457, 'n log<sub>2</sub>n < t(n) < <sup>n</sup>C<sub>2</sub>', 0),
(4575, 1457, 't(n) = <sup>n</sup>C<sub>2</sub>', 0),
(4576, 1458, 'C1 < C2', 0),
(4577, 1458, 'C1 > C2', 1),
(4578, 1458, 'C1 = C2', 0),
(4579, 1458, 'we cannot say anything for arbitrary n.', 0),
(4580, 1459, 'Bubble Sort', 1),
(4581, 1459, 'Insertion Sort', 1),
(4582, 1459, 'Selection Sort', 0),
(4583, 1459, 'Heap Sort', 0),
(4584, 1460, 'Bubble Sort', 1),
(4585, 1460, 'Quick Sort', 0),
(4586, 1460, 'Merge Sort', 1),
(4587, 1460, 'Heap Sort', 0),
(4588, 1461, 'Bubble Sort', 1),
(4589, 1461, 'Quick Sort', 0),
(4590, 1461, 'Merge Sort', 0),
(4591, 1461, 'Heap Sort', 1),
(4592, 1462, 'Insertion Sort', 1),
(4593, 1462, 'Quick Sort', 0),
(4594, 1462, 'Merge Sort', 0),
(4595, 1462, 'Selection Sort', 1);

-- --------------------------------------------------------

--
-- Table structure for table `na_range`
--

CREATE TABLE `na_range` (
  `q_id` int NOT NULL,
  `start` float DEFAULT NULL,
  `end` float DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

--
-- Dumping data for table `na_range`
--

INSERT INTO `na_range` (`q_id`, `start`, `end`) VALUES
(12, 99, 99),
(13, 4, 4),
(14, 16, 16),
(18, 5, 5),
(22, 225, 225),
(24, 7, 7),
(28, 1500, 1500),
(29, 2.58, 2.59),
(33, 69, 69),
(36, 6, 6),
(38, 995, 995),
(39, 12, 12),
(40, 148, 148),
(42, 34, 34),
(43, 358, 358),
(44, 6, 6),
(46, 19, 19),
(48, 110, 110),
(96, 7, 7),
(97, 144, 144),
(104, 13, 13),
(106, 19, 19),
(109, 511, 511),
(110, 4, 4),
(113, 80, 80),
(115, 18, 18),
(120, 6, 6),
(123, 12, 12),
(124, 256, 256),
(125, 31, 31),
(128, 8, 8),
(130, 64, 64),
(133, 19, 19),
(137, 5, 5),
(138, 80, 80),
(139, 3, 3),
(140, 67, 67),
(141, 142, 142),
(142, 199, 199),
(144, 1, 1),
(150, 4, 4),
(162, 10, 10),
(164, 30, 30),
(166, 3, 2),
(179, 7, 7),
(182, 5, 5),
(187, 5, 5),
(191, 5, 5),
(195, 35, 35),
(197, 25, 25),
(204, 11, 11),
(219, 14, 14),
(223, 3, 3),
(246, 4050, 4050),
(254, 3, 3),
(265, 3, 3),
(267, 2, 2),
(278, 2, 2),
(280, 5, 5),
(288, 31, 32),
(290, 5, 5),
(292, 7, 7),
(300, 1024, 1024),
(301, 2, 2),
(305, 10, 10),
(306, 9, 9),
(307, 231, 231),
(311, 8, 8),
(328, 6, 6),
(337, 3, 3),
(340, 3, 3),
(366, 160, 160),
(377, 10, 10),
(409, 6, 6),
(413, 2, 2),
(417, 4, 4),
(424, 8, 8),
(434, 2, 2),
(442, 1, 1),
(445, 3, 3),
(447, 5, 5),
(456, 3, 3),
(460, 150, 150),
(481, 3, 3),
(495, 4, 4),
(497, 4, 4),
(501, 26, 26),
(509, 4.03, 4.03),
(510, 64, 64),
(511, 8, 8),
(515, 160, 160),
(534, 15, 15),
(545, 5, 5),
(560, 3, 3),
(568, 7, 7),
(578, 5, 5),
(581, 3, 3),
(603, 9, 9),
(623, 3, 3),
(641, 48, 48),
(660, 2, 2),
(665, 3, 3),
(666, 2, 2),
(667, 11, 11),
(673, 7, 7),
(678, 9, 9),
(680, 181, 181),
(685, 4, 4),
(694, 5, 5),
(695, 8, 8),
(727, 1.155, 1.155),
(729, 5, 5),
(730, 13, 13),
(734, 2060, 2060),
(735, 5.5, 5.5),
(737, 0, 0),
(739, 13.5, 13.5),
(745, 2, 2),
(758, 15, 15),
(760, 13, 13),
(761, 10.6, 10.6),
(765, 2, 2),
(766, 11, 11),
(770, 7, 7),
(771, 19, 19),
(773, 2, 2),
(774, 7, 7),
(778, 15, 15),
(795, 119, 119),
(800, 196, 196),
(803, 5, 5),
(806, 30, 30),
(811, 7, 7),
(812, 8, 8),
(814, 80, 80),
(815, 2, 2),
(816, 31, 31),
(818, 2, 2),
(819, 4, 4),
(823, 5.25, 5.25),
(826, 154.5, 155.5),
(829, 85, 85),
(832, 3, 3),
(838, 29, 29),
(840, 384, 384),
(841, 346, 346),
(842, 1, 1),
(845, 8.25, 8.25),
(847, 7, 7),
(848, 3, 3),
(849, 12, 12),
(850, 10, 10),
(852, 6, 6),
(853, 22, 22),
(854, 36, 36),
(858, 3, 3),
(861, 7.2, 7.2),
(862, 7, 7),
(863, 99.6, 99.6),
(865, 1000, 1000),
(867, 7, 7),
(869, 5.5, 5.5),
(870, 122, 122),
(871, 1.68, 1.68),
(874, 1284, 1284),
(875, 2, 2),
(876, 55, 55),
(877, 81, 81),
(878, 4, 4),
(881, 5, 5),
(882, 10230, 10230),
(886, 3, 3),
(887, 23, 23),
(891, 3, 3),
(892, 0, 0),
(893, 2, 2),
(895, 2016, 2016),
(899, 30, 30),
(901, 3, 3),
(902, -5, -5),
(904, 5, 5),
(907, 51, 51),
(908, 15, 15),
(909, 1204, 1204),
(910, 25, 25),
(911, 140, 140),
(912, 10, 10),
(913, 230, 230),
(915, 9, 9),
(917, 1.73, 1.73),
(920, 7, 7),
(925, 12, 12),
(927, 2, 2),
(929, 15, 15),
(930, 8, 8),
(932, 19, 19),
(936, 9, 9),
(951, 7, 7),
(953, 18, 18),
(961, 7, 7),
(979, 10, 10),
(986, 1, 1),
(987, 5, 5),
(989, 4, 4),
(993, 4, 4),
(999, 2.6, 2.6),
(1002, 4, 4),
(1004, 0, 0),
(1005, 54, 54),
(1006, 7, 7),
(1007, 52, 52),
(1015, 2, 2),
(1017, 4, 4),
(1018, 2, 2),
(1020, 5, 5),
(1030, 8, 8),
(1031, 19, 19),
(1041, 4, 4),
(1048, 7, 7),
(1049, 3, 3),
(1052, 5, 5),
(1053, 127, 127),
(1054, 2, 2),
(1058, 100, 100),
(1060, 3, 3),
(1066, 5, 5),
(1070, 3, 3),
(1080, 63, 63),
(1086, 1, 1),
(1092, 2000, 2000),
(1094, 34, 34),
(1106, 5, 5),
(1108, 4, 4),
(1139, 43, 43),
(1147, 23, 23),
(1149, 25, 25),
(1152, 3, 3),
(1155, 26, 26),
(1165, 0.502, 0.502),
(1170, 5, 5),
(1171, 1034, 1034),
(1175, 2, 2),
(1177, 3, 3),
(1180, 1, 1),
(1182, 136251, 136251),
(1184, 8, 8),
(1190, -11, -11),
(1191, 4, 4),
(1194, -1, -1),
(1196, 1, 1),
(1200, 3, 3),
(1201, 1, 1),
(1202, 19.2, 19.2),
(1203, 3, 3),
(1205, 5, 5),
(1209, 3, 3),
(1214, -128, -128),
(1222, 9, 9),
(1224, 4, 4),
(1233, 3, 3),
(1234, 64, 64),
(1247, 9, 9),
(1282, 123, 123),
(1286, 103, 103),
(1291, 3, 3),
(1296, 4, 4),
(1308, 65536, 65536),
(1312, 9, 9),
(1336, 10, 10),
(1342, 5, 5),
(1353, 4, 4),
(1356, 5, 5),
(1358, 160, 160),
(1360, 13.5, 13.5),
(1361, 2.16, 2.16),
(1363, 14, 14),
(1365, 59, 59),
(1368, 32, 32),
(1369, 219, 219),
(1371, 0.05, 0.05),
(1372, 1.51, 1.51),
(1373, 76, 76),
(1374, 14, 14),
(1376, 18, 18),
(1377, 31, 31),
(1378, 456, 456),
(1379, 33.32, 33.34),
(1380, 16, 16),
(1381, 28, 28),
(1382, 500, 500),
(1383, 24, 24),
(1384, 4, 4),
(1386, 3.2, 3.2),
(1387, 14020, 14020),
(1388, 14, 14),
(1389, 13, 13),
(1391, 16383, 16383),
(1392, 1.6, 1.6),
(1393, 20, 20),
(1398, 10000, 10000),
(1400, 1.54, 1.54),
(1403, 165, 165),
(1404, 5, 5),
(1405, 4, 4),
(1412, 3.4, 3.4),
(1413, 15, 15),
(1427, 56, 56),
(1428, 8, 8),
(1433, 3.33, 3.33),
(1438, -16, -16),
(1439, 4.72, 4.72),
(1440, 30, 30),
(1442, 16, 16),
(1443, 2.5, 2.5),
(1446, 23, 23),
(1447, 505037, 505037),
(1451, 147, 147);

-- --------------------------------------------------------

--
-- Table structure for table `question`
--

CREATE TABLE `question` (
  `q_id` int NOT NULL,
  `question` varchar(1500) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL,
  `type` int DEFAULT NULL,
  `sub_id` int DEFAULT NULL,
  `topic_id` int DEFAULT NULL,
  `source` varchar(100) NOT NULL DEFAULT 'Gate',
  `year` int NOT NULL,
  `life` int NOT NULL DEFAULT '5',
  `attampt` int NOT NULL DEFAULT '0',
  `correct` int NOT NULL DEFAULT '0'
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

--
-- Dumping data for table `question`
--

INSERT INTO `question` (`q_id`, `question`, `type`, `sub_id`, `topic_id`, `source`, `year`, `life`, `attampt`, `correct`) VALUES
(1, 'Which of the scheduling algorithm is non-preemptive?', 1, 1, 1, 'Gate', 2002, 5, 0, 0),
(2, 'Which of the following does not interrupt a running process?', 1, 1, 1, 'Gate', 0, 5, 0, 0),
(3, 'A critical region is', 1, 1, 2, 'Gate', 0, 5, 0, 0),
(4, 'Consider a sequence of 14 elements: A = [-5, -10, 6, 3, -1, -2, 13, 4, -9, -1, 4, 12, -3, 0]. The subsequence sum ∑<sub style=\"margin-right: -18px;\r\nfont-size: 11px;\">i=k</sub style=\"font-size: 11px;\"><sup>j</sup> &nbsp&nbspA[k]. Determine the maximum of S(i,j), where 0 ≤ i ≤ j < 14. (Divide and conquer approach may be used)', 1, 2, 3, 'Gate', 2019, 5, 0, 0),
(5, 'An array of 25 distinct elements is to be sorted using quicksort. Assume that the pivot element is chosen uniformly at random. The probability that the pivot element gets placed in the worst possible location in the first round of partitioning (rounded off to 2 decimal places) is _____.', 1, 2, 5, 'Gate', 2019, 5, 0, 0),
(6, 'Consider the following statements:\r\n<pre>  I. The smallest element in a max-heap is always at a leaf node\r\n II. The second largest element in a max-heap is always a child of the root node\r\nIII. A max-heap can be constructed from a binary search tree in Θ(n) time\r\n IV. A binary search tree can be constructed from a max-heap in&nbsp;Θ(n) time\r\n</pre>\r\nWhich of the above statements are TRUE?', 1, 2, 6, 'Gate', 2019, 5, 0, 0),
(7, 'There are n unsorted arrays: A1, A2, ..., An. Assume that n is odd. Each of A1, A2, ..., An contains n distinct elements. There are no common elements between any two arrays. The worst-case time complexity of computing the median of the medians of A1, A2, ..., An is', 1, 2, 5, 'Gate', 2019, 5, 0, 0),
(8, 'Let G be any connected, weighted, undirected graph.\r\n<pre>I. G&nbsp; has a unique minimum spanning tree, if no two edges of G have the same weight.\r\nII.&nbsp;G&nbsp; has a unique minimum spanning tree, if, for every cut of G, there is a unique minimum-weight edge crossing the cut.\r\n</pre>\r\nWhich of the above statements is/are TRUE?', 1, 2, 7, 'Gate', 2019, 5, 0, 0),
(9, 'For parameters a and b, both of which are <i>w(1), T(n<sup>1/a</sup>)+1, and T(b)=1</i>, Then T(n) is', 1, 2, 8, 'Gate', 2020, 5, 0, 0),
(10, 'Let G = (V,E) be a directed, weighted graph with weight function w:E--> R. For some function f:V--> R, for each edge (u,v)E, define w\'(u,v) as w(u,v)+f(u)-f(v).\r\nWhich one of the options completes the following sentence so that it is TRUE?\r\n“The shortest paths in G under w are shortest paths under w’ too, _______”. ', 1, 2, 7, 'Gate', 2020, 5, 0, 0),
(11, 'Let G = (V,E) be a weighted undirected graph and let T be a Minimum Spanning Tree (MST) of G maintained using adjacency lists. Suppose a new weighted edge (u,v) ε V x V is added to G. The worst case time complexity of determining if T is still an MST of the resultant graph is', 1, 2, 9, 'Gate', 2020, 5, 0, 0),
(12, 'Consider a graph G = (V, E), where V = {v1, v2, …, v100}, E = {(vi, vj) | 1 ≤ i < j ≤ 100}, and weight of the edge (vi, vj) is |i - j|. The weight of the minimum spanning tree of G is ______. ', 2, 2, 9, 'Gate', 2018, 5, 0, 0),
(13, '<div id=\"question\">\r\n  Consider the following undirected graph G:<br>\r\n  <div style=\"text-align: center;\"><img src=\"./image/question/13.jpg\"></div><br>\r\nChoose a value for x that will maximize the number of minimum weight spanning trees (MWSTs) of G. The number of MWSTs of G for this value of x is _________.</div>', 2, 2, 9, 'Gate', 2018, 5, 0, 0),
(14, 'Consider the weights and values of items listed below. Note that there is only one unit of each item.<br/>\r\n<div style=\"text-align: center;\"><img src=\"./image/question/14.jpg\"></div><br>\r\nThe task is to pick a subset of these items such that their total weight is no more than 11 Kgs and their total value is maximized. Moreover, no item may be split. The total value of items picked by an optimal algorithm is denoted by Vopt. A greedy algorithm sorts the items by their value-to-weight ratios in descending order and packs them greedily, starting from the first item in the ordered list. The total value of items picked by the greedy algorithm is denoted by Vgreedy. The value of V<sub>opt</sub> − V<sub>greedy</sub> is ______ .', 2, 2, 10, 'Gate', 2018, 5, 0, 0),
(15, 'Consider the following functions from positives integers to real numbers<br/>\r\n<div style=\"text-align: left;\"><img src=\"./image/question/15.jpg\"></div><br>\r\nThe CORRECT arrangement of the above functions in increasing order of asymptotic complexity is:', 1, 2, 11, 'Gate', 2017, 5, 0, 0),
(16, 'Consider the following table<br/>\r\n<div style=\"text-align: center;\"><img src=\"./image/question/16.jpg\"></div><br>\r\nMatch the algorithm to design paradigms they are based on:', 1, 2, 12, 'Gate', 2017, 5, 0, 0),
(17, 'Let G = (V, E) be any connected undirected edge-weighted graph. The weights of the edges in E are positive and distinct. Consider the following statements:<br/>\r\n<ul>\r\n(I) Minimum Spanning Tree of <em>G</em> is always unique.<br>\r\n(II) Shortest path between any two vertices of <em>G</em> is always unique.\r\n</ul>\r\nWhich of the above statements is/are necessarily true?', 1, 2, 9, 'Gate', 2017, 5, 0, 0),
(18, 'Let A be an array of 31 numbers consisting of a sequence of 0’s followed by a sequence of 1’s. The problem is to find the smallest index i such that A[i] is 1 by probing the minimum number of locations in A. The worst case number of probes performed by an optimal algorithm is _________.', 2, 2, 6, 'Gate', 2017, 5, 0, 0),
(19, 'Match the algorithms with their time complexities:<br/>\r\n<pre>      <u>Algorithm</u>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;      &nbsp; <u>Time complexity</u>\r\n(P) Towers of Hanoi with <em>n</em> disks&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  (i) Θ(n<sup>2</sup>)\r\n(Q) Binary search given <em>n</em> stored numbers&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(ii) Θ(n log⁡ n)\r\n(R) Heap sort given <em>n</em> numbers at the worst case&nbsp;&nbsp;&nbsp; &nbsp; (iii) Θ(2<sup>n</sup>)\r\n(S) Addition of two <em>n×n</em> matrices&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; (iv) Θ(log⁡ n)\r\n</pre>', 1, 2, 12, 'Gate', 2017, 5, 0, 0),
(20, '<div style=\"text-align: left;\"><img src=\"./image/question/20.jpg\"></div>', 1, 2, 11, 'Gate', 2017, 5, 0, 0),
(21, '<p>Consider the following C function.</p>\r\n<pre>int fun (int n) &nbsp;&nbsp;{\r\n      int i, j;\r\n      for (i = 1; i &lt;= n; i++) &nbsp;&nbsp;{\r\n          for (j = 1; j &lt; n; j += i) &nbsp;&nbsp;{\r\n               printf(\"%d %d\",i,j);\r\n          }\r\n      }\r\n}\r\n</pre>\r\n<p>Time complexity of fun in terms of Θ notation is</p>', 1, 2, 11, 'Gate', 2017, 5, 0, 0),
(22, 'A message is made up entirely of characters from the set X = {P, Q, R, S, T}. The table of probabilities for each of the characters is shown below:<br/>\r\n<div style=\"text-align: center;\"><img src=\"./image/question/22.jpg\"></div><br/>\r\nIf a message of 100 characters over X is encoded using Huffman coding, then the expected length of the encoded message in bits is __________.', 2, 2, 13, 'Gate', 2017, 5, 0, 0),
(23, 'The worst case running times of Insertion sort, Merge sort and Quick sort, respectively, are:', 1, 2, 5, 'Gate', 2016, 5, 0, 0),
(24, 'Let G be a complete undirected graph on 4 vertices, having 6 edges with weights being 1, 2, 3, 4, 5, and 6. The maximum possible weight that a minimum weight spanning tree of G can have is __________.', 2, 2, 9, 'Gate', 2016, 5, 0, 0),
(25, 'G = (V,E) is an undirected simple graph in which each edge has a distinct weight, and e is a particular edge of G. Which of the following statements about the minimum spanning trees (MSTs) of G is/are TRUE?<br/>\r\n<ul>\r\nI. If <em>e</em> is the lightest edge of <u>some</u> cycle in <em>G</em>, then every MST of <em>G</em> <u>includes</u> <em>e</em><br>\r\nII. If <em>e</em> is the heaviest edge of <u>some</u>&nbsp;cycle in <em>G</em>, then every MST of <em>G</em> <u>excludes</u> <em>e</em>\r\n</ul>', 1, 2, 9, 'Gate', 2016, 5, 0, 0),
(26, '<p align=\"Justify\">Assume that the algorithms considered here sort the input sequences in ascending order. If the input is already in ascending order, which of the following are <strong>TRUE</strong>?</p>\r\n<ul>\r\nI. Quicksort runs in Θ(n<sup>2</sup>) time<br>\r\nII. Bubblesort runs in Θ(n<sup>2</sup>) time<br>\r\nIII. Mergesort runs in Θ(n) time<br>\r\nIV. Insertion sort runs in Θ(n) time\r\n</ul>', 1, 2, 5, 'Gate', 2016, 5, 0, 0),
(27, 'The Floyd-Warshall algorithm for all-pair shortest paths computation is based on', 1, 2, 3, 'Gate', 2016, 5, 0, 0),
(28, '<p align=\"Justify\">Let <i>A<sub>1</sub>, A<sub>2</sub>, A<sub>3</sub> and A<sub>4</sub></i> be four matrices of dimensions 10 × 5, 5 × 20, 20 × 10, and 10 × 5, respectively. The minimum number of scalar multiplications required to ﬁnd the product <i>A<sub>1</sub>A<sub>2</sub>A<sub>3</sub>A<sub>4</sub></i>&nbsp;using the basic matrix multiplication method is _________.</p>', 2, 2, 14, 'Gate', 2016, 5, 0, 0),
(29, '<p align=\"Justify\">The given diagram shows the ﬂowchart for a recursive function A(n). Assume that all statements, except for the recursive calls, have O(1) time complexity. If the worst case time complexity of this function is O(n<sup>α</sup>), then the least possible value (accurate upto two decimal&nbsp; positions) of α is _________.</p>\r\n<center><img src=\"./image/question/29.jpg\"/></center>', 2, 2, 11, 'Gate', 2016, 5, 0, 0),
(30, 'Which one of the following is the recurrence equation for the worst case time complexity of the Quicksort algorithm for sorting n(≥ 2) numbers? In the recurrence equations given in the options below, c is a constant. ', 1, 2, 5, 'Gate', 2015, 5, 0, 0),
(31, 'Match the following<br/>\r\n<center><img src=\"./image/question/31.jpg\"/></center>', 1, 2, 12, 'Gate', 2015, 5, 0, 0),
(32, '<p align=\"Justify\">An algorithm performs (log N)<sup>1/2</sup> find operations, N insert operations, (log N)<sup>1/2</sup>&nbsp;delete operations, and (log N)<sup>1/2</sup> decrease-key operations on a set of data items with keys drawn from a linearly ordered set. For a delete operation, a pointer is provided to the record that must be deleted. For the decrease-key operation, a pointer is provided to the record that has its key decreased. Which one of the following data structures is the most suited for the algorithm to use, if the goal is to achieve the best total asymptotic complexity considering all the operations?</p>', 1, 2, 11, 'Gate', 2015, 5, 0, 0),
(33, 'The graph shown below 8 edges with distinct integer edge weights. The minimum spanning tree (MST) is of weight 36 and contains the edges: {(A, C), (B, C), (B, E), (E, F), (D, F)}. The edge weights of only those edges which are in the MST are given in the figure shown below. The minimum possible sum of weights of all 8 edges of this graph is ______________. <br/>\r\n<center><img src=\"./image/question/33.jpg\"/></center>', 2, 2, 9, 'Gate', 2015, 5, 0, 0),
(34, 'Given below are some algorthims, and some algothim design paradigms <br/>\r\n<img src=\"./image/question/34.jpg\"/>', 1, 2, 15, 'Gate', 2015, 5, 0, 0),
(35, '<img src=\"./image/question/35.jpg\"/>', 1, 2, 5, 'Gate', 2015, 5, 0, 0),
(36, '<span style=\"font-weight: 400;\">Consider a typical disk that rotates at 15000 rotations per minute (RPM) and has a transfer rate of </span><span style=\"font-weight: 400;\">50×</span><span style=\"font-weight: 400;\">10</span><span style=\"font-weight: 400;\"><sup>6</sup></span><span style=\"font-weight: 400;\"> bytes/sec. If the average seek time of the disk is twice the average rotational delay and the controller’s transfer time is 10 times the disk transfer time, the average time (in milliseconds) to read or write a 512-byte sector of the disk is _____________. &nbsp;</span>', 2, 4, 16, 'Gate', 2015, 5, 0, 0),
(37, 'Assume that a mergesort algorithm in the worst case takes 30 seconds for an input of size 64. Which of the following most closely approximates the maximum input size of a problem that can be solved in 6 minutes?  ', 1, 2, 17, 'Gate', 2015, 5, 0, 0),
(38, 'Let G be a connected undirected graph of 100 vertices and 300 edges. The weight of a minimum spanning tree of G is 500. When the weight of each edge of G is increased by five, the weight of a minimum spanning tree becomes __________. ', 2, 2, 9, 'Gate', 2015, 5, 0, 0),
(39, 'There are 5 bags labeled 1 to 5.  All the coins in a given bag have the same weight.  Some bags have coins of weight 10 gm, others have coins of weight 11 gm.  I pick 1, 2, 4, 8, 16 coins respectively from bags 1 to 5.  Their total weight comes out to 323 gm.  Then the product of the labels of the bags having 11 gm coins is _______.', 2, 2, 20, 'Gate', 2014, 5, 0, 0),
(40, 'The minimum number of comparisons required to find the minimum and the maximum of 100 numbers is _________________.', 2, 2, 20, 'Gate', 2014, 5, 0, 0),
(41, 'Which one of the following correctly determines the solution of the recurrence relation with T(1) = 1? <br/>\r\n<pre>T(n) = 2T(n/2) + Logn</pre>', 1, 2, 11, 'Gate', 2014, 5, 0, 0),
(42, 'Consider two strings A = \"qpqrr\" and B = \"pqprqrp\". Let x be the length of the longest common subsequence (not necessarily contiguous) between A and B and let y be the number of such longest common subsequences between A and B. Then x+10y = _________.', 2, 2, 3, 'Gate', 2014, 5, 0, 0),
(43, 'Suppose P, Q, R, S, T are sorted sequences having lengths 20, 24, 30, 35, 50 respectively.  They are to be merged into a single sequence by merging together two sequences at a time.  The number of comparisons that will be needed in the worst case by the optimal algorithm for doing this is ______.', 2, 2, 4, 'Gate', 2014, 5, 0, 0),
(44, 'The number of distinct minimum spanning trees for the weighted graph below is ___<br/>\r\n<img src=\"./image/question/44.jpg\"/>', 2, 2, 9, 'Gate', 2014, 5, 0, 0),
(45, 'Consider the following rooted tree with the vertex la beled P as t he root: <br/>\r\n<center><img src=\"./image/question/45.jpg\"/></center><br/>\r\nThe order in which the nodes are visited during an i n-order trave rsal of the tree is ', 1, 3, 21, 'Gate', 2014, 5, 0, 0),
(46, 'Suppose depth first search is executed on the graph below starting at some unknown vertex. Assume that a recursive call to visit a vertex is made only after first checking that the vertex has not been visited earlier. Then the maximum possible recursion depth (including the initial call) is _________. <br/>\r\n<center><img src=\"./image/question/46.jpg\"</center>', 2, 2, 7, 'Gate', 2014, 5, 0, 0),
(47, 'You have an array of n elements. Suppose you implement quicksort by always choosing the central element of the array as the pivot. Then the tightest upper bound for the worst case performance is', 1, 2, 5, 'Gate', 2014, 5, 0, 0),
(48, 'Suppose we have a balanced binary search tree T holding n numbers.&nbsp; We are given two numbers L and H and wish to sum up all the numbers in T that lie between L and H. Suppose there are m such numbers in T. If the tightest upper bound on the time to compute the sum is O(n<sup>a</sup>log<sup>b</sup>n + m<sup>c</sup>log<sup>d</sup>n), the value of a + 10b + 100c + 1000d is ____.', 2, 2, 22, 'Gate', 2014, 5, 0, 0),
(49, 'Consider a hash table with 100 slots. Collisions are resolved using chaining. Assuming simple uniform hashing, what is the probability that the first 3 slots are unfilled after the first 3 insertions?', 1, 3, 23, 'Gate', 2014, 5, 0, 0),
(50, 'Consider the pseudocode given below. The function DoSomething() takes as argument a pointer to the root of an arbitrary tree represented by the <em>leftMostChild-rightSibling</em> representation. Each node of the tree is of type treeNode.<br/>\r\n<pre>\r\ntypedef struct treeNode* treeptr;\r\nstruct treeNode\r\n{\r\n   treeptr leftMostChild, rightSibling;\r\n};\r\nint DoSomething (treeptr tree)\r\n{\r\n   int value=0;\r\n   if (tree != NULL) {\r\n      if (tree-&gt;leftMostChild == NULL)\r\n         value = 1;\r\n      else\r\n         value = DoSomething(tree-&gt;leftMostChild); value = value + DoSomething(tree-&gt;rightSibling);\r\n   }\r\n   return(value);\r\n}\r\n</pre>\r\nWhen the pointer to the root of a tree is passed as the argument to DoSomething, the value returned by the function corresponds to the\r\n', 1, 3, 24, 'Gate', 2014, 5, 0, 0),
(51, 'Consider the C function given below. Assume that the array listA contains n (&gt; 0) elements, sorted in ascending order.\r\n<pre>\r\nint ProcessArray(int *listA, int x, int n)\r\n{\r\n   int i, j, k;\r\n   i = 0;\r\n   j= n-1;\r\n   do {\r\n      k = (i+j)/2;\r\n      if (x &lt;= listA[k]) j = k-1;\r\n      if (listA[k] &lt;= x) i = k+1;\r\n   }while (i &lt;= j);\r\n   if (listA[k] == x)\r\n      return(k);\r\n   else\r\n      return -1;\r\n}\r\n</pre>\r\nWhich one of the following statements about the function ProcessArray is CORRECT?', 1, 2, 6, 'Gate', 2014, 5, 0, 0),
(52, 'Which one of the following is the tightest upper bound that represents the number of swaps required to sort n numbers using selection sort?', 1, 2, 5, 'Gate', 2013, 5, 0, 0),
(53, 'Which one of the following is the tightest upper bound that represents the time complexity of inserting an object into a binary search tree of n nodes?', 1, 2, 5, 'Gate', 2013, 5, 0, 0),
(54, 'Consider the languages L<sub>1</sub> = ϕ&nbsp;and L<sub>2&nbsp;</sub>= {a}. Which one of the following represents L<sub>1</sub>L<sub>2</sub>* ∪ L<sub>1</sub>*?', 1, 5, 25, 'Gate', 2013, 5, 0, 0),
(55, 'What is the time complexity of Bellman-Ford single-source shortest path algorithm on a complete graph of n vertices?', 1, 2, 7, 'Gate', 2013, 5, 0, 0),
(56, 'Consider an undirected random graph of eight vertices. The probability that there is an edge between a pair of vertices is 1/2. What is the expected number of unordered cycles of length three?', 1, 2, 7, 'Gate', 2013, 5, 0, 0),
(57, 'Which of the following statements is/are TRUE for undirected graphs?\r\n<pre>P: Number of odd degree vertices is even.\r\nQ: Sum of degrees of all vertices is even.</pre>', 1, 2, 7, 'Gate', 2013, 5, 0, 0),
(58, 'The line graph L(G) of a simple graph G is defined as follows: · There is exactly one vertex v(e) in L(G) for each edge e in G. · For any two edges e and e\' in G, L(G) has an edge between v(e) and v(e\'), if and only if e and e\'are incident with the same vertex in G. Which of the following statements is/are TRUE?\r\n<pre>(P) The line graph of a cycle is a cycle.\r\n(Q) The line graph of a clique is a clique.\r\n(R) The line graph of a planar graph is planar.\r\n(S) The line graph of a tree is a tree.</pre>\r\n&nbsp;\r\n\r\n&nbsp;', 1, 2, 7, 'Gate', 2013, 5, 0, 0),
(59, 'The number of elements that can be sorted in Θ(log n) time using heap sort is', 1, 2, 19, 'Gate', 2013, 5, 0, 0),
(60, 'What is the return value of f(p,p), if the value of p is initialized to 5 before the call? Note that the first parameter is passed by reference, whereas the second parameter is passed by value.<br/>\r\n<pre>\r\nint f(int &x, int c){\r\n   c=c-1;\r\n   if(c==0)\r\n      return 1;\r\n   x=x+1;\r\n   return f(x,c) * x;\r\n}\r\n</pre>', 1, 7, 26, 'Gate', 2013, 5, 0, 0),
(61, 'The preorder traversal sequence of a binary search tree is 30, 20, 10, 15, 25, 23, 39, 35, 42. Which one of the following is the postorder traversal sequence of the same tree?', 1, 3, 24, 'Gate', 2013, 5, 0, 0),
(62, 'Consider the following operation along with Enqueue and Dequeue operations on queues, where k is a global parameter.\r\n<pre>MultiDequeue(Q){\r\n   m = k\r\n   while (Q is not empty and m  &gt; 0) {\r\n      Dequeue(Q)\r\n      m = m - 1\r\n   }\r\n}</pre>\r\nWhat is the worst case time complexity of a sequence of n MultiDequeue() operations on an initially empty queue?', 1, 2, 11, 'Gate', 2013, 5, 0, 0),
(63, 'Assuming P ≠ NP, which of the following is TRUE?', 1, 2, 27, 'Gate', 2012, 5, 0, 0),
(64, 'Let W(n) and A(n) denote respectively, the worst case and average case running time of an algorithm executed on an input of size n.  Which of the following is ALWAYS TRUE?', 1, 2, 11, 'Gate', 2012, 5, 0, 0),
(65, 'Consider the Quicksort algorithm. Suppose there is a procedure for finding a pivot element which splits the list into two sub-lists each of which contains at least one-fifth of the elements. Let T(n) be the number of comparisons required to sort n elements. Then', 1, 2, 5, 'Gate', 2008, 5, 0, 0),
(66, 'The subset-sum problem is defined as follows: Given a set S of n positive integers and a positive integer W, determine whether there is a subset of S Whose elements sum to An algorithm Q solves this problem in O(nW) time. Which of the following statements is false?', 1, 2, 27, 'Gate', 2008, 5, 0, 0),
(67, 'Dijkstra’s single source shortest path algorithm when run from vertex <em>a </em>in the above graph, computes the correct shortest path distance to <br/>\r\n<img src=\"./image/question/67.jpg\"/>', 1, 2, 7, 'Gate', 2008, 5, 0, 0),
(68, 'The numbers 1, 2, .... n are inserted in a binary search tree in some order. In the resulting tree, the right subtree of the root contains p nodes. The first number to be inserted in the tree must be', 1, 3, 21, 'Gate', 2005, 5, 0, 0),
(69, 'In a depth-first traversal of a graph G with n vertices, k edges are marked as tree edges. The number of connected components in G is', 1, 3, 7, 'Gate', 2005, 5, 0, 0),
(70, 'In the following table, the left column contains the names of standard graph algorithms and the right column contains the time complexities of the algorithms. Match each algorithm with its time complexity. <br/>\r\n<center><img src=\"./image/question/70.jpg\"</center>', 1, 2, 12, 'Gate', 2005, 5, 0, 0),
(71, 'A hash table contains 10 buckets and uses linear probing to resolve collisions. The key values are integers and the hash function used is key % 10. If the values 43, 165, 62, 123, 142 are inserted in the table, in what location would the key value 142 be inserted?', 1, 3, 23, 'Gate', 2005, 5, 0, 0),
(72, 'In a binary tree, for every node the difference between the number of nodes in the left and right subtrees is at most 2. If the height of the tree is h > 0, then the minimum number of nodes in the tree is:', 1, 3, 24, 'Gate', 2005, 5, 0, 0),
(73, 'Let T(n) be a function defined by the recurrence T(n) = 2T(n/2) + √n for n ≥ 2 and T(1) = 1 Which of the following statements is TRUE?', 1, 2, 11, 'Gate', 2005, 5, 0, 0),
(74, 'Let G be a weighted undirected graph and e be an edge with maximum weight in G. Suppose there is a minimum weight spanning tree in G containing the edge e. Which of the following statements is always TRUE?', 1, 2, 7, 'Gate', 2005, 5, 0, 0),
(75, 'A binary search tree contains the numbers 1, 2, 3, 4, 5, 6, 7, 8. When the tree is traversed in pre-order and the values in each node printed out, the sequence of values obtained is 5, 3, 1, 2, 4, 6, 8, 7. If the tree is traversed in post-order, the sequence obtained would be', 1, 3, 24, 'Gate', 2005, 5, 0, 0),
(76, 'Let G be a directed graph whose vertex set is the set of numbers from 1 to 100. There is an edge from a vertex i to a vertex j iff either j = i + 1 or j = 3i. The minimum number of edges in a path in G from vertex 1 to vertex 100 is', 1, 2, 7, 'Gate', 2005, 5, 0, 0),
(77, 'An array of integers of size n can be converted into a heap by adjusting the heaps rooted at each internal node of the complete binary tree starting at the node ⌊(n - 1) /2⌋, and doing this adjustment up to the root node (root node is at index 0) in the order ⌊(n - 1)/2⌋, ⌊(n - 3)/2⌋, ....., 0. The time required to construct a heap in this manner is', 1, 3, 24, 'Gate', 2004, 5, 0, 0),
(78, 'Which one of the following binary trees has its inorder and preorder traversals as BCAD  and ABCD, respectively?', 1, 3, 24, 'Gate', 2004, 5, 0, 0),
(79, 'Let f(n), g(n) and h(n) be functions defined for positive inter such that f(n) = O(g(n)), g(n) ≠ O(f(n)), g(n) = O(h(n)), and h(n) = O(g(n)). Which one of the following statements is FALSE?', 1, 2, 11, 'Gate', 2004, 5, 0, 0),
(80, 'Consider the undirected graph below:<br/>\r\n<center><img src=\"./image/question/80.jpg\"/></center><br/>\r\n Using Prim\'s algorithm to construct a minimum spanning tree starting with node A, which one of the following sequences of edges represents a possible order in which the edges would be added to construct the minimum spanning tree?', 1, 2, 4, 'Gate', 2004, 5, 0, 0),
(81, 'Consider a list of recursive algorithms and a list of recurrence relations as shown below. Each recurrence relation corresponds to exactly one algorithm and is used to derive the time complexity of the algorithm. <br/>\r\n<center><img src=\"./image/question/81.jpg\"/></center>', 1, 2, 12, 'Gate', 2004, 5, 0, 0),
(82, 'Merge sort uses', 1, 2, 17, 'Gate', 1995, 5, 0, 0),
(83, 'For merging two sorted lists of sizes m and n into a sorted list of size m+n, we required comparisons of', 1, 2, 5, 'Gate', 1995, 5, 0, 0),
(84, '<img src=\"./image/question/84.jpg\"/>', 1, 3, 28, 'Gate', 1995, 5, 0, 0),
(85, '<img src=\"./image/question/85.jpg\"/>', 1, 2, 12, 'Gate', 1995, 5, 0, 0),
(86, 'The recurrence relation that arises in relation with the complexity of binary search is:', 1, 2, 6, 'Gate', 1994, 5, 0, 0),
(87, 'Which of the following algorithm design techniques is used in the quicksort algorithm?', 1, 2, 18, 'Gate', 1994, 5, 0, 0),
(88, 'In which one of the following cases is it possible to obtain different results for call-by reference and call-by-name parameter passing methods?', 1, 3, 29, 'Gate', 1994, 5, 0, 0),
(89, 'Which one of the following statements is false?', 1, 2, 6, 'Gate', 1994, 5, 0, 0),
(90, '<img src=\"./image/question/90.jpg\"/>', 3, 2, 11, 'Gate', 1994, 5, 0, 0),
(91, 'The root directory of a disk should be placed', 1, 1, 30, 'Gate', 1993, 5, 0, 0),
(92, 'Consider a simple connected graph G with n vertices and n-edges (n>2). Then, which of the following statements are true?', 3, 2, 7, 'Gate', 1993, 5, 0, 0),
(93, '<img src=\"./image/question/93.jpg\" />', 3, 2, 11, 'Gate', 1993, 5, 0, 0),
(94, 'Complexity of Kruskal’s algorithm for finding the minimum spanning tree of an undirected graph containing n vertices and m edges if the edges are sorted is __________', 1, 2, 4, 'Gate', 1992, 5, 0, 0),
(95, 'Following algorithm(s) can be used to sort n integers in the range [1...n<sup>3</sup>] in O(n) time  ', 1, 2, 5, 'Gate', 1992, 5, 0, 0),
(96, 'The minimum number of comparisons required to sort 5 elements is _____  ', 2, 2, 5, 'Gate', 1991, 5, 0, 0),
(97, '<img src=\"./image/question/97.jpg\"/>', 2, 2, 4, 'Gate', 1991, 5, 0, 0),
(98, '<img src=\"./image/question/98.jpg\"/>', 3, 2, 4, 'Gate', 1991, 5, 0, 0),
(99, '<img src=\"./image/question/99.jpg\"/>', 1, 3, 28, 'Gate', 1991, 5, 0, 0),
(100, '<img src=\"./image/question/100.jpg\"/>', 1, 2, 12, 'Gate', 1991, 5, 0, 0),
(101, ' <img src=\"./image/question/101.jpg\"/>', 1, 2, 12, 'Gate', 1990, 5, 0, 0),
(102, 'Let T be a full binary tree with 8 leaves. (A full binary tree has every level full). Suppose two leaves a and b of T are chosen uniformly and independently at random. The expected value of the distance between a and b in T (i.e., the number of edges in the unique path between a and b) is (rounded off to 2 decimal places) _____.', 1, 3, 24, 'Gate', 2019, 5, 0, 0),
(103, 'The preorder traversal of a binary search tree is 15, 10, 12, 11, 20, 18, 16, 19.<br/>Which one of the following is the postorder traversal of the tree? ', 1, 3, 21, 'Gate', 2020, 5, 0, 0),
(104, 'Consider a double hashing scheme in which the primary hash function is h1(k)=k mod 23, and the secondary hash function is h2(k)=1 (k mod 19). Assume that the table size is 23. Then the address returned by probe 1 in the probe sequence (assume that the probe sequence begins at probe 0) for key value k=90 is _______. ', 2, 3, 23, 'Gate', 2020, 5, 0, 0),
(105, 'What is the worst case time complexity of inserting n elements into an empty linked list, if the linked list needs to be maintained in sorted order? ', 3, 3, 31, 'Gate', 2020, 5, 0, 0),
(106, 'Consider the following C program.\r\n<pre>\r\n#include\r\nint main () {\r\n   int a [4] [5] = {{1, 2, 3, 4, 5},\r\n   {6, 7, 8, 9, 10},\r\n   {11, 12, 13, 14, 15},\r\n   {16, 17, 18, 19, 20}};\r\n   printf (“%d\\n”, *(* (a+**a+2) +3));\r\n   return (0);\r\n}\r\n</pre>\r\nThe output of the program is _______. ', 2, 7, 26, 'Gate', 2020, 5, 0, 0),
(107, 'What is the worst case time complexity of inserting n<sup>2</sup> elements into an AVL-tree with n elements initially? ', 1, 3, 24, 'Gate', 2020, 5, 0, 0),
(108, 'In a balanced binary search tree with n elements, what is the worst case time complexity of reporting all elements in range [a,b]? Assume that the number of reported elements is k.', 1, 3, 24, 'Gate', 2020, 5, 0, 0),
(109, 'Consider the array representation of a binary min-heap containing 1023 elements. The minimum number of comparisons required to find the maximum in the heap is _______.', 2, 2, 19, 'Gate', 2020, 5, 0, 0),
(110, 'The postorder traversal of a binary tree is 8, 9, 6, 7, 4, 5, 2, 3, 1. The inorder traversal of the same tree is 8, 6, 9, 4, 7, 2, 5, 1, 3. The height of a tree is the length of the longest path from the root to any leaf. The height of the binary tree above is _______.', 2, 3, 24, 'Gate', 2018, 5, 0, 0),
(111, 'A queue is implemented using a non-circular singly linked list. The queue has a head pointer and a tail pointer, as shown in the figure. Let n denote the number of nodes in the queue. Let \'enqueue\' be implemented by inserting a new node at the head, and \'dequeue\' be implemented by deletion of a node from the tail.<br/> <center><img src=\"./image/question/111.jpg\"/></center><br/> Which one of the following is the time complexity of the most time-efficient implementation of \'enqueue\' and \'dequeue, respectively, for this data structure?', 1, 3, 32, 'Gate', 2018, 5, 0, 0),
(112, '<p align=\"Justify\"> Let G be a simple undirected graph. Let T<sub>D</sub>&nbsp;be a depth first search tree of G. Let T<sub>B</sub> be a breadth first search tree of G. Consider the following statements.</p> <ul> (I) No edge of G is a cross edge with respect to T<sub>D</sub>.<br>&nbsp;&nbsp;&nbsp; (A cross edge in G is between two nodes neither of which is an ancestor of the other in T<sub>D</sub>.)<br> (II) For every edge (u,v) of G, if u is at depth i and v is at depth j in T<sub>B</sub>, then ∣i−j∣ = 1. </ul> <p>Which of the statements above must necessarily be true?</p>', 1, 3, 7, 'Gate', 2018, 5, 0, 0),
(113, 'The number of possible min-heaps containing each value from {1, 2, 3, 4, 5, 6, 7} exactly once is ___________.', 2, 2, 19, 'Gate', 2018, 5, 0, 0),
(114, '&nbsp;  <p>Consider the C code fragment given below.</p>  <pre>\r\ntypedef struct node&nbsp;&nbsp; {\r\n     int data;\r\n     node*&nbsp;next;\r\n}&nbsp;  node;  \r\n\r\nvoid join(node* m, node* n)&nbsp;&nbsp; {\r\n     node*&nbsp; p = n;\r\n     while(p→next&nbsp; !=NULL)&nbsp;&nbsp;&nbsp; {\r\n         p = p→next;\r\n     }\r\n     p→next=m;\r\n} \r\n</pre> <p>Assuming that m and n point to valid NULL-terminated linked lists, invocation of join will</p>  &nbsp;', 1, 7, 26, 'Gate', 2017, 5, 0, 0),
(115, 'Let T be a tree with 10 vertices. The sum of the degrees of all the vertices in T is _________.', 2, 3, 24, 'Gate', 2017, 5, 0, 0),
(116, '<p align=\"Justify\">A circular queue has been implemented using a singly linked list where each node consists of a value and a single pointer pointing to the next node. We maintain exactly two external pointers <strong>FRONT</strong> and <strong>REAR</strong> pointing to the front node and the rear node of the queue, respectively. Which of the following statements is/are CORRECT for such a circular queue, so that insertion and deletion operations can be performed in <em>O(1)</em> time?</p><ul>I. Next pointer of front node points to the rear node.<br>II. Next pointer of rear node points to the front node.</ul>', 1, 3, 32, 'Gate', 2017, 5, 0, 0),
(117, 'The Breadth First Search (BFS) algorithm has been implemented using the queue data structure. Which one of the following is a possible order of visiting the nodes in the graph below?<br/><center><img src=\"./image/question/117.jpg\"/></center>', 1, 3, 7, 'Gate', 2017, 5, 0, 0),
(118, 'The pre-order traversal of a binary search tree is given by 12, 8, 6, 2, 7, 9, 10, 16, 15, 19, 17, 20. Then the post-order traversal of this tree is:', 1, 3, 21, 'Gate', 2017, 5, 0, 0),
(119, 'A queue is implemented using an array such that ENQUEUE and DEQUEUE operations are performed efﬁciently. Which one of the following statements is CORRECT (n refers to the number of items in the queue)?', 1, 3, 32, 'Gate', 2017, 5, 0, 0),
(120, 'Consider the following directed graph:<br/><center><img src=\"./image/question/120.jpg\"/></center><br/>The number of different topological orderings of the vertices of the graph is __________.', 2, 3, 7, 'Gate', 2017, 5, 0, 0),
(121, '<p align=\"Justify\">Let <em>G</em> be a weighted connected undirected graph with distinct positive edge weights. If every edge weight is increased by the same value, then which of the following statements is/are <strong>TRUE</strong>?</p><ul>P: Minimum spanning tree of <em>G</em> does not change<br>Q: Shortest path between any pair of vertices does not change</ul>', 1, 3, 7, 'Gate', 2016, 5, 0, 0),
(122, '<p align=\"Justify\">An operator <em>delete(i)</em> for a binary heap data structure is to be designed to delete the item in the <em>i</em>-th node. Assume that the heap is implemented in an array and <em>i</em> refers to the <em>i</em>-th index of the array. If the heap tree has depth <em>d</em> (number of edges on the path from the root to the farthest leaf), then what is the time complexity to re-ﬁx the heap efﬁciently after the removal of the element?</p>', 1, 2, 19, 'Gate', 2016, 5, 0, 0),
(123, '<p align=\"Justify\">Consider the weighted undirected graph with 4 vertices, where the weight of edge {<em>i,j</em>} is given by the entry <em>W<sub>ij</sub></em> &nbsp;in the matrix <em>W</em>.</p>\r\n\r\n<center><img  src=\"./image/question/123.jpg\"/></center>\r\n\r\n<p align=\"Justify\">The largest possible integer value of <em>x</em>, for which at least one shortest path between some pair of vertices will contain the edge with weight <em>x</em> is _________.</p>\r\n\r\n&nbsp;', 2, 3, 7, 'Gate', 2016, 5, 0, 0),
(124, 'Let Q denote a queue containing sixteen numbers and S be an empty stack. Head(Q) returns the element at the head of the queue Q without removing it from Q. Similarly Top(S) returns the element at the top of S without removing it from S. Consider the algorithm given below.<br/><center><img src=\"./image/question/124.jpg\"/></center><br/>The maximum possible number of iterations of the while loop in the algorithm is _________.', 2, 3, 32, 'Gate', 2016, 5, 0, 0),
(125, 'Breadth First Search (BFS) is started on a binary tree beginning from the root vertex. There is a vertex t at a distance four from the root. If t is the n-th vertex in this BFS traversal, then the maximum possible value of n is _________.', 2, 3, 7, 'Gate', 2016, 5, 0, 0),
(126, '<p align=\"Justify\"><em>N</em> items are stored in a sorted doubly linked list. For a delete operation, a pointer is provided to the record to be deleted. For a <em>decrease-key</em> operation, a pointer is provided to the record on which the operation is to be performed.</p><p align=\"Justify\">An algorithm performs the following operations on the list in this order: Θ(<em>N</em>)', 1, 3, 31, 'Gate', 2016, 5, 0, 0),
(127, 'In an adjacency list representation of an undirected simple graph G = (V,E), each edge (u,v) has two adjacency list entries: [v] in the adjacency list of u, and [u] in the adjacency list of v. These are called twins of each other. A twin pointer is a pointer from an adjacency list entry to its twin. If |E| = m and |V| = n, and the memory size is not a constraint, what is the time complexity of the most efﬁcient algorithm to set the twin pointer in each entry in each adjacency list?', 1, 3, 7, 'Gate', 2016, 5, 0, 0),
(128, 'A complete binary min-heap is made by including each integer in [1, 1023] exactly once. The depth of a node in the heap is the length of the path from the root of the heap to that node. Thus, the root is at depth 0. The maximum depth at which integer 9 can appear is _________.', 2, 2, 19, 'Gate', 2016, 5, 0, 0),
(129, '<p align=\"Justify\">Consider the following New-order strategy for traversing a binary tree:</p><ul> <li>Visit the root;</li> <li>Visit the right subtree using New-order;</li> <li>Visit the left subtree using New-order;</li></ul><p align=\"Justify\">The New-order traversal of the expression tree corresponding to the reverse polish expression<br/>\r\n3 4 * 5 - 2 ^ 6 7 * 1 + - is given by:', 1, 3, 28, 'Gate', 2016, 5, 0, 0),
(130, '<p align=\"Justify\">The number of ways in which the numbers 1, 2, 3, 4, 5, 6, 7 can be inserted in an empty binary search tree, such that the resulting tree has height 6, is _________.</p><em>Note: The height of a tree with a single node is 0.</em>', 2, 3, 24, 'Gate', 2016, 5, 0, 0),
(131, 'The height of a tree is the length of the longest root-to-leaf path in it. The maximum and minimum number of nodes in a binary tree of height 5 are ', 1, 3, 24, 'Gate', 2015, 5, 0, 0),
(132, 'Consider a max heap, represented by the array: 40, 30, 20, 10, 15, 16, 17, 8, 4. <br/><center><img src=\"./image/question/132.jpg\"/></center><br/>now consider that a value 35 is inserted into this heap. After insertion, the new heap is', 1, 2, 19, 'Gate', 2015, 5, 0, 0),
(133, 'A binary tree T has 20 leaves. The number of nodes in T having two children is _________. ', 2, 3, 24, 'Gate', 2015, 5, 0, 0),
(134, ' Consider a complete binary tree where the left and the right subtrees of the root are max-heaps. The lower bound for the number of operations to convert the tree to a heap is  ', 1, 2, 19, 'Gate', 2015, 5, 0, 0),
(135, 'Which one of the following hash functions on integers will distribute keys most uniformly over 10 buckets numbered 0 to 9 for i ranging from 0 to 2020?', 1, 3, 23, 'Gate', 2015, 5, 0, 0),
(136, ' Assume that the bandwidth for a TCP connection is 1048560 bits/sec. Let  α be the value of RTT in milliseconds. (rounded off to the nearest integer) after which the TCP window scale option is needed. Let β be the maximum possible window size the window scale option. Then the values of α and β are', 1, 8, 33, 'Gate', 2015, 5, 0, 0),
(137, '<img src=\"./image/question/137.jpg\"/>', 2, 3, 34, 'Gate', 2015, 5, 0, 0),
(138, 'Given a hash table T with 25 slots that stores 2000 elements, the load factor α for T is ___________. ', 2, 3, 23, 'Gate', 2015, 5, 0, 0),
(139, 'Consider the following array of elements. 〈89, 19, 50, 17, 12, 15, 2, 5, 7, 11, 6, 9, 100〉. The minimum number of interchanges needed to convert it into a max-heap is', 2, 2, 19, 'Gate', 2015, 5, 0, 0),
(140, 'While inserting the elements 71, 65, 84, 69, 67, 83 in an empty binary search tree (BST) in the sequence shown, the element in the lowest level is ', 2, 3, 24, 'Gate', 2015, 5, 0, 0),
(141, 'The result evaluating the postfix expression  10  5 + 60 6 /  * 8 -   is ', 2, 3, 28, 'Gate', 2015, 5, 0, 0),
(142, 'Consider a binary tree T that has 200 leaf nodes. Then, the number of nodes in T that have exactly two children are ____ . ', 2, 3, 24, 'Gate', 2015, 5, 0, 0),
(143, 'Let G be a graph with n vertices and m edges. What is the tightest upper bound on the running time of Depth First Search on G, when G is represented as an adjacency matrix?', 1, 3, 7, 'Gate', 2014, 5, 0, 0),
(144, 'Consider a rooted n node binary tree represented using pointers. The best upper bound on the time required to determine the number of subtrees having exactly 4 nodes is O(n<sup>a</sup>log<sup>b</sup>n). Then the value of a+10b is ________.', 2, 3, 11, 'Gate', 2014, 5, 0, 0),
(145, 'Consider the directed graph given below.<br/><center><img src=\"./image/question/145.jpg\"/></center><br/>\r\n Which one of the following is TRUE?  ', 1, 2, 5, 'Gate', 2014, 5, 0, 0),
(146, 'Let P be a quicksort program to sort numbers in ascending order using the first elements as the pivot. Let t<sub>1</sub> and t<sub>2</sub> be the number of comparisons made by P for the inputs [1 2 3 4 5] and [4 1 5 3 2] respectively. Which one of the following holds?', 1, 2, 18, 'Gate', 2014, 5, 0, 0),
(147, 'Consider a hash table with 9 slots.  The hash function is h(k) = k mod 9.  The collisions are resolved by chaining.  The following 9 keys are inserted in the order: 5, 28, 19, 15, 20, 33, 12, 17, 10.  The maximum, minimum, and average chain lengths in the hash table, respectively, are', 1, 3, 23, 'Gate', 2014, 5, 0, 0),
(148, 'Consider the following C function in which size is the number of elements in the array E: The value returned by the function MyX is the <br/><pre>\r\nint MyX(int *E, unsigned int size){\r\n    int Y = 0;\r\n    int Z;\r\n    int i, j, k;\r\n    for(i = 0; i < size; i++)\r\n        Y = Y + E[i];\r\n    for(i = 0; i < size; i++)\r\n        for(j = i; j < size; j++)\r\n        {\r\n            Z = 0;\r\n            for(k = i; k <= j; k++)\r\n                Z = Z + E[k];\r\n            if (Z > Y)\r\n                Y = Z;\r\n        }\r\n    return Y;\r\n}\r\n</pre>', 1, 7, 26, 'Gate', 2014, 5, 0, 0),
(149, 'Consider the following pseudo code. What is the total number of multiplications to be performed?\r\n<pre>\r\nD = 2\r\nfor i = 1 to n do\r\n   for j = i to n do\r\n      for k = j + 1 to n do\r\n           D = D * 3 \r\n</pre>', 1, 2, 11, 'Gate', 2014, 5, 0, 0),
(150, 'Consider a 6-stage instruction pipeline, where all stages are perfectly balanced. Assume that there is no cycle-time overhead of pipelining. When an application is executing on this 6-stage pipeline, the speedup achieved with respect to non-pipelined execution if 25% of the instructions incur 2 pipeline stall cycles is ______________________.', 2, 4, 35, 'Gate', 2014, 5, 0, 0),
(151, 'An access sequence of cache block addresses is of length N and contains n unique block addresses. The number of unique block addresses between two consecutive accesses to the same block address is bounded above by k. What is the miss ratio if the access sequence is passed through a cache of associativity A≥k exercising least-recently-used replacement policy?', 1, 4, 36, 'Gate', 2014, 5, 0, 0),
(152, 'A priority queue is implemented as a Max-Heap. Initially, it has 5 elements. The level-order traversal of the heap is: 10, 8, 5, 3, 2. Two new elements 1 and 7 are inserted into the heap in that order. The level-order traversal of the heap after the insertion of the elements is:', 1, 2, 19, 'Gate', 2014, 5, 0, 0),
(153, 'Consider the tree arcs of a BFS traversal from a source node W in an unweighted, connected, undirected graph.  The tree T formed by the tree arcs is a data structure for computing', 1, 3, 7, 'Gate', 2014, 5, 0, 0),
(154, 'The worst case running time to search for an element in a balanced binary search tree with n2<sup>n</sup> elements is', 1, 3, 24, 'Gate', 2012, 5, 0, 0),
(155, 'The recurrence relation capturing the optimal execution time of the Towers of Hanoi problem with n discs is', 1, 2, 8, 'Gate', 2012, 5, 0, 0),
(156, 'Suppose a circular queue of capacity (n - 1) elements is implemented with an array of n elements. Assume that the insertion and deletion operations are carried out using REAR and FRONT as array index variables, respectively. Initially, REAR = FRONT = 0. The conditions to detect queue full and queue empty are', 1, 3, 32, 'Gate', 2012, 5, 0, 0),
(157, 'The height of a tree is defined as the number of edges on the longest path in the tree. The function shown in the pseudocode below is invoked as height (root) to compute the height of a binary tree rooted at the tree pointer root. <br/><img src=\"./image/question/157.jpg\"/><br/>The appropriate expression for the two boxes B1 and B2 are', 1, 3, 24, 'Gate', 2012, 5, 0, 0),
(158, 'A max-heap is a heap where the value of each parent is greater than or equal to the value of its children. Which of the following is a max-heap?  ', 1, 2, 19, 'Gate', 2011, 5, 0, 0),
(159, 'We are given a set of n distinct elements and an unlabeled binary tree with n nodes. In how many ways can we populate the tree with the given set so that it becomes a binary search tree?', 1, 3, 24, 'Gate', 2011, 5, 0, 0),
(160, 'In a binary tree with n nodes, every node has an odd number of descendants. Every node is considered to be its own descendant. What is the number of nodes in the tree that have exactly one child? ', 1, 3, 24, 'Gate', 2010, 5, 0, 0),
(161, 'The following C function takes a simply-linked list as input argument. It modifies the list by moving the last element to the front of the list and returns the modified list. Some part of the code is left blank. <br/>\r\n<pre>\r\ntypedef struct node{\r\n  int value;\r\n  struct node *next;\r\n}Node;\r\nNode *move_to_front(Node *head){\r\n  Node *p, *q;\r\n  if ((head == NULL: || (head->next == NULL))\r\n    return head;\r\n  q = NULL;\r\n  p = head;\r\n  while (p-> next !=NULL)\r\n  {\r\n    q = p;\r\n    p = p->next;\r\n  }\r\n  _______________________________\r\n  return head;\r\n}\r\n</pre>', 1, 3, 31, 'Gate', 2010, 5, 0, 0),
(162, 'Consider a complete undirected graph with vertex set {0, 1, 2, 3, 4}. Entry Wij in the matrix W below is the weight of the edge {i, j}.<br/><center><img src=\"./image/question/162.jpg\"/></center><br/>What is the minimum possible weight of a spanning tree T in this graph such that vertex 0 is a leaf node in the tree T?', 2, 3, 9, 'Gate', 2010, 5, 0, 0),
(163, '<img src=\"./image/question/163.jpg\"/><br/>', 1, 3, 23, 'Gate', 2010, 5, 0, 0),
(164, 'A hash table of length 10 uses open addressing with hash function h(k)=k mod 10, and linear probing. After inserting 6 values into an empty hash table, the table is as shown below.<br/><center><img src=\"./image/question/164.jpg\"/></center><br/>How many different insertion sequences of the key values using the same hash function and linear probing will result in the hash table shown above?', 2, 3, 23, 'Gate', 2010, 5, 0, 0),
(165, 'The keys 12, 18, 13, 2, 3, 23, 5 and 15 are inserted into an initially empty hash table of length 10 using open addressing with hash function h(k) = k mod 10 and linear probing. What is the resultant hash table?<br/>', 1, 3, 23, 'Gate', 2009, 5, 0, 0),
(166, 'What is the maximum height of any AVL-tree with 7 nodes? Assume that the height of a tree with a single node is 0.', 2, 3, 24, 'Gate', 2009, 5, 0, 0),
(167, 'Consider a binary max-heap implemented using an array. Which one of the following array represents a binary max-heap?', 1, 2, 19, 'Gate', 2009, 5, 0, 0),
(168, 'Consider a binary max-heap implemented using an array. Which one of the following array represents a binary max-heap?Ans. {25,14,16,13,10,8,12}</br>\r\nConsider a binary max-heap implemented using an array. What is the content of the array after two delete operations on the correct answer to the previous question?    ', 1, 2, 19, 'Gate', 2009, 5, 0, 0),
(169, 'The most efficient algorithm for finding the number of connected components in an undirected graph on n vertices and m edges has time complexity', 1, 3, 7, 'Gate', 2008, 5, 0, 0),
(170, 'Given f<sub>1</sub>, f<sub>3</sub> and f in canonical sum of products form (in decimal) for the circuit <br/><img src=\"./image/question/170.jpg\"/>', 1, 9, 37, 'Gate', 2008, 5, 0, 0),
(171, 'The Breadth First Search algorithm has been implemented using the queue data structure. One possible order of visiting the nodes of the following graph is  <br/><center><img src=\"./image/question/171.jpg\"/></center>', 1, 3, 7, 'Gate', 2008, 5, 0, 0),
(172, 'G is a graph on n vertices and 2n – 2 edges. The edges of G can be partitioned into two edge-disjoint spanning trees. Which of the following is NOT true for G?', 1, 3, 7, 'Gate', 2008, 5, 0, 0),
(173, 'You are given the postorder traversal, P, of a binary search tree on the n elements 1, 2, ..., n. You have to determine the unique binary search tree that has P as its postorder traversal. What is the time complexity of the most efficient algorithm for doing this?', 1, 3, 22, 'Gate', 2008, 5, 0, 0),
(174, 'We have a binary heap on n elements and wish to insert n more elements (not necessarily one after another) into this heap. The total time required for this is', 1, 2, 19, 'Gate', 2008, 5, 0, 0),
(175, 'The following C function takes a single-linked list of integers as a parameter and rearranges the elements of the list. The function is called with the list containing the integers 1,2,3,4,5,6,7 in the given order. What will be the contents of the list after the function completes execution? \r\n<pre>\r\nstruct node\r\n{\r\n int value;\r\n struct node * next; \r\n};\r\n\r\nVoid rearrange (struct node * list){\r\n struct node * p, * q;\r\n int temp;\r\n if (!list || !list - > next)\r\n   return;\r\n p = list;\r\n q = list - > next;\r\n while (q){\r\n   temp = p- > value;\r\n   p- > value = q- > value;\r\n   q- > value = temp;\r\n   p = q- > next;\r\n   q = p ? p- > next : 0;\r\n }\r\n}\r\n</pre>', 1, 3, 31, 'Gate', 2008, 5, 0, 0),
(176, 'Which of the following is TRUE?', 1, 3, 24, 'Gate', 2008, 5, 0, 0),
(177, 'The following three are known to be the preorder, inorder and postorder sequences of a binary tree. But it is not known which is which. <br/>\r\n1. MBCAFHPYK<br/>\r\n2. KAMCBYPFH<br/>\r\n3. MABCKYFPH<br/>\r\n Pick the true statement from the following.', 1, 3, 24, 'Gate', 2008, 5, 0, 0);
INSERT INTO `question` (`q_id`, `question`, `type`, `sub_id`, `topic_id`, `source`, `year`, `life`, `attampt`, `correct`) VALUES
(178, 'Consider the following sequence of nodes for the undirected graph given below.<br/> A Depth First Search (DFS) is started at node a. The nodes are listed in the order they are first visited. Which all of the above is (are) possible output(s)? <br/><center><img src=\"./image/question/178.0.jpg\"/></center>', 3, 3, 7, 'Gate', 2008, 5, 0, 0),
(179, 'Consider a hash table of size 11 that uses open addressing with linear probing. Let h(k) = k mod 11 be the hash function used. A sequence of records with keys 43 36 92 87 11 4 71 13 14 is inserted into an initially empty hash table, the bins of which are indexed from zero to ten. What is the index of the bin into which the last record is inserted?', 2, 3, 23, 'Gate', 2008, 5, 0, 0),
(180, 'A Binary Search Tree (BST) stores values in the range 37 to 573. Consider the following sequence of keys.<br/>Suppose the BST has been unsuccessfully searched for key 273. Which all of the above sequences list nodes in the order in which we could have encountered them in the search?', 3, 3, 23, 'Gate', 2008, 5, 0, 0),
(181, 'A Binary Search Tree (BST) stores values in the range 37 to 573. Consider the following sequence of keys.<br/> I. 81, 537, 102, 439, 285, 376, 305<br/> II. 52, 97, 121, 195, 242, 381, 472 <br/>III. 142, 248, 520, 386, 345, 270, 307<br/> IV. 550, 149, 507, 395, 463, 402, 270<br/> Which of the following statements is TRUE?', 1, 3, 22, 'Gate', 2008, 5, 0, 0),
(182, 'How many distinct BSTs can be constructed with 3 distinct keys', 2, 3, 22, 'Gate', 2008, 5, 0, 0),
(183, 'A binary tree with n > 1 nodes has n<sub>1</sub>, n<sub>2</sub> and n<sub>3</sub> nodes of degree one, two and three respectively. The degree of a node is defined as the number of its neighbors. n<sub>3</sub> can be expressed as  ', 1, 3, 24, 'Gate', 2008, 5, 0, 0),
(184, 'A binary tree with n > 1 nodes has n<sub>1</sub>, n<sub>2</sub> and n<sub>3</sub> nodes of degree one, two and three respectively. The degree of a node is defined as the number of its neighbors. Starting with the above tree, while there remains a node v of degree two in the tree, add an edge between the two neighbors of v and then remove v from the tree. How many edges will remain at the end of the process?  ', 1, 3, 24, 'Gate', 2008, 5, 0, 0),
(185, 'Consider the DAG with Consider V = {1, 2, 3, 4, 5, 6}, shown below. Which of the following is a topological ordering? <br/><center><img src=\"./image/question/185.jpg\"/></center>', 3, 2, 5, 'Gate', 2007, 5, 0, 0),
(186, 'The height of a binary tree is the maximum number of edges in any root to leaf path. The maximum number of nodes in a binary tree of height h is:', 1, 3, 24, 'Gate', 2007, 5, 0, 0),
(187, 'The maximum number of binary trees that can be formed with three unlabeled nodes is:', 2, 3, 24, 'Gate', 2007, 5, 0, 0),
(188, 'The following postfix expression with single digit operands is evaluated using a stack:<br/><pre>8 2 3 ^ / 2 3 * + 5 1 * -</pre><br/>Note that ^ is the exponentiation operator. The top two elements of the stack after the first * is evaluated are:', 3, 3, 28, 'Gate', 2007, 5, 0, 0),
(189, 'The inorder and preorder traversal of a binary tree are d b e a f c g and a b d e c f g, respectively. The postorder traversal of the binary tree is:', 1, 3, 21, 'Gate', 2007, 5, 0, 0),
(190, 'Consider a hash table of size seven, with starting index zero, and a hash function (3x + 4) mod 7. Assuming the hash table is initially empty, which of the following is the contents of the table when the sequence 1, 3, 8, 10 is inserted into the table using closed hashing? Note that ‘_’ denotes an empty location in the table.', 1, 3, 23, 'Gate', 2007, 5, 0, 0),
(191, 'A complete n-ary tree is a tree in which each node has n children or no children. Let I be the number of internal nodes and L be the number of leaves in a complete n-ary tree. If L = 41, and I = 10, what is the value of n?', 2, 3, 24, 'Gate', 2007, 5, 0, 0),
(192, 'Consider the following C program segment where CellNode represents a node in a binary tree:\r\n<pre>\r\nstruct CellNode\r\n{\r\n  struct CellNOde *leftChild;\r\n  int element;\r\n  struct CellNode *rightChild;\r\n};\r\nint GetValue(struct CellNode *ptr)\r\n{\r\n  int value = 0;\r\n  if (ptr != NULL)\r\n  {\r\n   if ((ptr->leftChild == NULL) &&\r\n        (ptr->rightChild == NULL))\r\n      value = 1;\r\n   else\r\n      value = value + GetValue(ptr->leftChild)\r\n                   + GetValue(ptr->rightChild);\r\n  }\r\n  return(value);\r\n}\r\n</pre>\r\nThe value returned by GetValue() when a pointer to the root of a binary tree is passed as its argument is:\r\n', 1, 3, 24, 'Gate', 2007, 5, 0, 0),
(193, 'Consider the process of inserting an element into a Max Heap, where the Max Heap is represented by an array. Suppose we perform a binary search on the path from the new leaf to the root to find the position for the newly inserted element, the number of comparisons performed is:  ', 1, 2, 19, 'Gate', 2007, 5, 0, 0),
(194, 'A depth-first search is performed on a directed acyclic graph. Let d[u] denote the time at which vertex u is visited for the first time and f[u] the time at which the dfs call to the vertex u terminates. Which of the following statements is always true for all edges (u, v) in the graph ?', 1, 3, 7, 'Gate', 2007, 5, 0, 0),
(195, 'When searching for the key value 60 in a binary search tree, nodes containing the key values 10, 20, 40, 50, 70 80, 90 are traversed, not necessarily in the order given. How many different orders are possible in which these key values can occur on the search path from the root to the node containing the value 60?', 2, 3, 24, 'Gate', 2007, 5, 0, 0),
(196, 'Suppose you are given an implementation of a queue of integers. The operations that can be performed on the queue are:\r\ni. isEmpty (Q) — returns true if the queue is empty, false otherwise.\r\nii. delete (Q) — deletes the element at the front of the queue and returns its value.\r\niii. insert (Q, i) — inserts the integer i at the rear of the queue.\r\nConsider the following function:\r\n<pre> void f (queue Q) {\r\nint i ;\r\nif (!isEmpty(Q)) {\r\n   i = delete(Q);\r\n   f(Q);\r\n   insert(Q, i);\r\n  }\r\n}\r\n</pre>\r\nWhat operation is performed by the above function f ?', 1, 3, 32, 'Gate', 2007, 5, 0, 0),
(197, 'Consider the following C program:\r\n<pre>   \r\n           #define EOF -1\r\n           void push (int); /* push the argument on the stack */\r\n           int pop  (void); /* pop the top of the stack */\r\n           void flagError ();\r\n           int main ()\r\n          {         int c, m, n, r;\r\n                     while ((c = getchar ()) != EOF)\r\n                    { if  (isdigit (c) )\r\n                               push (c);\r\n                     else if ((c == \'+\') || (c == \'*\'))\r\n                    {          m = pop ();\r\n                                n = pop ();\r\n                                r = (c == \'+\') ? n + m : n*m;\r\n                                push (r);\r\n                      }\r\n                      else if (c != \' \')\r\n                               flagError ();\r\n             }\r\n              printf(\"% c\", pop ());\r\n        }\r\n</pre>\r\nWhat is the output of the program for the following input ? 5 2 * 3 3 2 + * +', 2, 3, 28, 'Gate', 2007, 5, 0, 0),
(198, 'A scheme for storing binary trees in an array X is as follows. Indexing of X starts at 1 instead of 0. The root is stored at X[1]. For a node stored at X[i], the left child, if any, is stored in X[2i] and the right child, if any, in X[2i+1]. To be able to store any binary tree on n vertices the minimum size of X should be.', 1, 3, 24, 'Gate', 2006, 5, 0, 0),
(199, 'In a binary max heap containing n numbers, the smallest element can be found in time', 1, 2, 19, 'Gate', 2006, 5, 0, 0),
(200, 'A 3-ary max heap is like a binary max heap, but instead of 2 children, nodes have 3 children. A 3-ary heap can be represented by an array as follows: The root is stored in the first location, a[0], nodes in the next level, from left to right, is stored from a[1] to a[3]. The nodes from the second level of the tree from left to right are stored from a[4] location onward. An item x can be inserted into a 3-ary heap containing n items by placing x in the location a[n] and pushing it up the tree to satisfy the heap property. Suppose the elements 7, 2, 10 and 4 are inserted, in that order, into the valid 3- ary max heap found in the above question, Which one of the following is the sequence of items in the array representing the resultant heap?', 1, 2, 19, 'Gate', 2006, 5, 0, 0),
(201, 'A 3-ary max heap is like a binary max heap, but instead of 2 children, nodes have 3 children. A 3-ary heap can be represented by an array as follows: The root is stored in the first location, a[0], nodes in the next level, from left to right, is stored from a[1] to a[3]. The nodes from the second level of the tree from left to right are stored from a[4] location onward. An item x can be inserted into a 3-ary heap containing n items by placing x in the location a[n] and pushing it up the tree to satisfy the heap property. Which one of the following is a valid sequence of elements in an array representing 3-ary max heap?', 1, 2, 19, 'Gate', 2006, 5, 0, 0),
(202, 'Let T be a depth first search tree in an undirected graph G. Vertices u and n are leaves of this tree T. The degrees of both u and v in G are at least 2. Which one of the following statements is true?', 1, 3, 7, 'Gate', 2006, 5, 0, 0),
(203, 'An implementation of a queue Q, using two stacks S1 and S2, is given below:\r\n<pre>\r\n\r\nvoid insert(Q, x) {\r\n   push (S1, x);\r\n}\r\n \r\nvoid delete(Q){\r\n   if(stack-empty(S2)) then\r\n      if(stack-empty(S1)) then {\r\n          print(“Q is empty”);\r\n          return;\r\n      }\r\n      else while (!(stack-empty(S1))){\r\n          x=pop(S1);\r\n          push(S2,x);\r\n      }\r\n   x=pop(S2);\r\n}\r\n</pre>\r\nLet n insert and m (<=n) delete operations be performed in an arbitrary order on an empty queue Q. Let x and y be the number of push and pop operations performed respectively in the process. Which one of the following is true for all m and n?\r\n', 1, 3, 28, 'Gate', 2006, 5, 0, 0),
(204, 'In a binary tree, the number of internal nodes of degree 1 is 5, and the number of internal nodes of degree 2 is 10. The number of leaf nodes in the binary tree is', 2, 3, 24, 'Gate', 2006, 5, 0, 0),
(205, 'If all the edge weights of an undirected graph are positive, then any subset of edges that connects all the vertices and has minimum total weight is a  ', 1, 3, 24, 'Gate', 2006, 5, 0, 0),
(206, 'Which of the following sequences of array elements forms a heap?', 1, 2, 19, 'Gate', 2006, 5, 0, 0),
(207, 'Suppose that we have numbers between 1 and 100 in a binary search tree and want to search for the number 55. Which of the following sequences CANNOT be the sequence of nodes examined?', 1, 3, 24, 'Gate', 2006, 5, 0, 0),
(208, 'Which of the following is the correct decomposition of the directed graph given below into its strongly connected components? <br/><center><img src=\"./image/question/208.jpg\"/></center>', 1, 3, 7, 'Gate', 2006, 5, 0, 0),
(209, 'Consider the depth-first-search of an undirected graph with 3 vertices P, Q, and R. Let discovery time d(u) represent the time instant when the vertex u is first visited, and finish time f(u) represent the time instant when the vertex u is last visited. Given that d(P) = 5 units f(P) = 12 units d(Q) = 6 units f(Q) = 10 units d(R) = 14 unit f(R) = 18 units.<br/>which one of the following statements is TRUE about the graph  ', 1, 3, 7, 'Gate', 2006, 5, 0, 0),
(210, 'An array X of n distinct integers is interpreted as a complete binary tree. The index of the first element of the array is 0. The index of the parent of element X[i],i≠0 is? ', 1, 3, 24, 'Gate', 2006, 5, 0, 0),
(211, 'An array X of n distinct integers is interpreted as a complete binary tree. The index of the first element of the array is 0. If only the root node does not satisfy the heap property, the algorithm to convert the complete binary tree into a heap has the best asymptotic time complexity of ', 1, 3, 24, 'Gate', 2006, 5, 0, 0),
(212, 'An array X of n distinct integers is interpreted as a complete binary tree. The index of the first element of the array is 0. If the root node is at level 0, the level of element X[i], i ≠ 0, is', 1, 3, 24, 'Gate', 2006, 5, 0, 0),
(213, 'An Abstract Data Type (ADT) is:', 1, 3, 38, 'Gate', 2005, 5, 0, 0),
(214, 'A program P reads in 500 integers in the range [0, 100] representing the scores of 500 students. It then prints the frequency of each score above 50. What would be the best way for P to store the frequencies?', 1, 3, 34, 'Gate', 2005, 5, 0, 0),
(215, 'An undirected graph C has n nodes. Its adjacency matrix is given by an n × n square matrix whose (i) diagonal elements are 0\'s and (ii) non-diagonal elements are l\'s. Which one of the following is TRUE?', 1, 3, 7, 'Gate', 2005, 5, 0, 0),
(216, 'Let s and t be two vertices in a undirected graph G(V, E) having distinct positive edge weights. Let [X, Y] be a partition of V such that s ∈ X and t ∈ Y. Consider the edge e having the minimum weight amongst all those edges that have one vertex in X and one vertex in Y The edge e must definitely belong to:', 1, 3, 7, 'Gate', 2005, 5, 0, 0),
(217, 'Let s and t be two vertices in a undirected graph G(V, E) having distinct positive edge weights. Let [X, Y] be a partition of V such that s ∈ X and t ∈ Y. Consider the edge e having the minimum weight amongst all those edges that have one vertex in X and one vertex in Y. Let the weight of an edge e denote the congestion on that edge. The congestion on a path is defined to be the maximum of the congestions on the edges of the path. We wish to find the path from s to t having minimum congestion. Which one of the following paths is always such a path of minimum congestion?', 1, 3, 7, 'Gate', 2005, 5, 0, 0),
(218, 'In a complete k-ary tree, every internal node has exactly k children. The number of leaves in such a tree with n internal nodes is:', 1, 3, 24, 'Gate', 2005, 5, 0, 0),
(219, 'How many distinct binary search trees can be created out of 4 distinct keys?', 2, 3, 24, 'Gate', 2005, 5, 0, 0),
(220, 'A Priority-Queue is implemented as a Max-Heap. Initially, it has 5 elements. The level-order traversal of the heap is given below: 10, 8, 5, 3, 2 Two new elements ”1‘ and ”7‘ are inserted in the heap in that order. The level-order traversal of the heap after the insertion of the elements is:  ', 1, 3, 32, 'Gate', 2005, 5, 0, 0),
(221, 'Postorder traversal of a given binary search tree T produces the following sequence of keys 10, 9, 23, 22, 27, 25, 15, 50, 95, 60, 40, 29 Which one of the following sequences of keys can be the result of an inorder traversal of the tree T?', 1, 3, 24, 'Gate', 2005, 5, 0, 0),
(222, 'A single array A[1..MAXSIZE] is used to implement two stacks. The two stacks grow from opposite ends of the array. Variables top1 and top2 (topl < top2) point to the location of the topmost element in each of the stacks. If the space is to be used efficiently, the condition for “stack full” is', 1, 3, 28, 'Gate', 2004, 5, 0, 0),
(223, 'The following numbers are inserted into an empty binary search tree in the given order: 10, 1, 3, 5, 15, 12, 16. What is the height of the binary search tree (the height is the maximum distance of a leaf node from the root)?', 2, 3, 24, 'Gate', 2004, 5, 0, 0),
(224, 'The best data structure to check whether an arithmetic expression has balanced parentheses is a', 1, 3, 28, 'Gate', 2004, 5, 0, 0),
(225, 'Level order traversal of a rooted tree can be done by starting from the root and performing', 1, 3, 7, 'Gate', 2004, 5, 0, 0),
(226, 'Given the following input (4322, 1334, 1471, 9679, 1989, 6171, 4199) and the hash function x mod 10, which of the following statements are true?', 3, 3, 23, 'Gate', 2004, 5, 0, 0),
(227, 'Consider the lavel sequence obtained by the following pairs of traverls on a labeled binary tree. Which of these pairs identify a tree uniquely?', 3, 3, 24, 'Gate', 2004, 5, 0, 0),
(228, '<img src=\"./image/question/128.jpg\"/>', 1, 3, 31, 'Gate', 2004, 5, 0, 0),
(229, 'The elements 32, 15, 20, 30, 12, 25, 16 are inserted one by one in the given order into a MaxHeap. The resultant MaxHeap is', 1, 2, 19, 'Gate', 2004, 5, 0, 0),
(230, 'Assume that the operators +, -, ×, are left associative and ^ is right associative. The order of precedence (from highest to lowest) is ^, x , +, -. The postfix expression corresponding to the infix expression a + b×c-d^e^f is', 1, 3, 28, 'Gate', 2004, 5, 0, 0),
(231, 'Suppose each set is represented as a linked list with elements in arbitrary order. Which of the operations among union, intersection, membership, cardinality will be the slowest?', 1, 3, 31, 'Gate', 2004, 5, 0, 0),
(232, '<img src=\"./image/question/232.jpg\"/>', 1, 3, 24, 'Gate', 2004, 5, 0, 0),
(233, 'Let P be a singly linked list. Let Q be the pointer to an intermediate node x in the list. What is the worst-case time complexity of the best known algorithm to delete the node x from the list?', 1, 3, 31, 'Gate', 2004, 5, 0, 0),
(234, 'Assume the following C variable declaration Of the following expressions<br/>I A[2]<br/>II A[2][3]<br/>III B[1]<br/>IV B[2][3]<br/>which will not give compile-time errors if used as left hand sides of assignment statements in a C program?<br/>int *A [10], B[10][10]; ', 1, 3, 34, 'Gate', 2003, 5, 0, 0),
(235, '<img src=\"./image/question/235.jpg\"/>', 1, 3, 24, 'Gate', 2003, 5, 0, 0),
(236, 'Suppose the numbers 7, 5, 1, 8, 3, 6, 0, 9, 4, 2 are inserted in that order into an initially empty binary search tree. The binary search tree uses the usual ordering on natural numbers. What is the in-order traversal sequence of the resultant tree? ', 1, 3, 21, 'Gate', 2003, 5, 0, 0),
(237, 'Consider the following graph, <br/><center><img src=\"./image/question/237.jpg\"/></center><br/> Among the following sequences Which are depth first traversals of the above graph?', 3, 3, 7, 'Gate', 2003, 5, 0, 0),
(238, 'In a heap with n elements with the smallest element at the root, the 7<sup>th</sup> smallest element can be found in time ', 1, 2, 19, 'Gate', 2003, 5, 0, 0),
(239, 'A data structure is required for storing a set of integers such that each of the following operations can be done in (log n) time, where n is the number of elements in the set.<pre>\r\n   o    Delection of the smallest element\r\n   o    Insertion of an element if it is not already present in the set\r\n</pre>Which of the following data structures can be used for this purpose?', 1, 3, 24, 'Gate', 2003, 5, 0, 0),
(240, 'Let S be a stack of size n ≥1. Starting with the empty stack, suppose we push the first n natural numbers in sequence, and then perform n pop operations. Assume that Push and Pop operations take X seconds each, and Y seconds elapse between the end of one such stack operation and the start of the next operation. For m ≥1, define the stack-life of m as the time elapsed from the end of Push(m) to the start of the pop operation that removes m from S. The average stack-life of an element of this stack is ', 1, 3, 28, 'Gate', 2003, 5, 0, 0),
(241, 'Consider the following 2-3-4 tree (i.e., B-tree with a minimum degree of two) in which each data item is a letter. The usual alphabetical ordering of letters is used in constructing the tree.<br/><center><img src=\"./image/question/241.jpg\"/></center><br/>What is the result of inserting G in the above tree ? ', 1, 3, 24, 'Gate', 2003, 5, 0, 0),
(242, 'Consider the function f defined below.\r\n<pre>\r\nstruct item\r\n{\r\n    int data;\r\n    struct item * next;\r\n};\r\nint f(struct item *p)\r\n{\r\n    return ((p == NULL) || (p->next == NULL) ||\r\n            ((P->data <= p->next->data) &&\r\n            f(p->next)));\r\n}\r\n</pre>\r\nFor a given linked list p, the function f returns 1 if and only if\r\n', 1, 3, 31, 'Gate', 2003, 5, 0, 0),
(243, 'In the worst case, the number of comparisons needed to search a singly linked list of length n for a given element is', 1, 3, 31, 'Gate', 2002, 5, 0, 0),
(244, 'The results returned by function under value-result and reference parameter passing conventions', 1, 3, 38, 'Gate', 2002, 5, 0, 0),
(245, 'The number of leaf nodes in a rooted tree of n nodes, with each node having 0 or 3 children is:', 1, 3, 24, 'Gate', 2002, 5, 0, 0),
(246, '<img src=\"./image/question/246.jpg\"/>', 2, 3, 34, 'Gate', 2002, 5, 0, 0),
(247, 'A weight-balanced tree is a binary tree in which for each node, the number of nodes in the left sub tree is at least half and at most twice the number of nodes in the right sub tree. The maximum possible height (number of nodes on the path from the root to the furthest leaf) of such a tree on n nodes is best described by which of the following?', 1, 3, 24, 'Gate', 2002, 5, 0, 0),
(248, 'To evaluate an expression without any embedded function calls', 1, 3, 28, 'Gate', 2002, 5, 0, 0),
(249, '<img src=\"./image/question/249.jpg\"/>', 1, 3, 12, 'Gate', 2000, 5, 0, 0),
(250, 'Consider the following nested representation of binary trees: (X Y Z) indicates Y and Z are the left and right sub stress, respectively, of node X. Note that Y and Z may be NULL, or further nested. Which of the following represents a valid binary tree?', 1, 3, 24, 'Gate', 2000, 5, 0, 0),
(251, '<img src=\"./image/question/251.jpg\"/>', 1, 3, 34, 'Gate', 2000, 5, 0, 0),
(252, 'Let LASTPOST, LASTIN and LASTPRE denote the last vertex visited in a postorder, inorder and preorder traversal. Respectively, of a complete binary tree. Which of the following is always tree?', 1, 3, 24, 'Gate', 2000, 5, 0, 0),
(253, 'Let G be an undirected graph. Consider a depth-first traversal of G, and let T be the resulting depth-first search tree. Let u be a vertex in G and let ν be the first new (unvisited) vertex visited after visiting u in the traversal. Which of the following statements is always true?', 1, 3, 7, 'Gate', 2000, 5, 0, 0),
(254, '<img src=\"./image/question/254.jpg\"/>', 2, 3, 7, 'Gate', 1999, 5, 0, 0),
(255, 'Which of the following statements is false?', 3, 3, 24, 'Gate', 1998, 5, 0, 0),
(256, 'A complete n-ary tree is one in which every node has 0 or n sons. If x is the number of internal nodes of a complete n-ary tree, the number of leaves in it is given by', 1, 3, 24, 'Gate', 1998, 5, 0, 0),
(257, '<img src=\"./image/question/257.jpg\"/>', 1, 3, 34, 'Gate', 1998, 5, 0, 0),
(258, 'Faster access to non-local variables is achieved using an array of pointers to activation records called a', 1, 3, 38, 'Gate', 1998, 5, 0, 0),
(259, 'The concatenation of two lists is to be performed on O(1) time. Which of the following implementations of a list should be used?', 1, 3, 31, 'Gate', 1997, 5, 0, 0),
(260, 'Which of the following is essential for converting an infix expression to the postfix form efficiently?', 1, 3, 28, 'Gate', 1997, 5, 0, 0),
(261, 'A binary search tree contains the value 1, 2, 3, 4, 5, 6, 7, 8. The tree is traversed in pre-order and the values are printed out. Which of the following sequences is a valid output?', 1, 3, 21, 'Gate', 1997, 5, 0, 0),
(262, 'A priority queue Q is used to implement a stack that stores characters. PUSH (C) is implemented INSERT (Q, C, K) where K is an appropriate integer key chosen by the implementation. POP is implemented as DELETEMIN(Q). For a sequence of operations, the keys chosen are in', 1, 3, 32, 'Gate', 1997, 5, 0, 0),
(263, 'Which of the following are true', 3, 3, 12, 'Gate', 1996, 5, 0, 0),
(264, 'An advantage of chained hash table (external hashing) over the open addressing scheme is', 1, 3, 23, 'Gate', 1996, 5, 0, 0),
(265, '<img src=\"./image/question/265.jpg\"/>', 2, 3, 24, 'Gate', 1996, 5, 0, 0),
(266, '<img src=\"./image/question/265.jpg\"/><br/>Which of the following sequences denotes the post order traversal sequence of the tree of above question?', 1, 3, 24, 'Gate', 1996, 5, 0, 0),
(267, 'Minimum number of interchange required to convert the array into max heap<br/>89,19,40,17,12,10,2,5,7,11,6,9,70', 2, 2, 19, 'Gate', 1996, 5, 0, 0),
(268, '<img src=\"./image/question/268.jpg\"/>', 1, 3, 24, 'Gate', 1996, 5, 0, 0),
(269, 'A binary tree T has n leaf nodes. The number of nodes of degree 2 in T is:', 1, 3, 24, 'Gate', 1995, 5, 0, 0),
(270, 'An unrestricted use of the “goto” statement is harmful because', 1, 3, 26, 'Gate', 1994, 5, 0, 0),
(271, 'Which of the following permutations can be obtained in the output (in the same order) using a stack assuming that the input is the sequence 1, 2, 3, 4, 5 in that order?', 1, 3, 28, 'Gate', 1994, 5, 0, 0),
(272, 'Linked lists are not suitable data structures of which one of the following problems?', 1, 3, 31, 'Gate', 1994, 5, 0, 0),
(273, '<img src=\"./image/question/273.jpg\"/>', 3, 3, 24, 'Gate', 1992, 5, 0, 0),
(274, 'How many edges are there in a forest with p components having n vertices in all?', 1, 3, 7, 'Gate', 1992, 5, 0, 0),
(275, 'Consider any array representation of an n element binary heap where the elements are stored from index 1 to index n of the array. For the element stored at index i of the array (i≤n), the index of the parent is', 1, 2, 19, 'Gate', 2001, 5, 0, 0),
(276, '<img src=\"./image/question/276.jpg\"/>', 3, 3, 38, 'Gate', 2001, 5, 0, 0),
(277, 'Consider an undirected unweighted graph G. Let a breadth-first traversal of G be done starting from a node r. Let d(r,u) and d(r,v) be the lengths of the shortest paths from r to u and v respectively in G. If u is visited before v during the breadth-first traversal, which of the following statements is correct?', 1, 3, 7, 'Gate', 2001, 5, 0, 0),
(278, 'What is the minimum number of stacks of size n required to implement a queue of size n?', 2, 3, 32, 'Gate', 2001, 5, 0, 0),
(279, 'The Number of Rooted Binary tree with n node is', 3, 3, 24, 'Gate', 1990, 5, 0, 0),
(280, '<img src=\"./image/question/280.jpg\"/>', 2, 3, 23, 'Gate', 1989, 5, 0, 0),
(281, '<img src=\"./image/question/281.jpg\"/>', 1, 3, 12, 'Gate', 1989, 5, 0, 0),
(282, 'Which one of the following statements (s) is/are FALSE?', 3, 3, 12, 'Gate', 1989, 5, 0, 0),
(283, 'In a circular linked list oraganisation, insertion of a record involves modification of', 1, 3, 31, 'Gate', 1987, 5, 0, 0),
(284, 'Using longer identifiers in a program will necessarily lead to:', 1, 6, 39, 'Gate', 1987, 5, 0, 0),
(285, 'An operator precedence parser is a', 1, 6, 40, 'Gate', 1987, 5, 0, 0),
(286, 'In a compiler the module the checks every character of the source text is called:', 1, 6, 39, 'Gate', 1987, 5, 0, 0),
(287, 'Merging states with a common core may produce __________ conflicts and does not produce ___________ conflicts in an LALR purser.', 1, 6, 39, 'Gate', 1989, 5, 0, 0),
(288, 'Consider the grammar given below:\r\n<pre>\r\nS → Aa\r\nA → BD\r\nB → b | ε\r\nD → d | ε\r\n</pre>\r\nLet a, b, d, and $ be indexed as follows:\r\n<center><img src=\"./image/question/288.jpg\" /></center><br/>\r\nCompute the FOLLOW set of the non-terminal B and write the index values for the symbols in the FOLLOW set in the descending order. (For example, if the FOLLOW set is {a, b, d, $}, then the answer should be 3210)', 2, 6, 40, 'Gate', 2019, 5, 0, 0),
(289, 'Which one of the following kinds of derivation is used by LR parsers?', 1, 6, 40, 'Gate', 2019, 5, 0, 0),
(290, 'onsider the augmented grammar given below:\r\n<pre>\r\n    S\' → S\r\n    S → 〈L〉 | id\r\n    L → L,S | S\r\n</pre>\r\nLet I0 = CLOSURE ({[S\' → ·S]}). The number of items in the set GOTO (I0 , 〈 ) is: _____.', 2, 6, 40, 'Gate', 2019, 5, 0, 0),
(291, 'Consider the following grammar and the semantic actions to support the inheriteatd type declaration attributes. Let X1, X2, X3, X4, X5 and X6 be the placeholders for the non-terminals D, T, L or L1 in the following table:<br/> <br/>    <img src=\"./image/question/291.jpg\"/><br/><br/>Which one of the following are the appropriate choices for X1, X2, X3 and X4?', 1, 6, 40, 'Gate', 2019, 5, 0, 0),
(292, 'Consider the following grammar.\r\n<pre>\r\nS->aSB| d\r\nB->b\r\n</pre>\r\nThe number of reduction steps taken by a bottom-up parser while accepting the string aaadbbb is _______. ', 2, 6, 40, 'Gate', 2020, 5, 0, 0),
(293, 'Consider the following statements.Which of them is/are TRUE? ', 3, 6, 39, 'Gate', 2020, 5, 0, 0),
(294, 'Consider the productions A⟶PQ and A⟶XY. Each of the five non-terminals A, P, Q, X, and Y has two attributes: s is a synthesized attribute, and i is an inherited attribute. Consider the following rules.\r\n<pre>\r\nRule 1: P.i = A.i + 2, Q.i = P.i + A.i, and A.s = P.s + Q.s\r\nRule 2: X.i = A.i + Y.s and Y.i = X.s + A.i\r\n</pre>\r\nWhich one of the following is TRUE? ', 1, 6, 41, 'Gate', 2020, 5, 0, 0),
(295, 'Which one of the following statements is/are FALSE?', 3, 6, 39, 'Gate', 2020, 5, 0, 0),
(296, 'Consider the following parse tree for the expression a#b$c$d#e#f, involving two binary operators $ and #.<br/><br/> <center><img src=\"./image/question/296.jpg\"/></center><br/><br/> Which one of the following is correct for the given parse tree?', 1, 6, 40, 'Gate', 2018, 5, 0, 0),
(297, 'A lexical analyzer uses the following patterns to recognize three tokens T1, T2, and T3 over the alphabet {a,b,c}.\r\n<pre>\r\n    T1: a?(b∣c)*a\r\n    T2: b?(a∣c)*b\r\n    T3: c?(b∣a)*c \r\n</pre>\r\nNote that ‘x?’ means 0 or 1 occurrence of the symbol x. Note also that the analyzer outputs the token that matches the longest possible prefix.\r\n<br/>\r\nIf the string bbaacabc is processes by the analyzer, which one of the following is the sequence of tokens it outputs?\r\n', 1, 6, 42, 'Gate', 2018, 5, 0, 0),
(298, 'Consider the following intermediate program in three address code\r\n<pre>\r\n           p = a - b\r\n           q = p * c\r\n           p = u * v\r\n           q = p + q\r\n</pre>\r\nWhich of the following corresponds to a static single assignment form of the above code?', 1, 6, 43, 'Gate', 2017, 5, 0, 0),
(299, 'Consider the following grammar:<br/><br/>\r\n<img src=\"./image/question/299.jpg\"/><br/><br/>\r\nWhat is FOLLOW(Q)?', 1, 6, 40, 'Gate', 2017, 5, 0, 0),
(300, 'Consider the following grammar:\r\n<pre>\r\n    stmt    →  if expr then expr else expr; stmt | ȯ\r\n    expr    →  term relop term | term\r\n    term    →  id | number\r\n    id      →  a | b |  c\r\n    number  → [0-9]\r\n</pre>\r\nwhere relop is a relational operator (e.g., <, >, …), ȯ refers to the empty statement, and if, then, else are terminals.\r\n\r\nConsider a program P following the above grammar containing ten if terminals. The number of control flow paths in P is ________. For example, the program\r\n<pre>\r\n     if e1 then e2 else e3\r\n</pre>\r\nhas 2 control flow paths, e1 → e2 and e1 → e3.', 2, 6, 40, 'Gate', 2017, 5, 0, 0),
(301, 'Consider the expression (a-1)*(((b+c)/3)+d)). Let X be the minimum number of registers required by an optimal code generation (without any register spill) algorithm for a load/store architecture, in which<br/> (i) only load and store instructions can have memory operands and <br/>(ii) arithmetic instructions can have only register or immediate operands. <br/>The value of X is ___________.', 2, 6, 44, 'Gate', 2017, 5, 0, 0),
(302, 'Match the following according to input (from the left column) to the compiler phase (in the right column) that processes it:<br/><br/><img src=\"./image/question/302.jpg\" />', 1, 6, 39, 'Gate', 2017, 5, 0, 0),
(303, 'Which of the following statements about parser is/are CORRECT?', 3, 6, 39, 'Gate', 2017, 5, 0, 0),
(304, 'Consider the following expression grammar G:\r\n<pre>\r\n    E → E - T | T\r\n    T → T + F | F\r\n    F → (E) | id \r\n</pre>\r\nWhich of the following grammars is not left recursive, but is equivalent to G?', 1, 6, 40, 'Gate', 2017, 5, 0, 0),
(305, 'Consider the following code segment.\r\n<pre>\r\nx = u - t;\r\ny = x * v;\r\nx = y + w;\r\ny = t - z;\r\ny = x * y;\r\n</pre>\r\nThe minimum number of  variables required to convert the above code segment to static single assignment form is ________.', 2, 6, 43, 'Gate', 2016, 5, 0, 0),
(306, 'The attributes of three arithmetic operators in some programming language are given below.\r\n<pre>\r\nOperator      Precedence     Associativity     Arity \r\n   +             High            Left          Binary\r\n   −            Medium           Right         Binary\r\n   ∗             Low             Left          Binary\r\n</pre>\r\nThe value of the expression 2 – 5 + 1 – 7 * 3 in this language is __________.', 2, 6, 40, 'Gate', 2016, 5, 0, 0),
(307, 'Consider the following Syntax Directed Translation Scheme (SDTS), with non-terminals {S, A} and terminals {a,b}.\r\n<pre>\r\n  S → aA   { print 1 }\r\n  S → a    { print 2 }\r\n  A → Sb   { print 3 }\r\n</pre>\r\nUsing the above SDTS, the output printed by a bottom-up parser, for the input aab is:', 2, 6, 41, 'Gate', 2016, 5, 0, 0),
(308, 'Match the following:\r\n<pre>\r\n(P) Lexical analysis              (i) Leftmost derivation\r\n(Q) Top down parsing             (ii) Type checking\r\n(R) Semantic analysis           (iii) Regular expressions\r\n(S) Runtime environments         (iv) Activation records\r\n</pre>', 1, 6, 39, 'Gate', 2016, 5, 0, 0),
(309, 'Which one of the following grammars is free from left recursion?', 1, 6, 40, 'Gate', 2016, 5, 0, 0),
(310, 'Which one of the following is True at any valid state in shift-reduce parsing? ', 1, 6, 40, 'Gate', 2015, 5, 0, 0),
(311, 'The least number of temporary variables required to create a three-address code in static single assignment form for the expression q + r/3 + s – t * 5 + u * v/w is _________. ', 2, 6, 43, 'Gate', 2015, 5, 0, 0),
(312, 'Let a<sub>n</sub> represent the number of bit strings of length n containing two consecutive 1s. What is the recurrence relation for a<sub>n</sub>?', 1, 10, 45, 'Gate', 2015, 5, 0, 0),
(313, 'A variable x is said to be live at a statement Si in a program if the following three conditions hold simultaneously:\r\n<pre>\r\n1. There exists a statement Sj that uses x\r\n2. There is a path from Si to Sj in the flow\r\n   graph corresponding to the program\r\n3. The path has no intervening assignment to x \r\n   including at Si and Sj\r\n</pre>\r\n<img src=\"./image/question/313.jpg\"/>', 1, 6, 46, 'Gate', 2015, 5, 0, 0),
(314, 'In the context of abstract-syntax-tree (AST) and control-flow-graph (CFG), which one of the following is TRUE?', 1, 6, 39, 'Gate', 2015, 5, 0, 0),
(315, 'Match the following : <br/><img src=\"./image/question/315.jpg\"/>', 1, 6, 39, 'Gate', 2015, 5, 0, 0),
(316, 'Consider the intermediate code given below. <br/><img src=\"./image/question/316.jpg\"/>', 1, 6, 47, 'Gate', 2015, 5, 0, 0),
(317, 'Among simple LR (SLR), canonical LR, and look-ahead LR (LALR), which of the following pairs identify the method that is very easy to implement and the method that is the most powerful, in that order?', 1, 6, 40, 'Gate', 2015, 5, 0, 0),
(318, 'onsider the following grammar G.\r\n<pre>\r\n  S → F ⎪ H\r\n  F → p ⎪ c\r\n  H → d ⎪ c\r\n</pre>\r\nWhere S, F and H are non-terminal symbols, p, d and c are terminal symbols. Which of the following statement(s) is/are correct?\r\n<pre>\r\nS1: LL(1) can parse all strings that are generated using grammar G.\r\nS2: LR(1) can parse all strings that are generated using grammar\r\n</pre>', 1, 6, 40, 'Gate', 2015, 5, 0, 0),
(319, 'Which one of the following is/are TRUE?', 3, 6, 47, 'Gate', 2014, 5, 0, 0),
(320, 'A canonical set of items is given below\r\n<pre>\r\nS --> L. > R\r\nQ --> R.\r\n</pre>\r\nOn input symbol < the set has', 1, 6, 40, 'Gate', 2014, 5, 0, 0),
(321, 'Let L be a language and L\' be its complement. Which one of the following is NOT a viable possibility?', 1, 5, 49, 'Gate', 2014, 5, 0, 0),
(322, '<center><img src=\"./image/question/322.jpg\"/></center><br/>\r\nWhich of the regular expressions given below represent the following DFA? ', 3, 5, 50, 'Gate', 2014, 5, 0, 0),
(323, 'Consider the grammar defined by the following production rules, with two operators ∗ and +\r\n<pre>\r\n    S --> T * P \r\n    T --> U | T * U\r\n    P --> Q + P | Q\r\n    Q --> Id\r\n    U --> Id\r\n</pre>\r\nWhich one of the following is TRUE?', 1, 5, 51, 'Gate', 2014, 5, 0, 0),
(324, 'Which one of the following is NOT performed during compilation?', 1, 6, 39, 'Gate', 2014, 5, 0, 0),
(325, 'For a C program accessing X[i][j][k], the following intermediate code is generated by a compiler. Assume that the size of an integer is 32 bits and the size of a character is 8 bits.\r\n<pre>\r\n  t0 = i ∗ 1024\r\n  t1 = j ∗ 32\r\n  t2 = k ∗ 4\r\n  t3 = t1 + t0\r\n  t4 = t3 + t2\r\n  t5 = X[t4]\r\n</pre>\r\nWhich one of the following statements about the source code for the C program is CORRECT?', 1, 6, 43, 'Gate', 2014, 5, 0, 0),
(326, 'One of the purposes of using intermediate code in compilers is to', 1, 6, 43, 'Gate', 2014, 5, 0, 0),
(327, 'Which of the following statements are CORRECT?', 3, 6, 43, 'Gate', 2014, 5, 0, 0),
(328, 'A system uses 3 page frames for storing process pages in main memory. It uses the Least Recently Used (LRU) page replacement policy. Assume that all the page frames are initially empty. What is the total number of page faults that will occur while processing the page reference string given below?  <br/> 4, 7, 6, 1, 7, 6, 1, 2, 7, 2 ', 2, 1, 52, 'Gate', 2014, 5, 0, 0),
(329, 'What is the maximum number of reduce moves that can be taken by a bottom-up parser for a grammar with no epsilon- and unit-production (i.e., of type A → є and A → a) to parse a string with n tokens?', 1, 6, 40, 'Gate', 2014, 5, 0, 0),
(330, 'Consider the following two sets of LR(1) items of an LR(1) grammar.\r\n<pre>\r\n   X -> c.X, c/d\r\n   X -> .cX, c/d\r\n   X -> .d, c/d\r\n   X -> c.X, $\r\n   X -> .cX, $\r\n   X -> .d, $\r\n</pre>\r\nWhich of the following statements related to merging of the two sets in the corresponding LALR parser is/are TRUE? ', 3, 6, 39, 'Gate', 2013, 5, 0, 0),
(331, 'Consider the program given below, in a block-structured pseudo-language with lexical scoping and nesting of procedures permitted.\r\n<pre>\r\nProgram main;\r\n  Var ...\r\n  \r\n    Procedure A1;\r\n     Var ...\r\n     Call A2;\r\n    End A1\r\n    \r\n    Procedure A2;\r\n      Var ...\r\n  \r\n      Procedure A21;\r\n        Var ...\r\n        Call A1;\r\n        End A21\r\n        \r\n    Call A21;\r\n  End A21\r\n  \r\n    Call A1;\r\n  End main.\r\n</pre>\r\nConsider the calling chain : Main->A1->A2->A21->A1 The correct set of activation records along with their access links is given by :', 1, 6, 53, 'Gate', 2012, 5, 0, 0),
(332, '<img src=\"./image/question/332.jpg\"/>', 1, 6, 40, 'Gate', 2012, 5, 0, 0),
(333, 'For the grammar below, a partial LL(1) parsing table is also presented along with the grammar. Entries that need to be filled are indicated as E1, E2, and E3. ε is the empty string, $ indicates end of input, and, | separates alternate right hand sides of productions. <br/><img src=\"./image/question/333.jpg\"/><br/>Note:In the table second column first row it\'s not \"A\" it\'s \"a\". ', 1, 6, 40, 'Gate', 2012, 5, 0, 0),
(334, 'The lexical analysis for a modern computer language such as Java needs the power of which one of the following machine models in a necessary and sufficient sense?', 1, 6, 39, 'Gate', 2011, 5, 0, 0),
(335, 'In a compiler, keywords of a language are recognized during', 1, 6, 39, 'Gate', 2011, 5, 0, 0),
(336, 'Consider two binary operators ‘↑’ and ‘↓’ with the precedence of operator ↓ being lower than that of the operator ↑. Operator ↑ is right associative while operator ↓, is left associative. Which one of the following represents the parse tree for expression (7↓3↑4↑3↓2)?  ', 1, 6, 40, 'Gate', 2011, 5, 0, 0),
(337, 'Consider evaluating the following expression tree on a machine with load-store architecture in which memory can be accessed only through load and store instructions. The variables a, b, c, d and e initially stored in memory. The binary operators used in this expression tree can be evaluate by the machine only when the operands are in registers. The instructions produce results only in a register. If no intermediate results can be stored in memory, what is the minimum number of registers needed to evaluate this expression? <br/><center><img src=\"./image/question/336.jpg\"/></center>', 2, 6, 47, 'Gate', 2011, 5, 0, 0),
(338, 'Which data structure in a compiler is used for managing information about variables and their attributes?', 1, 6, 39, 'Gate', 2010, 5, 0, 0),
(339, ' Which languages necessarily need heap allocation in the runtime environment?', 1, 6, 53, 'Gate', 2010, 5, 0, 0),
(340, 'The program below uses six temporary variables a, b, c, d, e, f.\r\n<pre>\r\n    a = 1\r\n    b = 10\r\n    c = 20\r\n    d = a+b\r\n    e = c+d\r\n    f = c+e\r\n    b = c+e\r\n    e = b+f\r\n    d = 5+e\r\n    return d+f\r\n</pre>\r\nAssuming that all operations take their operands from registers, what is the minimum number of registers needed to execute this program without spilling?', 2, 6, 47, 'Gate', 2010, 5, 0, 0),
(341, 'The grammar S → aSa|bS|c is', 1, 6, 40, 'Gate', 2010, 5, 0, 0),
(342, 'Match all items in Group 1 with correct options from those given in Group<br/><center><img src=\"./image/question/342.jpg\"/></center>', 1, 6, 40, 'Gate', 2009, 5, 0, 0),
(343, 'Which of the following statements are TRUE?', 3, 6, 40, 'Gate', 2009, 5, 0, 0),
(344, 'Which of the following describes a handle (as applicable to LR-parsing) appropriately?', 1, 6, 40, 'Gate', 2008, 5, 0, 0),
(345, 'Some code optimizations are carried out on the intermediate code because', 1, 6, 43, 'Gate', 2008, 5, 0, 0),
(346, 'Which of the following are true?<br/>I.A programming language which does not permit global variables of any kind and has no nesting of procedures/functions, but permits recursion can be implemented with static storage allocation<br/> II.Multi-level access link (or display) arrangement is needed to arrange activation records only if the programming language being implemented has nesting of procedures/functions <br/>III.Recursion in programming languages cannot be implemented with dynamic storage allocation<br/> IV.Nesting procedures/functions and recursion require a dynamic heap allocation scheme and cannot be implemented with a stack-based allocation scheme for activation records<br/>V.Programming languages which permit a function to return a function as its result cannot be implemented with a stack-based storage allocation scheme for activation records', 1, 6, 53, 'Gate', 2008, 5, 0, 0),
(347, 'An LALR(1) parser for a grammar G can have shift-reduce (S-R) conflicts if and only if', 1, 6, 40, 'Gate', 2008, 5, 0, 0),
(348, 'Which one of the following is a top-down parser?', 1, 6, 40, 'Gate', 2007, 5, 0, 0),
(349, 'Consider the grammar with non-terminals N = {S,C,S1 },terminals T={a,b,i,t,e}, with S as the start symbol, and the following set of rules:\r\n<pre>\r\nS --> iCtSS1|a\r\nS<sub>1</sub> --> eS|ε\r\nC --> b\r\n</pre>\r\nThe grammar is NOT LL(1) because:  ', 1, 6, 40, 'Gate', 2007, 5, 0, 0),
(350, 'Consider the following two statements:\r\n<pre>\r\nP: Every regular grammar is LL(1)\r\nQ: Every regular set has a LR(1) grammar\r\n</pre>\r\nWhich of the following is TRUE?', 1, 6, 40, 'Gate', 2007, 5, 0, 0),
(351, 'Consider the CFG with {S,A,B) as the non-terminal alphabet, {a,b) as the terminal alphabet, S as the start symbol and the following set of production rules\r\n<pre>\r\nS --> aB        S --> bA\r\nB --> b         A --> a\r\nB --> bS        A --> aS\r\nB --> aBB       A --> bAA\r\n</pre>\r\nWhich of the following strings is generated by the grammar?', 1, 6, 51, 'Gate', 2007, 5, 0, 0),
(352, 'Consider an ambiguous grammar G and its disambiguated version D. Let the language recognized by the two grammars be denoted by L(G) and L(D) respectively. Which one of the following is true ?', 1, 6, 51, 'Gate', 2007, 5, 0, 0),
(353, 'Consider the following grammar.\r\n<pre>\r\nS -> S * E\r\nS -> E\r\nE -> F + E\r\nE -> F\r\nF -> id\r\n</pre>\r\nConsider the following LR(0) items corresponding to the grammar above.\r\n<pre>\r\n(i) S -> S * .E\r\n(ii) E -> F. + E\r\n(iii) E -> F + .E\r\n</pre>\r\nGiven the items above, which two of them will appear in the same set in the canonical sets-of-items for the grammar?    ', 1, 6, 40, 'Gate', 2006, 5, 0, 0),
(354, 'Consider the following translation scheme.\r\n<pre>\r\nS → ER \r\nR → *E{print(\"*\");}R | ε \r\nE → F + E {print(\"+\");} | F \r\nF → (S) | id {print(id.value);} \r\n</pre>\r\nHere id is a token that represents an integer and id.value represents the corresponding integer value. For an input \'2 * 3 + 4\', this translation scheme prints', 1, 6, 41, 'Gate', 2006, 5, 0, 0),
(355, 'Consider the following C code segment.\r\n<pre>\r\nfor(i = 0, i < n; i++)\r\n{\r\n    for (j=0; j < n; j++)\r\n    {\r\n        if (i%2)\r\n        {\r\n            x += (4*j + 5*i);\r\n            y += (7 + 4*j);\r\n        }\r\n    }\r\n}\r\n</pre>\r\nWhich one of the following is false?', 1, 6, 47, 'Gate', 2006, 5, 0, 0),
(356, 'onsider the following grammar:\r\n<pre>\r\nS → FR\r\nR → S | ε\r\nF → id\r\n</pre>\r\nIn the predictive parser table, M, of the grammar the entries M[S, id] and M[R, $] respectively.  ', 1, 6, 40, 'Gate', 2006, 5, 0, 0),
(357, 'The grammar A → AA | (A) | ε is not suitable for predictive-parsing because the grammar is:', 1, 6, 40, 'Gate', 2005, 5, 0, 0),
(358, 'Consider the following expression grammar. The seman­tic rules for expression calculation are stated next to each grammar production.\r\n<pre>\r\n E → number 	 E.val = number. val\r\n    | E \'+\' E 	 E(1).val = E(2).val + E(3).val\r\n    | E \'×\' E	 E(1).val = E(2).val × E(3).val\r\n</pre>\r\nThe above grammar and the semantic rules are fed to a yacc tool (which is an LALR (1) parser generator) for parsing and evaluating arithmetic expressions. Which one of the following is true about the action of yacc for the given grammar', 1, 6, 40, 'Gate', 2005, 5, 0, 0),
(359, 'Consider the following expression grammar. The seman­tic rules for expression calculation are stated next to each grammar production.\r\n<pre>\r\n E → number 	 E.val = number. val\r\n    | E \'+\' E 	 E(1).val = E(2).val + E(3).val\r\n    | E \'×\' E	 E(1).val = E(2).val × E(3).val\r\n</pre>\r\nAssume the conflicts in Part (a) of this question are resolved and an LALR(1) parser is generated for parsing arithmetic expressions as per the given grammar. Consider an expression 3 × 2 + 1. What precedence and associativity properties does the generated parser realize?', 1, 6, 40, 'Gate', 2005, 5, 0, 0),
(360, 'Consider line number 3 of the following C- program.\r\n<pre>\r\nint main ( ) {                   /* Line 1 */\r\n  int I, N;                      /* Line 2 */\r\n  fro (I = 0, I < N, I++);       /* Line 3 */\r\n}\r\n</pre>\r\nIdentify the compiler\'s response about this line while creating the object-module\r\n', 1, 6, 39, 'Gate', 2005, 5, 0, 0),
(361, 'Consider the grammar\r\n<pre>\r\nE → E + n | E × n | n\r\n</pre>\r\nFor a sentence n + n × n, the handles in the right-sentential form of the reduction are', 1, 6, 40, 'Gate', 2005, 5, 0, 0),
(362, 'Consider the grammar\r\n<pre>\r\nS → (S) | a\r\n</pre>\r\nLet the number of states in SLR(1), LR(1) and LALR(1) parsers for the grammar be n1, n2 and n3 respectively. The following relationship holds good    ', 1, 6, 40, 'Gate', 2005, 5, 0, 0),
(363, 'Which of the following Grammar rules violate the requirements of an operator grammar? P, Q, R are non terminals and r, s, t are terminals', 3, 6, 40, 'Gate', 2004, 5, 0, 0),
(364, 'Consider a program P that consists of two source modules M1 and M2 contained in two different files. If M1 contains a reference to a function defined in M2, the reference will be resolved at', 1, 6, 39, 'Gate', 2004, 5, 0, 0),
(365, 'Consider the grammar rule E → E1 - E2 for arithmetic expressions. The code generated is targeted to a CPU having a single user register. The subtraction operation requires the first operand to be in the register. If E1 and E2 do not have any common sub-expression, in order to get the shortest possible code', 1, 6, 53, 'Gate', 2004, 5, 0, 0),
(366, '<img src=\"./image/question/366.jpg\"/>', 2, 6, 41, 'Gate', 2004, 5, 0, 0),
(367, '<img src=\"./image/question/367.jpg\"/>', 1, 5, 51, 'Gate', 2004, 5, 0, 0),
(368, 'Which of the following suffices to convert an arbitrary CFG to an LL(1) grammar?  ', 1, 6, 40, 'Gate', 2003, 5, 0, 0),
(369, 'Assume that the SLR parser for a grammar G has n<sub>1</sub> states and the LALR parser for G has n<sub>2</sub> states. The relationship between n<sub>1</sub> and n<sub>2</sub> is  ', 1, 6, 40, 'Gate', 2003, 5, 0, 0),
(370, 'In a bottom-up evaluation of a syntax directed definition, inherited attributes can  ', 1, 6, 41, 'Gate', 2003, 5, 0, 0),
(371, 'Which of the following statements is FALSE?  ', 1, 6, 53, 'Gate', 2003, 5, 0, 0),
(372, 'Consider the grammar shown below\r\n<pre>\r\nS → i E t S S\' | a\r\nS\' → e S | ε\r\nE → b\r\n</pre>\r\nIn the predictive parse table. M, of this grammar, the entries M[S\', e] and M[S\', $] respectively are', 1, 6, 40, 'Gate', 2003, 5, 0, 0),
(373, 'Consider the grammar shown below.\r\n<pre>\r\nS → C C\r\nC → c C | d\r\n</pre>\r\nThe grammar is', 1, 6, 40, 'Gate', 2003, 5, 0, 0),
(374, 'Consider the translation scheme shown below\r\n<pre>\r\nS → T R\r\nR → + T {print (\'+\');} R | ε\r\nT → num {print (num.val);}\r\n</pre>\r\nHere num is a token that represents an integer and num.val represents the corresponding integer value. For an input string \'9 + 5 + 2\', this translation scheme will print', 1, 6, 41, 'Gate', 2003, 5, 0, 0);
INSERT INTO `question` (`q_id`, `question`, `type`, `sub_id`, `topic_id`, `source`, `year`, `life`, `attampt`, `correct`) VALUES
(375, 'Consider the syntax directed definition shown below.\r\n<pre>\r\nS → id : = E  {gen (id.place = E.place;);}\r\nE → E1 + E2   {t = newtemp ( ); gen (t = El.place + E2.place;); E.place = t}\r\nE → id     {E.place = id.place;}\r\n</pre>\r\nHere, gen is a function that generates the output code, and newtemp is a function that returns the name of a new temporary variable on every call. Assume that ti\'s are the temporary variable names generated by newtemp. For the statement \'X: = Y + Z\', the 3-address code sequence generated by this definition is', 1, 6, 41, 'Gate', 2003, 5, 0, 0),
(376, 'Which of the following is NOT an advantage of using shared, dynamically linked libraries as opposed to using statically linked libraries?  ', 1, 6, 53, 'Gate', 2003, 5, 0, 0),
(377, '<img src=\"./image/question/377.jpg\"/>', 2, 6, 42, 'Gate', 2003, 5, 0, 0),
(378, 'Which of the following derivations does a top-down parser use while parsing an input string? The input is assumed to be scanned in left to right order.', 1, 6, 40, 'Gate', 2000, 5, 0, 0),
(379, '<img src=\"./image/question/379.jpg\"/>', 1, 6, 40, 'Gate', 2000, 5, 0, 0),
(380, 'Which of the following is the most powerful parsing method?', 1, 6, 40, 'Gate', 1999, 5, 0, 0),
(381, 'In a resident – OS computer, which of the following systems must reside in the main memory under all situations?', 1, 6, 40, 'Gate', 1998, 5, 0, 0),
(382, 'Which of the following statements is true?', 1, 6, 40, 'Gate', 1998, 5, 0, 0),
(383, 'Type checking is normally done during', 1, 6, 40, 'Gate', 1998, 5, 0, 0),
(384, '<img src=\"./image/question/384.jpg\"/>', 1, 6, 40, 'Gate', 1997, 5, 0, 0),
(385, 'A language L allows declaration of arrays whose sizes are not known during compilation. It is required to make efficient use of memory. Which one of the following is true?', 1, 6, 53, 'Gate', 1997, 5, 0, 0),
(386, 'The conditional expansion facility of macro processor is provided to', 1, 6, 39, 'Gate', 1997, 5, 0, 0),
(387, 'Heap allocation is required for languages', 1, 6, 53, 'Gate', 1997, 5, 0, 0),
(388, '<img src=\"./image/question/388.jpg\"/>', 1, 6, 39, 'Gate', 1996, 5, 0, 0),
(389, '<img src=\"./image/question/389.jpg\"/>', 1, 6, 39, 'Gate', 1996, 5, 0, 0),
(390, 'A linker is given object modules for a set of programs that were compiled separately. What information need to be included in an object module?', 1, 6, 53, 'Gate', 1995, 5, 0, 0),
(391, '<img src=\"./image/question/391.jpg\"/>', 1, 6, 40, 'Gate', 1995, 5, 0, 0),
(392, 'Generation of intermediate code based on an abstract machine model is useful in compilers because', 1, 6, 40, 'Gate', 1994, 5, 0, 0),
(393, '<img src=\"./image/question/393.jpg\"/>', 1, 6, 40, 'Gate', 1994, 5, 0, 0),
(394, 'Consider the SLR(1) and LALR (1) parsing tables for a context free grammar. Which of the following statements is/are true?', 3, 6, 40, 'Gate', 1992, 5, 0, 0),
(395, 'The process of assigning load addresses to the various parts of the program and adjusting the code and date in the program to reflect the assigned addresses is called', 1, 6, 53, 'Gate', 2001, 5, 0, 0),
(396, 'Which of the following statements is/are true?', 3, 6, 40, 'Gate', 2001, 5, 0, 0),
(397, 'Which of the following statements is/are true?', 3, 6, 40, 'Gate', 1991, 5, 0, 0),
(398, 'A \"Link Editor\" is a program that:', 3, 6, 39, 'Gate', 1991, 5, 0, 0),
(399, '<img src=\"./image/question/399.jpg\"/>', 1, 6, 39, 'Gate', 1991, 5, 0, 0),
(400, '<img src=\"./image/question/400.jpg\"/>', 1, 6, 39, 'Gate', 1991, 5, 0, 0),
(401, 'If L is a regular language over Σ = {a,b}, which one of the following languages is NOT regular?', 1, 5, 25, 'Gate', 2019, 5, 0, 0),
(402, 'For Σ = {a,b}, let us consider the regular language L = {x|x = a<sup>2+3k</sup> or x = b<sup>10+12k</sup>, k ≥ 0}. Which one of the following can be a pumping length (the constant guaranteed by the pumping lemma) for L?', 1, 5, 54, 'Gate', 2019, 5, 0, 0),
(403, 'Which sets are uncountable? ', 3, 5, 55, 'Gate', 2019, 5, 0, 0),
(404, 'Which one of the following languages over Σ = {a,b} is/are context-free?', 3, 5, 49, 'Gate', 2019, 5, 0, 0),
(405, 'Consider the language L={a<sup>n</sup> | n≥0} ∪ {a<sup>n</sup>b<sup>n</sup> | n≥0}<br/>Which of the following statements are true', 3, 5, 49, 'Gate', 2020, 5, 0, 0),
(406, 'Consider the following statements.\r\n<pre>\r\nI.If L<sub>1</sub> U L<sub>2</sub> is regular, then both L<sub>1</sub> and L<sub>2</sub> must be regular.\r\nII.The class of regular languages is closed under infinite union.\r\n</pre>\r\nWhich of the above statements is/are TRUE? ', 1, 5, 49, 'Gate', 2020, 5, 0, 0),
(407, 'Which one of the following regular expressions represents the set of all binary strings with an odd number of 1’s? ', 1, 5, 25, 'Gate', 2020, 5, 0, 0),
(408, 'Which of the following languages are undecidable? Note that L(M) indicates encoding of the Turing machine M.<br/><img src=\"./image/question/408.jpg\"/>', 3, 5, 48, 'Gate', 2020, 5, 0, 0),
(409, 'Consider the following language.\r\n<pre>\r\nL = {x ∈ {a,b}* | number of a’s in x is divisible by 2 but not divisible by 3}\r\n</pre>\r\nThe minimum number of states in a DFA that accepts L is ______.', 2, 5, 50, 'Gate', 2020, 5, 0, 0),
(410, 'Consider the following languages.\r\n<pre>\r\nL1 = {wxyx | w,x,y ∈ (0 + 1)+}\r\nL2 = {xy | x,y ∈ (a + b)*, |x| = |y|, x ≠ y}\r\n</pre>\r\nWhich one of the following is TRUE? ', 1, 5, 49, 'Gate', 2020, 5, 0, 0),
(411, 'Let N be an NFA with n states. Let k be the number of states of a minimal DFA which is equivalent to N. Which one of the following is necessarily true?', 1, 5, 50, 'Gate', 2018, 5, 0, 0),
(412, 'The set of all recursively enumerable languages is', 1, 5, 49, 'Gate', 2018, 5, 0, 0),
(413, 'Given a language L, define Li as follows:\r\n<pre>\r\nL0 = {ε}\r\nLi = Li-1∙L for all i>0\r\n</pre>\r\nThe order of a language L is defined as the smallest k such that L<sub>k</sub> = L<sub>k+1</sub>.<br/>\r\n\r\nConsider the language L<sub>1</sub> (over alphabet 0) accepted by the following automaton.<br/><br/>\r\n<center><img src=\"./image/question/413.jpg\"/></center><br/><br/>\r\nThe order of L1 is ______.', 2, 5, 50, 'Gate', 2018, 5, 0, 0),
(414, 'Which of the given languages are context-free?', 3, 5, 49, 'Gate', 2018, 5, 0, 0),
(415, 'Consider the following problems. L(G) denotes the language generated by a grammar G. L(M) denotes the language accepted by a machine M.<br/>Which of the following are undecidable?', 3, 5, 55, 'Gate', 2018, 5, 0, 0),
(416, 'Consider the following context-free grammar over the alphabet Σ = {a, b, c} with S as the start symbol:\r\n<pre>\r\n    S → abScT | abcT\r\n    T → bT | b \r\n</pre>\r\nWhich one of the following represents the language generated by the above grammar?', 1, 5, 49, 'Gate', 2018, 5, 0, 0),
(417, 'Consider the language L given by the regular expression (a b)*b(a b) over the alphabet {a,b}. The smallest number of states needed in deterministic finite-state automation (DFA) accepting L is _________.', 2, 5, 50, 'Gate', 2017, 5, 0, 0),
(418, 'If G is a grammar with productions\r\n<pre>\r\nS → SaS | aSb | bSa | SS | ϵ\r\n</pre>\r\nwhere S is the start variable, then which one of the following strings is not generated by G?', 1, 5, 51, 'Gate', 2017, 5, 0, 0),
(419, 'Consider the context-free grammars over the alphabet {a, b, c} given below. S and T are non-terminals.\r\n<pre>\r\n    G1: S → aSb|T, T → cT|ϵ\r\n    G2: S → bSa|T, T → cT|ϵ \r\n</pre>\r\nThe language L(G1) ∩ L(G2) is', 1, 5, 51, 'Gate', 2017, 5, 0, 0),
(420, 'Consider the following languages over the alphabet Σ = {a, b, c}.<br/>\r\nLet L1 = {a<sup>n</sup> b<sup>n</sup> c<sup>m</sup>│m,n ≥ 0} and L2 = {a<sup>m</sup> b<sup>n</sup> c<sup>n</sup>│m,n ≥ 0}\r\n\r\nWhich of the following are context-free languages?\r\n<pre>\r\n    I. L1 ∪ L2\r\n    II. L1 ∩ L2 \r\n</pre>', 1, 5, 49, 'Gate', 2017, 5, 0, 0),
(421, 'Let A and B be finite alphabets and let # be a symbol outside both A and B. Let f be a total function from A* to B*. We say f is computable if there exists a Turing machine M which given an input x in A*, always halts with f(x) on its tape. Let L<sub>f</sub> denote the language {x # f(x)│x ∈ A* }. Which of the following statements is true:', 1, 5, 55, 'Gate', 2017, 5, 0, 0),
(422, 'Let L1, L2 be any two context-free languages and R be any regular language. Then which of the following is/are CORRECT?', 3, 5, 49, 'Gate', 2017, 5, 0, 0),
(423, 'Identify the language generated by the following grammar, where S is the start variable.\r\n<pre>\r\n                                     S → XY\r\n                                     X → aX|a\r\n                                     Y → aYb|ϵ\r\n</pre>', 1, 5, 50, 'Gate', 2017, 5, 0, 0),
(424, 'The minimum possible number of a deterministic finite automation that accepts the regular language&nbsp;<em>L = {w<sub>1</sub>aw<sub>2</sub> | w<sub>1</sub>, w<sub>2</sub> ∈ {a,b}*, |w<sub>1</sub>| = 2,|w<sub>2</sub>| ≥ 3}</em> is _________.', 2, 5, 50, 'Gate', 2017, 5, 0, 0),
(425, '<img src=\"./image/question/425.jpg\"/>', 1, 5, 50, 'Gate', 2017, 5, 0, 0),
(426, 'Consider the following languages:\r\n<pre>\r\n    L1 = {a<sup>p</sup>│p is a prime number}\r\n    L2 = {a<sup>n</sup> b<sup>m</sup> c<sup>2m</sup> | n ≥ 0, m ≥ 0}\r\n    L3 = {a<sup>n</sup> b<sup>n</sup> c<sup>2n</sup> │ n ≥ 0}\r\n    L4 = {a<sup>n</sup> b<sup>n</sup> │ n ≥ 1} \r\n</pre>\r\nWhich of the following are CORRECT?', 3, 5, 49, 'Gate', 2017, 5, 0, 0),
(427, 'Let L(R) be the language represented by regular expression R. Let L(G) be the language generated by a context free grammar G. Let L(M) be the language accepted by a Turing machine M.<br/>Which of the following decision problems are undecidable?', 3, 5, 55, 'Gate', 2017, 5, 0, 0),
(428, 'Which of the following languages is generated by the given grammar?\r\n<pre>\r\nS→ aS|bS|ε\r\n</pre>', 1, 5, 49, 'Gate', 2016, 5, 0, 0),
(429, 'Which of the following decision problems are undecidable?', 3, 5, 55, 'Gate', 2016, 5, 0, 0),
(430, 'Which one of the following regular expressions represents the language: the set of all binary strings having two consecutive 0s and two consecutive 1s?', 1, 5, 25, 'Gate', 2016, 5, 0, 0),
(431, '<p align=\"Justify\">Consider the following context-free grammars:</p>\r\n<pre>\r\nG<sub>1</sub>: S → aS|B, B → b|bB\r\nG<sub>2</sub>: S → aA|bB, A → aA|B|ε, B → bB|ε\r\n</pre>\r\n<p align=\"Justify\">Which one of the following pairs of languages is generated by G<sub>1</sub> and G<sub>2</sub>, respectively?</p>', 1, 5, 25, 'Gate', 2016, 5, 0, 0),
(432, 'Consider the transition diagram of a PDA given below with input alphabet Σ = {a,b} and stack alphabet Γ = {X,Z}. Z is the initial stack symbol. Let L denote the language accepted by the PDA.<br/><br/><center><img src=\"./image/question/432.jpg\"/></center><br/><br/>Which one of the following is TRUE?', 1, 5, 51, 'Gate', 2016, 5, 0, 0),
(433, '<img src=\"./image/question/433.jpg\"/>', 1, 5, 49, 'Gate', 2016, 5, 0, 0),
(434, 'The number of states in the minimum sized DFA that accepts the language deﬁned by the regular expression<br/><i>(0 1)*(0 1)(0 1)*</i> is_________.', 2, 5, 50, 'Gate', 2016, 5, 0, 0),
(435, '<p>Language L<sub>1</sub> is deﬁned by the grammar: S<sub>1</sub>&nbsp;→ aS<sub>1</sub>b|ε <br>\r\nLanguage L<sub>2</sub> is deﬁned by the grammar: S<sub>2</sub> → abS<sub>2</sub>|ε</p>\r\n\r\n<p>Consider the following statements:</p>\r\n<ul>\r\nP: L<sub>1</sub> is regular<br>\r\nQ: L<sub>2</sub> is regular\r\n</ul>\r\n<p>Which one of the following is <strong>TRUE</strong>?</p>', 1, 5, 25, 'Gate', 2016, 5, 0, 0),
(436, '<p align=\"Justify\">Consider the following types of languages: L<sub>1</sub>: Regular, L<sub>2</sub>: Context-free, L<sub>3</sub>&nbsp;: Recursive, L<sub>4</sub> : Recursively enumerable. Which of the following is/are <strong>TRUE</strong>?</p><br/>\r\n<img src=\"./image/question/436.jpg\"/>', 3, 5, 49, 'Gate', 2016, 5, 0, 0),
(437, 'Consider the following two statements:\r\n<pre>\r\n    I. If all states of an NFA are accepting states then the language accepted by the NFA is Σ*.\r\n    II. There exists a regular language A such that for all languages B, A∩B is regular. \r\n</pre>\r\nWhich one of the following is CORRECT?', 1, 5, 25, 'Gate', 2016, 5, 0, 0),
(438, '<p>Consider the following languages:</p>\r\n<ul>\r\nL<sub>1</sub>&nbsp;= {a<sup>n</sup> b<sup>m</sup> c<sup>n+m</sup> : m,n ≥ 1}<br>\r\nL<sub>2</sub> = {a<sup>n</sup> b<sup>n</sup> c<sup>2n</sup> : n ≥ 1}\r\n</ul>\r\n<p>Which one of the following is<strong>TRUE</strong>?</p>', 1, 5, 49, 'Gate', 2016, 5, 0, 0),
(439, 'Consider the following languages.\r\n<pre>\r\n    L<sub>1</sub> = {〈M〉|M takes at least 2016 steps on some input},\r\n    L<sub>2</sub> = {〈M〉│M takes at least 2016 steps on all inputs} and\r\n    L<sub>3</sub> = {〈M〉|M accepts ε}, \r\n</pre>\r\nwhere for each Turing machine M, 〈M〉 denotes a speciﬁc encoding of M. Which one of the following is TRUE?', 1, 5, 48, 'Gate', 2016, 5, 0, 0),
(440, 'A student wrote two context-free grammars G1 and G2 for generating a single C-like array declaration. The dimension of the array is at least one. For example,\r\n<pre>\r\n    int a[10][3]; \r\n</pre>\r\nThe grammars use D as the start symbol, and use six terminal symbols int; id[] num.\r\n<pre>\r\nGrammar G1               Grammar G2\r\nD → intL;                 D → intL;\r\nL → id[E                  L → idE\r\nE → num]                  E → E[num]\r\nE → num][E                E → [num]\r\n</pre>\r\nWhich of the grammars correctly generate the declaration mentioned above?', 1, 5, 51, 'Gate', 2016, 5, 0, 0),
(441, 'For any two languages L<sub>1</sub> and L<sub>2</sub> such that L<sub>1</sub> is context-free and L<sub>2</sub> is recursively enumerable but not recursive, which of the following is/are necessarily true?<br/><br/><img src=\"./image/question/441.jpg\"/> ', 3, 5, 49, 'Gate', 2015, 5, 0, 0),
(442, 'Consider the DFAs M and N given above. The number of states in a minimal DFA that accepts the language L(M) ∩ L(N) is __________. <br/><br/><img src=\"./image/question/442.jpg\"/> ', 2, 5, 50, 'Gate', 2015, 5, 0, 0),
(443, '<img src=\"./image/question/443.jpg\"/> ', 3, 5, 55, 'Gate', 2015, 5, 0, 0),
(444, 'Which of the following language is/are regular ?<br/><br/><img src=\"./image/question/444.jpg\"/> ', 3, 5, 49, 'Gate', 2015, 5, 0, 0),
(445, 'The number of states in the minimal deterministic finite automaton corresponding to the regular expression (0   1) * (10) is __________', 2, 5, 49, 'Gate', 2015, 5, 0, 0),
(446, '<img src=\"./image/question/446.jpg\"/> ', 1, 5, 49, 'Gate', 2015, 5, 0, 0),
(447, '<img src=\"./image/question/447.jpg\"/> ', 2, 5, 49, 'Gate', 2015, 5, 0, 0),
(448, 'Language L1 is polynomial time reducible to language L2. Language L3 is polynomial time reducible to L2, which in turn is polynomial time reducible to language L4. Which of the following is/are True?', 3, 5, 56, 'Gate', 2015, 5, 0, 0),
(449, 'Which of the following languages are context-free? ', 3, 5, 49, 'Gate', 2015, 5, 0, 0),
(450, 'Which of the following is/are FALSE?', 3, 5, 25, 'Gate', 2014, 5, 0, 0),
(451, 'Consider the finite automaton in the following figure. <br/><br/><center><img src=\"./image/question/451.jpg\"/></center><br/>What is the set of reachable states fot the input string 0011?', 3, 5, 25, 'Gate', 2014, 5, 0, 0),
(452, '<img src=\"./image/question/452.jpg\"/>', 1, 5, 25, 'Gate', 2014, 5, 0, 0),
(453, 'Let A≤<sub>m</sub>B denotes that language A is mapping reducible (also known as many-to-one reducible) to language B. Which one of the following is FALSE?', 1, 5, 55, 'Gate', 2014, 5, 0, 0),
(454, 'Let <M> be the encoding of a Turing machine as a string over Σ = {0, 1}  Let L = {<M> |M is a Turing machine that accepts a string of length 2014}. Then, L is', 1, 5, 48, 'Gate', 2014, 5, 0, 0),
(455, 'Let L<sub>1</sub> = {w ∈ {0,1}* | w has at least as many occurrences of (110)’s as (011)’s}.  Let L<sub>2</sub> = {w ∈ {0,1}*|w  has at least as many occurrences of (000)’s as (111)’s}.  Which one of the following is TRUE?', 1, 5, 25, 'Gate', 2014, 5, 0, 0),
(456, 'The length of the shortest string NOT in the language (over Σ = {a b,} of the following regular is expression is ______________.<br/> <br/>\r\na*b*(ba)*a*', 2, 5, 25, 'Gate', 2014, 5, 0, 0),
(457, 'Let Σ be a finite non-empty alphabet and let 2<sup>Σ<sup>*</sup></sup> be the power set of Σ<sup>*</sup>.  Which one of the following is TRUE?', 1, 5, 55, 'Gate', 2014, 5, 0, 0),
(458, 'Which one of the following problems is undecidable?', 1, 5, 55, 'Gate', 2014, 5, 0, 0),
(459, 'Consider the following languages over the alphabet Σ = {0,1, c}: <br/><img src=\"./image/question/459.jpg\"/><br/>Here, w<sup>r</sup> is the reverse of the string . Which of these languages are deterministic Context-free languages?  ', 3, 5, 51, 'Gate', 2014, 5, 0, 0),
(460, 'Suppose you want to move from 0 to 100 on the number line. In each step, you either move right by a unit distance or you take a shortcut. A shortcut is simply a pre-specified pair of integers i, j with i < j.  Given a shortcut i, j if you are at position i on the number line, you may directly move to j. Suppose T(k) denotes the smallest number of steps needed to move from k to 100. Suppose further that there is at most 1 shortcut involving any number, and in particular from 9 there is a shortcut to 15. Let y and z be such that T(9) = 1   min(T(y),T(z)).  Then the value of the product yz is _____.', 2, 2, 11, 'Gate', 2014, 5, 0, 0),
(461, 'Which of the following statements is/are FALSE? ', 3, 5, 48, 'Gate', 2014, 5, 0, 0),
(462, 'Which of the following statements are TRUE? ', 3, 5, 27, 'Gate', 2013, 5, 0, 0),
(463, 'Which of the following statements are TRUE?\r\n<pre>\r\n1. The problem of determining whether there exists\r\n   a cycle in an undirected graph is in P.\r\n2. The problem of determining whether there exists\r\n   a cycle in an undirected graph is in NP.\r\n3. If a problem A is NP-Complete, there exists a \r\n   non-deterministic polynomial time algorithm to solve A.\r\n</pre>', 1, 5, 27, 'Gate', 2013, 5, 0, 0),
(464, 'Consider the DFA given<br/><center><img src=\"./image/question/464.jpg\"/></center><br/>Which of the following are FALSE? ', 3, 5, 50, 'Gate', 2013, 5, 0, 0),
(465, 'Which of the following is/are undecidable?<br/> <img src=\"./image/question/465.jpg\"/>', 3, 5, 55, 'Gate', 2013, 5, 0, 0),
(466, 'What is the complement of the language accepted by the NFA shown below?<br/><img src=\"./image/question/466.jpg\"/>', 1, 5, 50, 'Gate', 2012, 5, 0, 0),
(467, 'Which of the following problems are decidable?<br/><img src=\"./image/question/467.jpg\"/>', 3, 5, 55, 'Gate', 2012, 5, 0, 0),
(468, 'Given the language L ={ab,aa,baa}, which of the following strings are in L *? ', 3, 5, 55, 'Gate', 2012, 5, 0, 0),
(469, 'Consider the set of strings on {0,1} in which, every substring of 3 symbols has at most two zeros. For example, 001110 and 011001 are in the language, but 100010 is not. All strings of length less than 3 are also in the language. A partially completed DFA that accepts this language is shown below. <br/><img src=\"./image/question/469.jpg\"/><br/>The missing arcs in the DFA are  ', 1, 5, 50, 'Gate', 2012, 5, 0, 0),
(470, 'Let P be a regular language and Q be a context-free language such that Q ⊆ P. (For example, let P be the language represented by the regular expression p<sup>*</sup>q<sup>*</sup> and Q be [p<sup>n</sup>q<sup>n</sup> | n ∈ N]). Then which of the following is ALWAYS regular?', 1, 5, 50, 'Gate', 2011, 5, 0, 0),
(471, 'Which of the following pairs have DIFFERENT expressive power?', 1, 5, 49, 'Gate', 2011, 5, 0, 0),
(472, 'Definition of a language L with alphabet {a} is given as foloowing. <br/><img src=\"./image/question/472.jpg\"/><br/>What is the minimum number of states needed in a DFA to recognize L?', 1, 5, 49, 'Gate', 2011, 5, 0, 0),
(473, 'Consider the languages L1,L2 and L3 as given below.  <br/><img src=\"./image/question/473.jpg\"/><br/>Which of the following statements is NOT TRUE?  ', 1, 5, 49, 'Gate', 2011, 5, 0, 0),
(474, 'Let L1 be a recursive language. Let L2 and L3 be languages that are recursively enumerable but not recursive. Which of the following statements is not necessarily true? ', 1, 5, 49, 'Gate', 2010, 5, 0, 0),
(475, 'Let L = {w ∈ (0   1)* | w has even number of 1s}, i.e. L is the set of all bit strings with even number of 1s. Which one of the regular expression below represents L?  ', 1, 5, 49, 'Gate', 2010, 5, 0, 0),
(476, 'Which of the following languages are Context Free Language.', 3, 5, 51, 'Gate', 2010, 5, 0, 0),
(477, 'Let w be any string of length n is {0, 1}*. Let L be the set of all substrings of w. What is the minimum number of states in a non-deterministic finite automaton that accepts L?', 1, 5, 50, 'Gate', 2010, 5, 0, 0),
(478, '<pre>S → aSa|bSb|a|b;</pre><br/>The language generated by the above grammar over the alphabet {a,b} is the set of', 1, 5, 51, 'Gate', 2009, 5, 0, 0),
(479, 'Which one of the following languages over the alphabet {0,1} is described by the regular expression: (0 1)*0(0 1)*0(0 1)*?', 1, 5, 50, 'Gate', 2009, 5, 0, 0),
(480, 'Which one of the following is FALSE?', 1, 5, 49, 'Gate', 2009, 5, 0, 0),
(481, 'Given the following state table of an FSM with two states A and B, one input and one output: <br/><img src=\"./image/question/481.jpg\"/><br/>If the initial state is A = 0, B=0, what is the minimum length of an input string which will take the machine to the state A=0, B=1 with Output=1?  ', 2, 5, 50, 'Gate', 2009, 5, 0, 0),
(482, '<img src=\"./image/question/482.jpg\"/> ', 1, 5, 49, 'Gate', 2009, 5, 0, 0),
(483, '<img src=\"./image/question/483.jpg\"/> <br/>The above DFA accepts the set of all strings over {0,1} that ', 1, 5, 50, 'Gate', 2009, 5, 0, 0),
(484, 'Which of the following is true for the language {a<sup>p</sup>|p is a prime} ?  ', 1, 5, 49, 'Gate', 2008, 5, 0, 0),
(485, 'Which of the following are decidable? ', 3, 5, 55, 'Gate', 2008, 5, 0, 0),
(486, '<img src=\"./image/question/486.jpg\"/>', 1, 5, 49, 'Gate', 2008, 5, 0, 0),
(487, 'Which of the following statements is false?', 1, 5, 49, 'Gate', 2008, 5, 0, 0),
(488, 'Given below are two finite state automata (® indicates the start state and F indicates a final state)<br/><img src=\"./image/question/488.jpg\"/><br/>Which of the following represents the product automaton Z×Y? ', 1, 5, 50, 'Gate', 2008, 5, 0, 0),
(489, 'Which of the following statements are true?', 3, 5, 51, 'Gate', 2008, 5, 0, 0),
(490, 'Match the following:<br/><img src=\"./image/question/490.jpg\"/><br/>', 1, 5, 49, 'Gate', 2008, 5, 0, 0),
(491, '<img src=\"./image/question/491.jpg\"/><br/>', 1, 5, 50, 'Gate', 2008, 5, 0, 0),
(492, 'Which of the following are regular sets? <br/><img src=\"./image/question/492.jpg\"/><br/>', 3, 5, 49, 'Gate', 2008, 5, 0, 0),
(493, 'Let N be an NFA with n states and let M be the minimized DFA with m states recognizing the same language. Which of the following in NECESSARILY true?', 1, 5, 50, 'Gate', 2008, 5, 0, 0),
(494, 'If the final states and non-final states in the DFA below are interchanged, then which of the following languages over the alphabet {a,b} will be accepted by the new DFA? <br/><img src=\"./image/question/494.jpg\"/>', 1, 5, 50, 'Gate', 2008, 5, 0, 0),
(495, 'Two balls are drawn uniformly at random without replacement from a set of five ballsnumbered 1, 2, 3, 4, 5. What is the expected value of the larger number on the ballsdrawn?', 2, 11, 57, 'TIFR', 2020, 5, 0, 0),
(496, 'Let M be a real n × n matrix such that for every non-zero vector x ∈ R<sup>n</sup> , we have x<sup>T</sup> M<sub>x</sub> > 0. Then', 1, 10, 59, 'TIFR', 2020, 5, 0, 0),
(497, 'Minimum number of states required in DFA accepting binary strings not ending in “101”is', 2, 5, 50, 'ISRO', 2020, 5, 0, 0),
(498, 'The language which is generated by the grammar S → aSa⏐bSb⏐a⏐b over the alphabet{a,  b}  is  the  set  of', 1, 5, 50, 'ISRO', 2020, 5, 0, 0),
(499, 'Which  of  the  following  is  true?', 1, 5, 50, 'ISRO', 2020, 5, 0, 0),
(500, 'Context free languages are closed under', 1, 5, 51, 'ISRO', 2020, 5, 0, 0),
(501, 'The  number  of  tokens  in  the  following  C  code  segment  is\r\n<pre>\r\nswitch(inputvalue)\r\n{\r\n    case 1 :\r\n         b  =  c  *  d;\r\n         break;\r\n    default :\r\n         b  =  b++;\r\n         break;\r\n}\r\n</pre>', 2, 6, 39, 'ISRO', 2020, 5, 0, 0),
(502, 'What  is  compaction  refers  to', 1, 1, 36, 'ISRO', 2020, 5, 0, 0),
(503, 'An aid to determine the deadlock occurrence is', 1, 1, 60, 'ISRO', 2020, 5, 0, 0),
(504, 'Dispatch  latency  is  defined  as', 1, 1, 1, 'ISRO', 2020, 5, 0, 0),
(505, 'Which  of  the  following  algorithms  defines  time  quantum?', 1, 1, 1, 'ISRO', 2020, 5, 0, 0),
(506, 'The hardware implementation which provides mutual exclusion is', 1, 1, 2, 'ISRO', 2020, 5, 0, 0),
(507, 'Of the following sort algorithms, which has execution time that is least dependent on initial ordering of the input ?', 1, 2, 5, 'ISRO', 2020, 5, 0, 0),
(508, 'The following circuit compares two 2-bit binary numbers, X and Y represented by X1X0 and Y1Y0 respectively. (X0 and Y0 represent Least Significant Bits) <br/><center><img src=\"./image/question/508.jpg\"/></center><br/>Under what condition Z will be 1 ?', 1, 9, 62, 'ISRO', 2020, 5, 0, 0),
(509, 'Consider a 5-segment pipeline with a clock cycle time 20 ns in each sub operation. Find out the approximate speed-up ratio between pipelined and non-pipelined system to execute 100 instructions. (If an average, every five cycles, a bubble due to data hazard has to be introduced in the pipeline.).', 2, 4, 35, 'ISRO', 2020, 5, 0, 0),
(510, 'Consider a 32-bit processor which supports 70 instructions. Each instruction is 32 bit long and has 4 fields namely opcode, two register identifiers and an immediate operand of unsigned integer type. Maximum value of the immediate operand that can be supported by the processor is 8191. How many registers the processor has ?', 2, 4, 35, 'ISRO', 2020, 5, 0, 0),
(511, 'In a 8-bit ripple carry adder using identical full adders, each full adder takes 34 ns for computing sum. If the time taken for 8-bit addition is 90 ns, find time(ns) taken by each full adder to find carry.', 2, 9, 62, 'ISRO', 2020, 5, 0, 0),
(512, 'Following Multiplexer circuit is equivalent to <br/><center><img src=\"./image/question/512.jpg\"/></center>', 3, 9, 62, 'ISRO', 2020, 5, 0, 0),
(513, 'A stack is implemented with an array of ‘A[0...N – 1]’ and a variable ‘pos’. The push and pop operations are defined by the following code.\r\n<pre>\r\npush (x)\r\n  A[pos] ← x\r\n  pos ← pos – 1\r\nend push\r\n\r\npop ( )\r\n  pos ← pos + 1\r\n  return A[pos]\r\nend pop \r\n</pre>\r\nWhich of the following will initialize an empty stack with capacity N for the above implementation ?', 1, 9, 62, 'ISRO', 2020, 5, 0, 0),
(514, 'Given that\r\n<pre>\r\nB(a) means “a is a bear”\r\nF(a) means “a is a fish” and\r\nE(a, b) means “a eats b” \r\n</pre>\r\nThen what is the best meaning of\r\n<pre>\r\n∀x[F(x) ⇒ ∀y(E(y, x) ⇒ B(y))] \r\n</pre>', 1, 10, 63, 'ISRO', 2020, 5, 0, 0),
(515, 'Following declaration of an array of struct, assumes size of byte, short, int and long are 1, 2, 3 and 4 respectively. Alignment rule stipulates that n-byte field must be located at an address divisible by n. The fields in a struct are not rearranged, padding is used to ensure alignment. All elements of array should be of same size.\r\n<pre>\r\nStruct complx\r\n  Short s\r\n  Byte b\r\n  Long l\r\n  Int i\r\nEnd complx\r\nComplx C[10] \r\n</pre>\r\nAssuming C is located at an address divisible by 8, what is the total size of C, in Bytes ?', 2, 7, 26, 'ISRO', 2020, 5, 0, 0),
(516, 'The immediate addressing mode can be used for<pre>\r\n    1. Loading internal registers with initial values\r\n    2. Perform arithmetic or logical operation on data contained in instructions\r\n</pre>\r\nWhich of the following is true ?', 1, 4, 64, 'ISRO', 2020, 5, 0, 0),
(517, 'Statements associated with registers of a CPU are given. Identify the false statement.', 1, 4, 65, 'ISRO', 2020, 5, 0, 0),
(518, 'Which of the following affects the processing power assuming they do not influence each other.\r\n<pre>\r\n   1.Data bus capability\r\n   2. Addressing scheme\r\n   3. Clock speed\r\n</pre>', 1, 4, 65, 'ISRO', 2020, 5, 0, 0),
(519, 'Convert the pre-fix expression to in-fix\r\n<pre>\r\n–* + ABC* – DE + FG \r\n</pre>', 1, 3, 28, 'ISRO', 2020, 5, 0, 0),
(520, 'G is an undirected graph with vertex set {v1, v2, v3, v4, v5, v6, v7} and edge set {v1v2, v1v3, v1v4, v2v4, v2v5, v3v4, v4v5, v4v6, v5v6, v6v7}. A breadth first search of the graph is performed with v1 as the root node. Which of the following is a tree edge ?', 1, 3, 7, 'ISRO', 2020, 5, 0, 0),
(521, 'If the array A contains the items 10, 4, 7, 23, 67, 12 and 5 in that order, what will be the resultant array A after third pass of insertion sort ?', 1, 3, 5, 'ISRO', 2020, 5, 0, 0),
(522, 'Huffman tree is constructed for the following data: {A, B, C, D, E} with frequency {0.17, 0.11, 0.24, 0.33 and 0.15} respectively. 100 00 01101 is decoded as', 1, 2, 13, 'ISRO', 2020, 5, 0, 0),
(523, 'Given the grammar:\r\n<pre>\r\nS → T * S | T\r\nT → U + T | U\r\nU → a | b \r\n</pre>\r\nWhich of the following statement is wrong ?', 1, 6, 51, 'ISRO', 2020, 5, 0, 0),
(524, 'What is the complexity of the following code ?\r\n<pre>\r\nsum = 0;\r\n  for (i = 1; i <= n; i*= 2)\r\n    for(j = 1; j <= n; j++)\r\n      sum++; \r\n</pre>\r\nWhich of the following is not a valid string ?', 1, 2, 11, 'ISRO', 2020, 5, 0, 0),
(525, 'In the following procedure\r\n<pre>\r\nInteger procedure P(X, Y);\r\nInteger X,Y:\r\nvalue x;\r\nbegin\r\n  K = 5;\r\n  L = 8;\r\n  P = x + y;\r\nend \r\n</pre>\r\nX is called by value and Y is called by name. If the procedure were invoked by the following program fragment\r\n<pre>\r\nK = 0;\r\n  L = 0;\r\n  Z = P(K, L); \r\n</pre>\r\nthen the value Z would be set equal to', 1, 7, 26, 'ISRO', 2020, 5, 0, 0),
(526, 'Consider product of three matrices M1, M2 and M3 having w rows and x columns, x rows and y columns, and y rows and z columns. Under what condition will it take less time to compute the product as (M1M2)M3 than to compute M1(M2M3) ? ', 1, 2, 3, 'ISRO', 2020, 5, 0, 0),
(527, 'Consider the following languages. L1 = {a<sup>i</sup> b<sup>j</sup> c<sup>k</sup> | i = j, k ≥ 1} L1 = {a<sup>i</sup> b<sup>j</sup> | j = 2i, i ≥ 0} Which of the following is true?', 1, 5, 49, 'Gate', 2008, 5, 0, 0),
(528, 'Consider a CFG with the following productions.<pre> S → AA | B A → 0A | A0 | 1 B → 0B00 | 1</pre> S is the start symbol, A and B are non-terminals and 0 and 1 are the terminals. The language generated by this grammar is', 1, 5, 51, 'Gate', 2008, 5, 0, 0),
(529, 'Which of the following languages is (are) non-regular? L<sub>1</sub> = {0<sup>m</sup>1<sup>n</sup> | 0 ≤ m ≤ n ≤ 10000} L<sub>2</sub> = {w | w reads the same forward and backward} L<sub>3</sub> = {w ∊ {0, 1} * | w contains an even number of 0\'s and an even number of 1\'s}', 1, 5, 49, 'Gate', 2008, 5, 0, 0),
(530, 'Consider the following two finite automata. M1 accepts L1 and M2 accepts L2. <br/><img src=\"./image/question/530.jpg\"/><br/>Which one of the following is TRUE?', 3, 5, 50, 'Gate', 2008, 5, 0, 0),
(531, 'A CFG G is given with the following productions where S is the start symbol, A is a non-terminal and a and b are terminals.\r\n<pre>\r\n S→aS∣A\r\n A→aAb∣bAa∣ϵ\r\n</pre>\r\n Which of the following strings is generated by the grammar above?', 1, 5, 51, 'Gate', 2008, 5, 0, 0),
(532, 'Which of the following problems is undecidable? ', 1, 5, 55, 'Gate', 2007, 5, 0, 0),
(533, 'Which of the following is TRUE?', 1, 5, 25, 'Gate', 2007, 5, 0, 0),
(534, '  A minimum state deterministic finite automaton accepting the language L={w | w ε {0,1} *, number of 0s and 1s in w are divisible by 3 and 5, respectively} has ______ states.', 2, 5, 50, 'Gate', 2007, 5, 0, 0),
(535, 'The language L = {0<sup>i</sup>21<sup>i</sup> | i≥0} over the alphabet {0,1, 2} is: ', 1, 5, 51, 'Gate', 2007, 5, 0, 0),
(536, 'Which of the following languages is regular? ', 1, 5, 25, 'Gate', 2007, 5, 0, 0),
(537, '<img src=\"./image/question/537.jpg\"/>', 1, 5, 50, 'Gate', 2007, 5, 0, 0),
(538, 'Consider the following DFA in which s0 is the start state and s1, s3 are the final states.<br/>\r\n<center><img src=\"./image/question/538.jpg\"/></center><br/>What language does this DFA recognize ?', 1, 5, 50, 'Gate', 2007, 5, 0, 0),
(539, 'Consider the grammar given below\r\n<pre>\r\nS → x B | y A \r\nA → x | x S | y A A \r\nB → y | y S | y B B \r\n</pre>\r\nConsider the following strings. \r\n<pre>\r\n(i) xxyyx \r\n(ii) xxyyxy \r\n(iii) xyxy \r\n(iv) yxxy \r\n(v) yxx \r\n(vi) xyx \r\n</pre>\r\nWhich of the above strings are generated by the grammar ?', 1, 5, 51, 'Gate', 2007, 5, 0, 0),
(540, 'Consider the following grammars. Names representing terminals have been specified in capital letters. <br/><img src=\"./image/question/540.jpg\"/><br/>Which one of the following statements is true?  ', 1, 5, 49, 'Gate', 2007, 5, 0, 0),
(541, 'Which one of the following is not decidable?', 1, 5, 55, 'Gate', 1997, 5, 0, 0),
(542, 'Which one of the following regular expressions over {0,1} denotes the set of all strings not containing 100 as a substring?', 1, 5, 25, 'Gate', 1997, 5, 0, 0),
(543, 'Given Σ = {a,b}, which one of the following sets is not countable?', 1, 5, 55, 'Gate', 1997, 5, 0, 0),
(544, 'Which of the following statements is false?', 1, 5, 50, 'Gate', 1998, 5, 0, 0),
(545, 'Let L be the set of all binary strings whose last two symbols are the same. The number of states in the minimum state deterministic finite automaton accepting L is', 2, 5, 50, 'Gate', 1998, 5, 0, 0),
(546, 'How many sub strings of different lengths (non-zero) can be found formed from a character string of length n?      ', 1, 5, 50, 'Gate', 1998, 5, 0, 0),
(547, 'Which of the following set can be recognized by a Deterministic Finite state Automaton?  ', 1, 5, 50, 'Gate', 1998, 5, 0, 0),
(548, 'If the regular set A is represented by A = (01+1)* and the regular set ‘B’ is represented by B = ((01)*1*)*, which of the following is true?', 1, 5, 50, 'Gate', 1998, 5, 0, 0),
(549, 'A grammar that is both left and right recursive for a non-terminal, is', 1, 5, 51, 'Gate', 1999, 5, 0, 0),
(550, 'If L is context free language and L2 is a regular language which of the following is/are false?  ', 3, 5, 49, 'Gate', 1999, 5, 0, 0),
(551, 'Let L<sub>D</sub> be the set of all languages accepted by a PDA by final state and L<sub>E</sub>  the set of all languages accepted by empty stack. Which of the following is true?  ', 1, 5, 49, 'Gate', 1999, 5, 0, 0),
(552, 'Context-free languages are closed under:', 1, 5, 51, 'Gate', 1999, 5, 0, 0),
(553, 'Consider the regular expression (0 + 1) (0 + 1)…. N times. The minimum state finite  automation  that  recognizes  the  language  represented  by  this  regular expression contains', 1, 5, 50, 'Gate', 1999, 5, 0, 0),
(554, '<img src=\"./image/question/554.jpg\"/>', 1, 5, 55, 'Gate', 2000, 5, 0, 0),
(555, 'What can be said about a regular language L over {a} whose minimal finite state automation has two states?', 1, 5, 50, 'Gate', 2000, 5, 0, 0),
(556, '<img src=\"./image/question/556.jpg\"/>', 1, 5, 51, 'Gate', 2000, 5, 0, 0),
(557, 'Let S and T be language over Σ = {a,b} represented by the regular expressions (a+b*)* and (a+b)*, respectively. Which of the following is true?', 1, 5, 25, 'Gate', 2000, 5, 0, 0),
(558, 'The C language is:', 1, 5, 26, 'Gate', 2002, 5, 0, 0),
(559, 'Which of the following is true?', 1, 5, 49, 'Gate', 2002, 5, 0, 0),
(560, 'The smallest finite automaton which accepts the language {x|length of x is divisible by 3} has_____states', 2, 5, 50, 'Gate', 2002, 5, 0, 0),
(561, '<img src=\"./image/question/561.jpg\"/>', 1, 5, 50, 'Gate', 2002, 5, 0, 0),
(562, 'The language accepted by a Pushdown Automaton in which the stack is limited to 10 items is best described as', 1, 5, 51, 'Gate', 2002, 5, 0, 0),
(563, '<img src=\"./image/question/563.jpg\"/>', 1, 5, 50, 'Gate', 2002, 5, 0, 0),
(564, 'Define languages L0 and L1 as follows :\r\n<pre>\r\nL0 = {< M, w, 0 > | M halts on w}\r\nL1 = {< M, w, 1 > | M does not halts on w}\r\n</pre>\r\nHere < M, w, i > is a triplet, whose first component. M is an encoding of a Turing Machine, second component, w, is a string, and third component, i, is a bit. Let L = L0 ∪ L1. Which of the following is true ?', 1, 5, 49, 'Gate', 2003, 5, 0, 0),
(565, 'A single tape Turing Machine M has two states q0 and q1, of which q0 is the starting state. The tape alphabet of M is {0, 1, B} and its input alphabet is {0, 1}. The symbol B is the blank symbol used to indicate end of an input string. The transition function of M is described in the following table\r\n<pre>\r\n	 0 	         1 	         B\r\n q0 	 q1, 1, R 	 q1, 1, R 	 Halt\r\n q1 	 q1, 1, R 	 q0, 1, L 	 q0, B, L\r\n</pre>\r\nThe table is interpreted as illustrated below. The entry (q1, 1, R) in row q0 and column 1 signifies that if M is in state q0 and reads 1 on the current tape square, then it writes 1 on the same tape square, moves its tape head one position to the right and transitions to state q1. Which of the following statements is true about M ?', 1, 5, 48, 'Gate', 2003, 5, 0, 0),
(566, 'Consider two languages L1 and L2 each on the alphabet ∑. Let f : ∑ → ∑ be a polynomial time computable bijection such that (∀ x) [x ∈ L1 iff f(x) ∈ L2]. Further, let f<sup>-1</sup> be also polynomial time computable. Which of the following CANNOT be true?', 1, 5, 55, 'Gate', 2003, 5, 0, 0),
(567, 'Let G = ({S}, {a, b} R, S) be a context free grammar where the rule set R is S → a S b | SS | ε Which of the following statements is true?', 1, 5, 51, 'Gate', 2003, 5, 0, 0),
(568, 'Consider the following deterministic finite state automaton M. <br/><center><img src=\"./image/question/568.jpg\"/></center><br/>Let S denote the set of seven bit binary strings in which the first, the fourth, and the last bits are 1. The number of strings in S that are accepted by M is    ', 2, 5, 50, 'Gate', 2003, 5, 0, 0),
(569, 'If the strings of a language L can be effectively enumerated in lexicographic (i.e., alphabetic) order, which of the following statements is true?  ', 1, 5, 49, 'Gate', 2003, 5, 0, 0),
(570, 'The regular expression 0*(10*)* denotes the same set as  ', 1, 5, 25, 'Gate', 2003, 5, 0, 0),
(571, '<img src=\"./image/question/571.jpg\"/><br/>Which one of the following strings is not a member of L (M)?', 1, 5, 51, 'Gate', 2004, 5, 0, 0),
(572, 'Which one of the following statements is FALSE?', 1, 5, 49, 'Gate', 2004, 5, 0, 0),
(573, 'Which one of the following regular expressions is NOT equivalent to the regular expression (a + b + c)*?  ', 1, 5, 25, 'Gate', 2004, 5, 0, 0),
(574, '<img src=\"./image/question/574.jpg\"/>', 1, 5, 49, 'Gate', 2004, 5, 0, 0),
(575, 'The language {a<sup>m</sup> b<sup>n</sup> C<sup>m+n</sup> | m,n ≥ 1} is', 1, 5, 49, 'Gate', 2004, 5, 0, 0),
(576, '<img src=\"./image/question/576.jpg\"/>', 1, 5, 50, 'Gate', 2004, 5, 0, 0),
(577, 'Consider a simple graph with unit edge costs. Each node in the graph represents a router. Each node maintains a routing table indicating the next hop router to be used to relay a packet to its destination and the cost of the path to the destination through that router. Initially, the routing table is empty. The routing table is synchronously updated as follows. In each updation interval, three tasks are performed. <pre> 1. A node determines whether its neighbours in the graph are accessible. If so, it sets the tentative cost to each accessible neighbour as 1. Otherwise, the cost is set to ∞. <br/>2. From each accessible neighbour, it gets the costs to relay to other nodes via that neighbour (as the next hop).<br/> 3. Each node updates its routing table based on the information received in the previous two steps by choosing the minimum cost. </pre> <img src=\"./image/question/577.jpg\"/><br/>  For the graph given above, possible routing tables for various nodes after they have stabilized, are shown in the following options. Identify the correct table.  ', 1, 8, 50, 'Gate', 2004, 5, 0, 0),
(578, 'Consider the context-free grammar\r\n<pre>\r\n E → E + E \r\n E → (E * E)\r\n E → id\r\n</pre>\r\nwhere E is the starting symbol, the set of terminals is {id, (,+,),*}, and the set of non-terminals is {E}.\r\nFor the terminal string id + id + id + id, how many parse trees are possible?', 2, 8, 51, 'Gate', 2005, 5, 0, 0),
(579, 'Consider the context-free grammar<pre> E → E   E  E → (E * E) E → id</pre>where E is the starting symbol, the set of terminals is {id, (, ,),*}, and the set of non-terminals is {E}.Which of the following terminal strings has more than one parse tree when parsed according to the above grammar?', 1, 8, 25, 'Gate', 2005, 5, 0, 0),
(580, 'A language L satisfies the Pumping Lemma for regular languages, and also the Pumping Lemma for context-free languages. Which of the following statements about L is TRUE?', 1, 8, 54, 'Gate', 2005, 5, 0, 0),
(581, 'Consider the regular grammar:\r\n<pre>\r\n S → Xa | Ya\r\n X → Za\r\n Z → Sa | ϵ\r\n Y → Wa\r\n W → Sa\r\n</pre>\r\n where S is the starting symbol, the set of terminals is {a} and the set of non-terminals is {S, W, X, Y, Z}. We wish to construct a deterministic finite automaton (DFA) to recognize the same language. What is the minimum number of states required for the DFA?', 2, 8, 50, 'Gate', 2005, 5, 0, 0),
(582, 'Consider the non-deterministic finite automaton (NFA) shown in the figure. <br/><center><img src=\"./image/question/582.jpg\"/></center><br/>State X is the starting state of the automaton. Let the language accepted by the NFA with Y as the only accepting state be L1. Similarly, let the language accepted by the NFA with Z as the only accepting state be L2. Which of the following statements about L1 and L2 is TRUE? Correction in Question: There is an edge from Z->Y labeled 0 and another edge from Y->Z labeled 1 - in place of double arrowed and no arrowed edges.   ', 1, 8, 25, 'Gate', 2005, 5, 0, 0),
(583, 'Which of the following expressions is equivalent to (A⊕B)⊕C', 1, 9, 67, 'Gate', 2005, 5, 0, 0),
(584, 'The language {0<sup>n</sup> 1<sup>n</sup> 2<sup>n</sup> | 1 ≤ n ≤ 106} is', 1, 5, 25, 'Gate', 2005, 5, 0, 0),
(585, 'Which of the following statements is TRUE about the regular expression 01*0?', 1, 5, 25, 'Gate', 2005, 5, 0, 0),
(586, 'Let L be a regular language and M be a context-free language, both over the alphabet Σ. Let L<sup>c</sup> and M<sup>c</sup> denote the complements of L and M respectively. Which of the following statements about the language if L<sup>c</sup> ∪ M<sup>c</sup> is TRUE?', 1, 5, 25, 'Gate', 2005, 5, 0, 0),
(587, 'Consider three decision problems P1, P2 and P3. It is known that P1 is decidable and P2 is undecidable. Which one of the following is TRUE?', 1, 5, 27, 'Gate', 2005, 5, 0, 0),
(588, 'Consider the machine M: <br/><center><img src=\"./image/question/582.jpg\"/></center><br/>The language recognized by M is :    ', 1, 5, 50, 'Gate', 2005, 5, 0, 0),
(589, 'Let N<sub>f</sub> and N<sub>p</sub> denote the classes of languages accepted by non-deterministic finite automata and non-deterministic push-down automata, respectively. Let D<sub>f</sub> and D<sub>p</sub> denote the classes of languages accepted by deterministic finite automata and deterministic push-down automata, respectively. Which one of the following is TRUE?', 1, 5, 50, 'Gate', 2005, 5, 0, 0),
(590, 'Let L<sub>1</sub> be a recursive language, and let L<sub>2</sub> be a recursively enumerable but not a recursive language. Which one of the following is TRUE?  ', 1, 5, 49, 'Gate', 2005, 5, 0, 0),
(591, 'Consider the languages:\r\n<pre>\r\nL1 = {a<sup>n</sup>b<sup>n</sup>c<sup>m</sup> | n, m > 0} \r\nL2 = {a<sup>n</sup>b<su>m</sup>c<sup>m</sup> | n, m > 0}\r\n</pre>\r\nWhich one of the following statements is FALSE? ', 1, 5, 51, 'Gate', 2005, 5, 0, 0),
(592, 'Consider the languages:<br/><pre>L1 = {ww<sup>R</sup> |w ∈ {0, 1}*}<br/>L2 = {w#w<sup>R</sup> | w ∈ {0, 1}*}, where # is a special symbol<br/>L3 = {ww |  w ∈  (0, 1}*)</pre><br/>Which one of the following is TRUE?', 1, 5, 51, 'Gate', 2005, 5, 0, 0),
(593, 'The following diagram represents a finite state machine which takes as input a binary number from the least significant bit. <br/><center><img src=\"./image/question/593.jpg\"/></center><br/>Which one of the following is TRUE?      ', 1, 5, 50, 'Gate', 2005, 5, 0, 0),
(594, 'Let L be a regular language. Consider the constructions on L below:\r\n<pre>\r\n repeat (L) = {ww | w ∊ L}\r\n prefix (L) = {u | ∃v : uv ∊ L}\r\n suffix (L) = {v | ∃u uv ∊ L}\r\n half (L) = {u | ∃v : | v | = | u | and uv ∊ L}\r\n</pre>\r\n Which of the constructions could lead to a non-regular language?  ', 1, 5, 50, 'Gate', 2006, 5, 0, 0),
(595, 'Let L be a regular language. Consider the constructions on L below:\r\n<pre>\r\n repeat (L) = {ww | w ∊ L}\r\n prefix (L) = {u | ∃v : uv ∊ L}\r\n suffix (L) = {v | ∃u uv ∊ L}\r\n half (L) = {u | ∃v : | v | = | u | and uv ∊ L}\r\n</pre>\r\n Which of the constructions could lead to a non-regular language?  ', 1, 5, 50, 'Gate', 2006, 5, 0, 0),
(596, 'Consider the following finite automata P and Q over the alphabet {a, b, c}. The start states are indicated by a double arrow and final states are indicated by a double circle. Let the languages recognized by them be denoted by L(P) and L(Q) respectively.  <br/><center><img src=\"./image/question/596.jpg\"/></center><br/>The automation which recognizes the language L(P) ∩ L(Q) is :       ', 1, 5, 50, 'Gate', 2007, 5, 0, 0),
(597, 'Consider the regular expression R = (a + b)* (aa + bb) (a + b)* Which deterministic finite automaton accepts the language represented by the regular expression R ?', 1, 5, 50, 'Gate', 2007, 5, 0, 0),
(598, 'For S ∈ (0 + 1) * let d(s) denote the decimal value of s (e.g. d(101) = 5). Let L = {s ∈ (0 + 1)* d(s)mod5 = 2 and d(s)mod7 != 4}. Which one of the following statements is true?', 1, 5, 49, 'Gate', 2006, 5, 0, 0),
(599, 'If s is a string over (0 + 1)* then let n<sub>0</sub>(s) denote the number of 0’s in s and n<sub>1</sub>(s) the number of 1’s in s. Which one of the following languages is not regular?', 1, 5, 25, 'Gate', 2006, 5, 0, 0),
(600, '<img src=\"./image/question/600.jpg\"/>     ', 1, 5, 51, 'Gate', 2006, 5, 0, 0),
(601, 'In the correct grammar of above question, what is the length of the derivation (number of steps starting from S) to generate the string a<sup>l</sup>b<sup>m</sup> with l≠m?', 1, 5, 51, 'Gate', 2006, 5, 0, 0),
(602, 'Which one of the following grammars generates the language L = {a<sup>i</sup>b<sup>j</sup> | i≠j}?', 1, 5, 51, 'Gate', 2006, 5, 0, 0),
(603, 'Consider the regular language L = (111 + 11111)*. The minimum number of states in any DFA accepting this language is:', 2, 5, 50, 'Gate', 2006, 5, 0, 0),
(604, 'Let L1 be a regular language, L2 be a deterministic context-free language and L3 a recursively enumerable, but not recursive, language. Which one of the following statements is false?', 1, 5, 51, 'Gate', 2006, 5, 0, 0),
(605, 'Consider the following statements about the context free grammar\r\n<pre>\r\nG = {S → SS, S → ab, S → ba, S → Ε}\r\nI. G is ambiguous\r\nII. G produces all strings with equal number of a’s and b’s\r\nIII. G can be accepted by a deterministic PDA.\r\n</pre>\r\nWhich combination below expresses all the true statements about G?', 1, 5, 51, 'Gate', 2006, 5, 0, 0),
(606, 'In the automaton below, s is the start state and t is the only final state.  <br/><center><img src=\"./image/question/606.jpg\"/></center><br/>Consider the strings u = abbaba, v = bab, and w = aabb. Which of the following statements is true?  ', 1, 5, 50, 'Gate', 2006, 5, 0, 0),
(607, 'In the context-free grammar below, S is the start symbol, a and b are terminals, and ϵ denotes the empty string \r\n<pre>\r\nS → aSa | bSb | a | b | ϵ \r\n</pre>\r\nWhich of the following strings is NOT generated by the grammar?', 1, 5, 51, 'Gate', 2006, 5, 0, 0),
(608, 'Which regular expression best describes the language accepted by the non-deterministic automaton below?  <br/><center><img src=\"./image/question/608.jpg\"/></center>', 1, 5, 50, 'Gate', 2006, 5, 0, 0),
(609, 'Which of the following languages is accepted by a non-deterministic pushdown automaton (PDA) but NOT by a deterministic PDA?', 1, 5, 49, 'Gate', 2006, 5, 0, 0),
(610, 'Which of the following statements about regular languages is NOT true?', 1, 5, 50, 'Gate', 2006, 5, 0, 0),
(611, 'Consider the regular grammar below \r\n<pre>\r\nS → bS | aA | ϵ A → aS | bA\r\n</pre> \r\nThe Myhill-Nerode equivalence classes for the language generated by the grammar are  ', 1, 5, 50, 'Gate', 2006, 5, 0, 0),
(612, 'Let L be a context-free language and M a regular language. Then the language L ∩ M is', 1, 5, 51, 'Gate', 2006, 5, 0, 0),
(613, 'For a state machine with the following state diagram the expression for the next state S  in terms of the current state S and the input variables x and y is   <br/><center><img src=\"./image/question/612.jpg\"/></center>', 1, 5, 50, 'Gate', 2006, 5, 0, 0),
(614, 'In the context-free grammar below, S is the start symbol, a and b are terminals, and ϵ denotes the empty string.<pre> S → aSAb | ϵ A → bA | ϵ </pre>The grammar generates the language', 1, 5, 51, 'Gate', 2006, 5, 0, 0);
INSERT INTO `question` (`q_id`, `question`, `type`, `sub_id`, `topic_id`, `source`, `year`, `life`, `attampt`, `correct`) VALUES
(615, 'Consider the pushdown automaton (PDA) below which runs over the input alphabet (a, b, c). It has the stack alphabet {Z<sub>0</sub>, X} where Z<sub>0</sub> is the bottom-of-stack marker. The set of states of the PDA is (s, t, u, f} where s is the start state and f is the final state. The PDA accepts by final state. The transitions of the PDA given below are depicted in a standard manner. For example, the transition (s, b, X) → (t, XZ<sub>0</sub>) means that if the PDA is in state s and the symbol on the top of the stack is X, then it can read b from the input and move to state t after popping the top of stack and pushing the symbols Z<sub>0</sub> and X (in that order) on the stack.\r\n<pre>\r\n (s, a, Z<sub>0</sub>) → (s, XXZ<sub>0</sub>)\r\n (s, ϵ, Z<sub>0</sub>) → (f, ϵ)\r\n (s, a, X) → (s, XXX)\r\n (s, b, X) → (t, ϵ)\r\n (t, b, X) → (t,.ϵ)\r\n (t, c, X) → (u, ϵ)\r\n (u, c, X) → (u, ϵ)\r\n (u, ϵ, Z0) → (f, ϵ)\r\n </pre>\r\nThe language accepted by the PDA is', 1, 5, 51, 'Gate', 2006, 5, 0, 0),
(616, '<img src=\"./image/question/616.jpg\"/>', 1, 5, 51, 'Gate', 1997, 5, 0, 0),
(617, '<img src=\"./image/question/617.jpg\"/>', 3, 5, 25, 'Gate', 1996, 5, 0, 0),
(618, 'Which of the following statements is false?', 1, 5, 49, 'Gate', 1996, 5, 0, 0),
(619, 'Let L ⊆ Σ* where Σ = {a, b}. Which of the following is true?', 1, 5, 49, 'Gate', 1996, 5, 0, 0),
(620, 'If L1 and L2 are context free languages and R a regular set, one of the languages below is not necessarily a context free language. Which one?', 1, 5, 49, 'Gate', 1996, 5, 0, 0),
(621, '<img src=\"./image/question/621.jpg\"/>', 1, 5, 51, 'Gate', 1996, 5, 0, 0),
(622, '<img src=\"./image/question/622.jpg\"/>', 1, 5, 51, 'Gate', 1996, 5, 0, 0),
(623, '<img src=\"./image/question/623.jpg\"/>', 2, 5, 50, 'Gate', 1996, 5, 0, 0),
(624, 'In some programming languages, an identifier is permitted to be a letter following by any number of letters or digits. If L and D denote the sets of letters and digits respectively, which of the following expressions defines an identifier?', 1, 5, 25, 'Gate', 1995, 5, 0, 0),
(625, '<img src=\"./image/question/625.jpg\"/>', 1, 5, 49, 'Gate', 1995, 5, 0, 0),
(626, '<img src=\"./image/question/626.jpg\"/>', 1, 5, 49, 'Gate', 1995, 5, 0, 0),
(627, '<img src=\"./image/question/627.jpg\"/>', 1, 5, 25, 'Gate', 1995, 5, 0, 0),
(628, 'Let Σ = {0,1}, L = Σ* and R = {0<sup>n</sup>1<sup>n</sup> such that n >0} then the languages L ∪ R and R are respectively', 1, 5, 25, 'Gate', 1995, 5, 0, 0),
(629, 'Which of the following conversions is not possible (algorithmically)?', 1, 5, 49, 'Gate', 1994, 5, 0, 0),
(630, 'Which of the following features cannot be captured by context-free grammars?', 1, 5, 51, 'Gate', 1994, 5, 0, 0),
(631, 'A context-free grammar is ambiguous if:', 1, 5, 51, 'Gate', 1987, 5, 0, 0),
(632, 'Which of the following problems are decidable?', 3, 5, 51, 'Gate', 1989, 5, 0, 0),
(633, 'Context-free languages and regular languages are both closed under the operation(s) of :  ', 3, 5, 51, 'Gate', 1989, 5, 0, 0),
(634, 'Let R1 and R2 be Regular sets defined over the alphabet ∑,Then', 3, 5, 25, 'Gate', 1990, 5, 0, 0),
(635, 'It is undecidable whether:', 3, 5, 55, 'Gate', 1990, 5, 0, 0),
(636, 'Recursive Languages are:', 3, 5, 49, 'Gate', 1990, 5, 0, 0),
(637, 'Which one of the following is the strongest correct statement about a finite language over some finite alphabet ∑?', 1, 5, 49, 'Gate', 1991, 5, 0, 0),
(638, 'Let r=1(1 0)*, s=11*0 and t=1*0 be three regular expressions. Which of the following is/are true?', 3, 5, 25, 'Gate', 1991, 5, 0, 0),
(639, '<img src=\"./image/question/639.jpg\"/>', 1, 5, 48, 'Gate', 2001, 5, 0, 0),
(640, '<img src=\"./image/question/640.jpg\"/>', 3, 5, 25, 'Gate', 2001, 5, 0, 0),
(641, 'Consider a DFA over Σ = {a,b} accepting all strings which have number of a\'s divisible by 6 and number of b\'s divisible by 8. What is the minimum number of states that the DFA will have?', 2, 5, 25, 'Gate', 2001, 5, 0, 0),
(642, 'Given an arbitrary non-deterministic finite automaton (NFA) with N states, the maximum number of states in an equivalent minimized DFA is at least', 1, 5, 25, 'Gate', 2001, 5, 0, 0),
(643, 'Which of the following statements is true?', 1, 5, 49, 'Gate', 2001, 5, 0, 0),
(644, '<img src=\"./image/question/644.jpg\"/>', 1, 5, 25, 'Gate', 2001, 5, 0, 0),
(645, '<img src=\"./image/question/645.jpg\"/>', 3, 5, 49, 'Gate', 1992, 5, 0, 0),
(646, 'Context-free languages are', 3, 5, 51, 'Gate', 1992, 5, 0, 0),
(647, 'If G is a context-free grammar and w is a string of length l in L(G), how long is a derivation of w in G, if G is Chomsky normal form?', 1, 5, 51, 'Gate', 1992, 5, 0, 0),
(648, 'Which of the following regular expression identifies are true?', 1, 5, 50, 'Gate', 1992, 5, 0, 0),
(649, '<img src=\"./image/question/649.jpg\"/>', 3, 5, 51, 'Gate', 1992, 5, 0, 0),
(650, 'Which of the following problems is not NP-hard?', 1, 5, 27, 'Gate', 1992, 5, 0, 0),
(651, '<img src=\"./image/question/651.jpg\"/>', 1, 5, 50, 'Gate', 1993, 5, 0, 0),
(652, 'Which of the following are true', 3, 5, 49, 'Gate', 1993, 5, 0, 0),
(653, 'Which of the following are true<pre>1. All subsets of regular sets are regular.2. Regularity is preserved under the operation of string reversal.</pre>', 1, 5, 49, 'Gate', 1993, 5, 0, 0),
(654, '<img src=\"./image/question/654.jpg\"/>', 1, 1, 36, 'Gate', 1989, 5, 0, 0),
(655, '<img src=\"./image/question/655.jpg\"/>', 1, 1, 2, 'Gate', 1990, 5, 0, 0),
(656, 'Indicate all false statements given below', 3, 1, 68, 'Gate', 1991, 5, 0, 0),
(657, 'The total size of virtual memory systems is limited by ', 3, 1, 68, 'Gate', 1991, 5, 0, 0),
(658, '<img src=\"./image/question/658.jpg\"/>', 1, 1, 36, 'Gate', 1991, 5, 0, 0),
(659, '<img src=\"./image/question/659.jpg\"/>', 1, 1, 2, 'Gate', 2001, 5, 0, 0),
(660, 'Consider a machine with 64 MB physical memory and a 32-bit virtual address space. If the page size is 4 KB, what is the approximate size of the page table in MB?', 2, 1, 36, 'Gate', 2001, 5, 0, 0),
(661, 'Consider a virtual memory system with FIFO page replacement policy. For an arbitrary page access pattern, increasing the number of page frames in main memory will', 1, 1, 52, 'Gate', 2001, 5, 0, 0),
(662, 'Consider a set of n tasks with known runtimes r<sub>1</sub>, r<sub>2</sub>, ..., r<sub>n</sub> to be run on a uniprocessor machine. Which of the following processor scheduling algorithms will result in the maximum throughput?', 1, 1, 1, 'Gate', 2001, 5, 0, 0),
(663, 'Which of the following statements is false?', 1, 1, 68, 'Gate', 2001, 5, 0, 0),
(664, 'Which of the following is an example of a spooled device?', 1, 1, 60, 'Gate', 1992, 5, 0, 0),
(665, 'A computer system has 6 tape drives, with n process completing for them. Each process may need 3 tape drives. The maximum value of n for which the system is guaranteed to be deadlock free is:', 2, 1, 60, 'Gate', 1992, 5, 0, 0),
(666, 'At a particular time of computation the value of a counting semaphore is 7. Then 20 P operations and 15 V operations were completed on this semaphore. The resulting value of the semaphore is:', 2, 1, 2, 'Gate', 1992, 5, 0, 0),
(667, '<img src=\"./image/question/667.jpg\"/>', 2, 1, 1, 'Gate', 1993, 5, 0, 0),
(668, 'Consider a system having m resources of the same type. These resources are shared by 3 processes A, B and C, which have peak demands of 3, 4 and 6 respectively. For what value of m deadlock will not occur?', 3, 1, 60, 'Gate', 1993, 5, 0, 0),
(669, '<img src=\"./image/question/669.jpg\"/>', 1, 1, 16, 'Gate', 1993, 5, 0, 0),
(670, '<img src=\"./image/question/670.jpg\"/>', 1, 1, 52, 'Gate', 1994, 5, 0, 0),
(671, 'A memory page containing a heavily used variable that was initialized very early and is in constant use is removed when', 1, 1, 52, 'Gate', 1994, 5, 0, 0),
(672, 'In a virtual memory system the address space specified by the address lines of the CUP must be __________ than the physical memory size and _______ than the secondary storage size.', 1, 1, 68, 'Gate', 1995, 5, 0, 0),
(673, '<img src=\"./image/question/673.jpg\"/>', 2, 1, 52, 'Gate', 1995, 5, 0, 0),
(674, '<img src=\"./image/question/674.jpg\"/>', 1, 1, 1, 'Gate', 1995, 5, 0, 0),
(675, 'Which scheduling policy is most suitable for a time shared operating system?', 1, 1, 1, 'Gate', 1995, 5, 0, 0),
(676, 'In a paged segmented scheme of memory management, the segment table itself must have a page table because', 3, 1, 36, 'Gate', 1995, 5, 0, 0),
(677, 'Which of the following statements is true?', 1, 1, 36, 'Gate', 1995, 5, 0, 0),
(678, 'Four jobs to be executed on a single processor system arrive at time 0  in the order A, B, C, D. their burst CPU time requirements are 4, 1, 8, 1 time units respectively. The completion time of A under round robin scheduling with time slice of one time unit is', 2, 1, 1, 'Gate', 1996, 5, 0, 0),
(679, 'A solution to the Dining Philosophers Problem which avoids deadlock is', 1, 1, 60, 'Gate', 1996, 5, 0, 0),
(680, 'A 1000 Kbyte memory is managed using variable partitions but to compaction. It currently has two partitions of sizes 200 Kbytes and 260 Kbytes respectively. The smallest allocation request in Kbytes that could be denied is for', 2, 1, 68, 'Gate', 1996, 5, 0, 0),
(681, '<img src=\"./image/question/681.jpg\"/>', 1, 1, 36, 'Gate', 1996, 5, 0, 0),
(682, 'A critical section is a program segment', 1, 1, 2, 'Gate', 1996, 5, 0, 0),
(683, '<img src=\"./image/question/683.jpg\"/>', 1, 1, 1, 'Gate', 1996, 5, 0, 0),
(684, '<img src=\"./image/question/684.jpg\"/>', 1, 1, 2, 'Gate', 1997, 5, 0, 0),
(685, 'An operating system contains 3 user processes each requiring 2 units of resource R. the minimum number of units of r such that no deadlocks will ever arise is', 2, 1, 60, 'Gate', 1997, 5, 0, 0),
(686, 'Dirty bit for a page in a page table', 1, 1, 68, 'Gate', 1997, 5, 0, 0),
(687, 'I/O redirection', 1, 1, 30, 'Gate', 1997, 5, 0, 0),
(688, 'Thrashing', 1, 1, 68, 'Gate', 1997, 5, 0, 0),
(689, '<img src=\"./image/question/689.jpg\"/>', 1, 1, 1, 'Gate', 1997, 5, 0, 0),
(690, 'Locality of reference implies that the page reference being made by a process', 1, 1, 68, 'Gate', 1997, 5, 0, 0),
(691, 'If an instruction takes i microseconds and a page fault takes an additional j microseconds, the effective instruction time if on the average a page fault occurs every k instruction is:', 1, 1, 68, 'Gate', 1998, 5, 0, 0),
(692, 'Consider n processes sharing the CPU in a round-robin fashion. Assuming that each process switch takes s seconds, what must be the quantum size q such that the overhead resulting from process switching is minimized but at the same time each process is guaranteed to get its turn at the CPU at least every t seconds?', 1, 1, 1, 'Gate', 1998, 5, 0, 0),
(693, '<img src=\"./image/question/694.jpg\"/>', 1, 1, 36, 'Gate', 1998, 5, 0, 0),
(694, 'A  computer  has  six  tape  drives,  with  n  processes  competing  for  them.  Each process may need two drives. What is the maximum value of n for the system to be deadlock free?', 2, 1, 60, 'Gate', 1998, 5, 0, 0),
(695, 'A counting semaphore was initialized to 10. Then 6P (wait) operations and 4V (signal) operations were completed on this semaphore. The resulting value of the semaphore is', 2, 1, 2, 'Gate', 1998, 5, 0, 0),
(696, 'When  the  result  of  a  computation  depends  on  the  speed  of  the  processes involved there is said to be', 1, 1, 2, 'Gate', 1998, 5, 0, 0),
(697, 'Which of the following is an example of a spooled device?', 1, 1, 60, 'Gate', 1998, 5, 0, 0),
(698, 'A linker reads four modules whose lengths are 200, 800, 600 and 500 words, respectively. If they are loaded in that order, what are the relocation constants?', 1, 1, 36, 'Gate', 1998, 5, 0, 0),
(699, '<img src=\"./image/question/699.jpg\"/>', 1, 6, 53, 'Gate', 1999, 5, 0, 0),
(700, 'Which  of  the  following  actions  is/are  typically  not  performed  by  the  operating system when switching context from process A to process B?', 1, 6, 1, 'Gate', 1999, 5, 0, 0),
(701, 'Which of the following is/are advantage of virtual memory?', 3, 6, 68, 'Gate', 1999, 5, 0, 0),
(702, 'A  multi-user,  multi-processing  operating  system  cannot  be  implemented  on hardware that does not support  ', 3, 6, 68, 'Gate', 1999, 5, 0, 0),
(703, 'System calls are usually invoked by using', 1, 6, 69, 'Gate', 1999, 5, 0, 0),
(704, 'Which of the following disk scheduling strategies is likely to give the best through put?', 1, 6, 16, 'Gate', 1999, 5, 0, 0),
(705, '<img src=\"./image/question/705.jpg\"/>', 1, 6, 36, 'Gate', 1999, 5, 0, 0),
(706, 'Which of the following is NOT a valid deadlock prevention scheme?', 1, 6, 60, 'Gate', 2000, 5, 0, 0),
(707, 'Suppose the time to service a page fault is on the average 10 milliseconds, while a memory access takes 1 microsecond. Then a 99.99% hit ratio results in average memory access time of', 1, 6, 68, 'Gate', 2000, 5, 0, 0),
(708, 'A graphics card has on board memory of 1MB. Which of the following modes can the card not support?', 1, 6, 36, 'Gate', 2000, 5, 0, 0),
(709, '<img src=\"./image/question/709.jpg\"/>', 1, 6, 2, 'Gate', 2000, 5, 0, 0),
(710, 'Which of the following need not necessarily be saved on a context switch between processes?', 1, 6, 1, 'Gate', 2000, 5, 0, 0),
(711, 'In the index allocation scheme of blocks to a file, the maximum possible size of the file depends on', 1, 6, 30, 'Gate', 2002, 5, 0, 0),
(712, '<img src=\"./image/question/712.jpg\"/>', 1, 6, 2, 'Gate', 2002, 5, 0, 0),
(713, 'Dynamic linking can cause security concerns because', 1, 6, 36, 'Gate', 2002, 5, 0, 0),
(714, 'The optimal page replacement algorithm will select the page that', 1, 6, 52, 'Gate', 2002, 5, 0, 0),
(715, 'Suppose we want to synchronize two concurrent processes P and Q using binary semaphores S and T. The code for the processes P and Q is shown below.\r\n<pre>\r\nProcess P:\r\nwhile (1) {\r\nW:\r\n   print \'0\';\r\n   print \'0\';\r\nX:\r\n}\r\n	\r\nProcess Q:\r\nwhile (1) {\r\nY:\r\n   print \'1\';\r\n   print \'1\';\r\nZ:\r\n}\r\n</pre>\r\nSynchronization statements can be inserted only at points W, X, Y and Z Which of the following will ensure that the output string never contains a substring of the form 01^n0 or 10^n1 where n is odd?', 1, 6, 2, 'Gate', 2003, 5, 0, 0),
(716, 'Suppose we want to synchronize two concurrent processes P and Q using binary semaphores S and T. The code for the processes P and Q is shown below.\r\n<pre>\r\nProcess P:\r\nwhile (1) {\r\nW:\r\n   print \'0\';\r\n   print \'0\';\r\nX:\r\n}\r\n	\r\nProcess Q:\r\nwhile (1) {\r\nY:\r\n   print \'1\';\r\n   print \'1\';\r\nZ:\r\n}\r\n</pre>\r\nSynchronization statements can be inserted only at points W, X, Y and Z. Which of the following will always lead to an output staring with \'001100110011\' ?', 1, 6, 2, 'Gate', 2003, 5, 0, 0),
(717, 'A processor uses 2-level page tables for virtual to physical address translation. Page tables for both levels are stored in the main memory. Virtual and physical addresses are both 32 bits wide. The memory is byte addressable. For virtual to physical address translation, the 10 most significant bits of the virtual address are used as index into the first level page table while the next 10 bits are used as index into the second level page table. The 12 least significant bits of the virtual address are used as offset within the page. Assume that the page table entries in both levels of page tables are 4 bytes wide. Further, the processor has a translation look-aside buffer (TLB), with a hit rate of 96%. The TLB caches recently used virtual page numbers and the corresponding physical page numbers. The processor also has a physically addressed cache with a hit rate of 90%. Main memory access time is 10 ns, cache access time is 1 ns, and TLB access time is also 1 ns. Suppose a process has only the following pages in its virtual address space: two contiguous code pages starting at virtual address 0x00000000, two contiguous data pages starting at virtual address 0×00400000, and a stack page starting at virtual address 0×FFFFF000. The amount of memory required for storing the page tables of this process is:', 1, 6, 68, 'Gate', 2003, 5, 0, 0),
(718, 'A processor uses 2-level page tables for virtual to physical address translation. Page tables for both levels are stored in the main memory. Virtual and physical addresses are both 32 bits wide. The memory is byte addressable. For virtual to physical address translation, the 10 most significant bits of the virtual address are used as index into the first level page table while the next 10 bits are used as index into the second level page table. The 12 least significant bits of the virtual address are used as offset within the page. Assume that the page table entries in both levels of page tables are 4 bytes wide. Further, the processor has a translation look-aside buffer (TLB), with a hit rate of 96%. The TLB caches recently used virtual page numbers and the corresponding physical page numbers. The processor also has a physically addressed cache with a hit rate of 90%. Main memory access time is 10 ns, cache access time is 1 ns, and TLB access time is also 1 ns. Assuming that no page faults occur, the average time taken to access a virtual address is approximately (to the nearest 0.5 ns)', 1, 6, 68, 'Gate', 2003, 5, 0, 0),
(719, 'A uni-processor computer system only has two processes, both of which alternate 10 ms CPU bursts with 90 ms I/O bursts. Both the processes were created at nearly the same time. The I/O of both processes can proceed in parallel. Which of the following scheduling strategies will result in the least CPU utilization (over a long period of time) for this system?', 1, 6, 1, 'Gate', 2003, 5, 0, 0),
(720, 'In a system with 32 bit virtual addresses and 1KB page size, use of one-level page tables for virtual to physical address translation is not practical because of  ', 1, 6, 68, 'Gate', 2003, 5, 0, 0),
(721, 'In a virtual memory system, size of virtual address is 32-bit, size of physical address is 30-bit, page size is 4 Kbyte and size of each page table entry is 32-bit. The main memory is byte addressable. Which one of the following is the maximum number of bits that can be used for storing protection and other information in each page table entry?', 1, 6, 1, 'Gate', 2004, 5, 0, 0),
(722, 'he semaphore variables full, empty and mutex are initialized to 0, n and 1, respectively. Process P1 repeatedly adds one item at a time to a buffer of size n, and process P2 repeatedly removes one item at a time from the same buffer using the programs given below. In the programs, K, L, M and N are unspecified statements.\r\n<pre>\r\n P1\r\nwhile (1) \r\n{\r\n     K; P(mutex);\r\n     Add an item to the buffer;\r\n     V(mutex);\r\n     L; \r\n}\r\n\r\n P2 \r\nwhile (1) \r\n{\r\n    M; \r\n    P(mutex);\r\n    Remove an item from the buffer;\r\n    V(mutex);\r\n    N; \r\n} \r\n</pre>\r\nThe statements K, L, M and N are respectively', 1, 6, 1, 'Gate', 2004, 5, 0, 0),
(723, 'A process executes the following segment of code :\r\n<pre>\r\n for(i = 1; i < = n; i++)\r\n     fork ();\r\n</pre>\r\nThe number of new processes created is', 1, 6, 69, 'Gate', 2004, 5, 0, 0),
(724, 'In a certain operating system, deadlock prevention is attempted using the following scheme. Each process is assigned a unique timestamp, and is restarted with the same timestamp if killed. Let Ph be the process holding a resource R, Pr be a process requesting for the same resource R, and T(Ph) and T(Pr) be their timestamps respectively. The decision to wait or preempt one of the processes is based on the following algorithm.\r\n<pre>\r\nif T(Pr) < T(Ph)\r\n     then kill Pr\r\nelse wait\r\n</pre>\r\nWhich one of the following is TRUE?', 1, 6, 1, 'Gate', 2004, 5, 0, 0),
(725, 'A disk has 200 tracks (numbered 0 through 199). At a given time, it was servicing the request of reading data from track 120, and at the previous request, service was for track 90. The pending requests (in order of their arrival) are for track numbers. 30 70 115 130 110 80 20 25. How many times will the head change its direction for the disk scheduling policies SSTF(Shortest Seek Time First) and FCFS (First Come Fist Serve)', 1, 6, 36, 'Gate', 2004, 5, 0, 0),
(726, 'The storage area of a disk has innermost diameter of 10 cm and outermost diameter of 20 cm. The maximum storage density of the disk is 1400 bits/cm. The disk rotates at a speed of 4200 RPM. The main memory of a computer has 64-bit word length and 1µs cycle time. If cycle stealing is used for data transfer from the disk, the percentage of memory cycles stolen for transferring one word is', 1, 4, 36, 'Gate', 2004, 5, 0, 0),
(727, 'In an enhancement of a design of a CPU, the speed of a floating point unit has been increased by 20% and the speed of a fixed point unit has been increased by 10%. What is the overall speedup achieved if the ratio of the number of floating point operations to the number of fixed point operations is 2:3 and the floating point operation used to take twice the time taken by the fixed point operation in the original design?', 2, 4, 35, 'Gate', 2004, 5, 0, 0),
(728, 'A CPU has only three instructions I1, I2 and I3, which use the following signals in time steps T1-T5:\r\n<pre>\r\nI1 : T1 : Ain,\r\n Bout,\r\n Cin T2 : PCout,\r\n Bin T3 : Zout,\r\n Ain T4 : Bin,\r\n Cout T5 : End\r\n\r\n I2 : T1 : Cin,\r\n Bout,\r\n Din T2 : Aout,\r\n Bin T3 : Zout,\r\n Ain T4 : Bin,\r\n Cout T5 : End\r\n\r\n I3 : T1 : Din,\r\n Aout T2 : Ain,\r\n Bout T3 : Zout,\r\n Ain T4 : Dout,\r\n Ain T5 : End\r\n</pre>\r\n Which of the following logic functions will generate the hardwired control for the signal Ain ?', 1, 4, 35, 'Gate', 2004, 5, 0, 0),
(729, 'Consider a fully associative cache with 8 cache blocks (numbered 0-7) and the following sequence of memory block requests: 4, 3, 25, 8, 19, 6, 25, 8, 16, 35, 45, 22, 8, 3, 16, 25, 7 If LRU replacement policy is used, which cache block will have memory block 7?', 2, 4, 52, 'Gate', 2004, 5, 0, 0),
(730, 'Consider a pipeline processor with 4 stages s1 to s4. we want to execute the following loop fro (i=1:i<=1000: i  ) {I1,I2,I3,I4} Where rhe time taken in ns by instructions I1 to I4 for stage S1 to S4 are given<br/><img src=\"./image/question/730.jpg\"/><br/>The outout of I1 for i=2 will be avaliable after______ns.', 2, 4, 36, 'Gate', 2004, 5, 0, 0),
(731, 'Which one of the following is NOT shared by the threads of the same process?', 1, 1, 36, 'Gate', 2004, 5, 0, 0),
(732, 'A unix-style I-node has 10 direct pointers and one single, one double and one triple indirect pointers. Disk block size is 1 Kbyte, disk block address is 32 bits, and 48-bit integers are used. What is the maximum possible file size?', 1, 1, 16, 'Gate', 2004, 5, 0, 0),
(733, '<img src=\"./image/question/733.jpg\"/>', 1, 1, 2, 'Gate', 2004, 5, 0, 0),
(734, 'Consider a system with a two-level paging scheme in which a regular memory access takes 150 nanoseconds, and servicing a page fault takes 8 milliseconds. An average instruction takes 100 nanoseconds of CPU time, and two memory accesses. The TLB hit ratio is 90%, and the page fault rate is one in every 10,000 instructions. What is the effective average instruction execution time in ns?', 2, 1, 68, 'Gate', 2004, 5, 0, 0),
(735, '<img src=\"./image/question/735.jpg\"/>', 2, 1, 1, 'Gate', 2004, 5, 0, 0),
(736, 'The minimum number of page frames that must be allocated to a running process in a virtual memory environment is determined by', 1, 1, 68, 'Gate', 2004, 5, 0, 0),
(737, 'Consider an operating system capable of loading and executing a single sequential user process at a time. The disk head scheduling algorithm used is First Come First Served (FCFS). If FCFS is replaced by Shortest Seek Time First (SSTF), claimed by the vendor to give 50% better benchmark results, what is the expected improvement in the I/O performance of user programs in %?', 2, 1, 16, 'Gate', 2004, 5, 0, 0),
(738, '<img src=\"./image/question/738.jpg\"/>', 3, 1, 1, 'Gate', 2004, 5, 0, 0),
(739, 'A disk has 8 equidistant tracks. The diameters of the innermost and outermost tracks are 1 cm and 8 cm respectively. The innermost track has a storage capacity of 10 MB. If the disk has 20 sectors per track and is currently at the end of the 5th sector of the inner-most track and the head can move at a speed of 10 meters/sec and it is rotating at constant angular velocity of 6000 RPM, how much time will it take(ms) to read 1 MB contiguous data starting from the sector 4 of the outer-most track?', 2, 1, 36, 'Gate', 2005, 5, 0, 0),
(740, 'A disk has 8 equidistant tracks. The diameters of the innermost and outermost tracks are 1 cm and 8 cm respectively. The innermost track has a storage capacity of 10 MB. What is the total amount of data that can be stored on the disk if it is used with a drive that rotates it with (i) Constant Linear Velocity (ii) Constant Angular Velocity?  ', 1, 1, 36, 'Gate', 2005, 5, 0, 0),
(741, '<img src=\"./image/question/741.jpg\"/>', 3, 1, 60, 'Gate', 2005, 5, 0, 0),
(742, 'Consider a 2-way set associative cache memory with 4 sets and total 8 cache blocks (0-7) and a main memory with 128 blocks (0-127). What memory blocks will be present in the cache after the following sequence of memory block references if LRU policy is used for cache block replacement. Assuming that initially the cache did not have any memory block from the current job? 0 5 3 9 7 0 16 55', 1, 1, 36, 'Gate', 2005, 5, 0, 0),
(743, '<img src=\"./image/question/743.jpg\"/>', 1, 1, 1, 'Gate', 2005, 5, 0, 0),
(744, 'Which of the following input sequences will not  always generate a 1 at the output Z at the end of the third cycle? <br/><img src=\"./image/question/744.jpg\"/>', 3, 9, 62, 'Gate', 2005, 5, 0, 0),
(745, '<img src=\"./image/question/745.jpg\"/>', 2, 1, 1, 'Gate', 2005, 5, 0, 0),
(746, '<img src=\"./image/question/746.jpg\"/>', 1, 1, 2, 'Gate', 2005, 5, 0, 0),
(747, 'Increasing the RAM of a computer typically improves performance because:', 1, 1, 68, 'Gate', 2005, 5, 0, 0),
(748, 'Normally user programs are prevented from handling I/O directly by I/O instructions in them. For CPUs having explicit I/O instructions, such I/O protection is ensured by having the I/O instructions privileged. In a CPU with memory mapped I/O, there is no explicit I/O instruction. Which one of the following is true for a CPU with memory mapped I/O?', 1, 1, 71, 'Gate', 2005, 5, 0, 0),
(749, 'Suppose n processes, P<sub>1</sub>, …., P<sub>n</sub> share m identical resource units, which can be reserved and released one at a time. The maximum resource requirement of process P<sub>i</sub> is s</sub>i</sub>, where s<sub>i</sub> > 0. Which one of the following is a sufficient condition for ensuring that deadlock does not occur?', 1, 1, 60, 'Gate', 2005, 5, 0, 0),
(750, 'Consider the following code fragment:\r\n<pre>\r\n  if (fork() == 0)\r\n  {\r\n     a = a + 5;\r\n     printf(“%d,%dn”, a, &a);\r\n  }\r\n  else\r\n  {\r\n     a = a –5;\r\n     printf(“%d, %dn”, a, &a);\r\n  }\r\n</pre>\r\nLet u, v be the values printed by the parent process, and x, y be the values printed by the child process. Which one of the following is TRUE?', 1, 1, 69, 'Gate', 2005, 5, 0, 0),
(751, 'The wait and signal operations of a monitor are implemented using semaphores as follows. In the following,\r\n<pre>\r\n        x is a condition variable,\r\n        mutex is a semaphore initialized to 1,\r\n        x_sem is a semaphore initialized to 0,\r\n        x_count is the number of processes waiting on semaphore x_sem, initially 0, next is a semaphore initialized to 0,\r\n        next_count is the number of processes waiting on semaphore next, initially 0.\r\n        The body of each procedure that is visible outside the monitor is replaced with the following:\r\n\r\n \r\nP(mutex);\r\nbody of procedure\r\nif (next_count > 0)\r\n    V(next);\r\nelse\r\n    V(mutex);\r\n\r\n        Each occurrence of x.wait is replaced with the following:\r\n\r\n \r\nx_count = x_count + 1;\r\nif (next_count > 0)\r\n    V(next)\r\nelse\r\n    V(mutex);\r\n------------------------------------------------------------ E1;\r\nx_count = x_count - 1;\r\n\r\n        Each occurrence of x.signal is replaced with the following:\r\n\r\nif (x_count > 0)\r\n{\r\n    next_count = next_count + 1;\r\n    ------------------- E2;\r\n    P(next),\r\n    next_count = next_count - 1;\r\n}\r\n</pre>\r\nFor correct implementation of the monitor, statements E1 and E2 are, respectively,', 1, 1, 2, 'Gate', 2006, 5, 0, 0),
(752, 'For each of the four processes P1, P2, P3 and P4. The total size in kilobytes (KB) and the number of segments are given below. <br/><img src=\"./image/question/752.jpg\"/><br/>The page size is 1 KB. The size of an entry in the page table is 4 bytes. The size of an entry in the segment table is 8 bytes. The maximum size of a segment is 256 KB. The paging method for memory management uses two-level paging, and its storage overhead is P. The storage overhead for the segmentation method is S. The storage overhead for the segmentation and paging method is T. What is the relation among the overheads for the different methods of memory management in the concurrent execution of the above four processes ?', 1, 1, 68, 'Gate', 2006, 5, 0, 0),
(753, 'Consider the solution to the bounded buffer producer/consumer problem by using general semaphores S, F, and E. The semaphore S is the mutual exclusion semaphore initialized to 1. The semaphore F corresponds to the number of free slots in the buffer and is initialized to N. The semaphore E corresponds to the number of elements in the buffer and is initialized to 0. Which of the following interchange operations may result in a deadlock? <br/>\r\n<pre>\r\n    1. Interchanging Wait (F) and Wait (S) in the Producer process\r\n    2. Interchanging Signal (S) and Signal (F) in the Consumer process\r\n</pre>', 1, 1, 2, 'Gate', 2006, 5, 0, 0),
(754, 'The arrival time, priority, and duration of the CPU and I/O bursts for each of three processes P1, P2 and P3 are given in the table below. Each process has a CPU burst followed by an I/O burst followed by another CPU burst. Assume that each process has its own I/O resource. <br/><img src=\"./image/question/754.jpg\"/><br/>The multi-programmed operating system uses preemptive priority scheduling. What are the finish times of the processes P1, P2 and P3 ?', 1, 1, 1, 'Gate', 2006, 5, 0, 0),
(755, 'The process state transition diagram of an operating system is as given below. <br/><img src=\"./image/question/755.jpg\"/><br/>Which of the following must be FALSE about the above operating system?', 1, 1, 1, 'Gate', 2006, 5, 0, 0),
(756, 'In the working-set strategy, which of the following is done by the operating system to prevent thrashing?\r\n<pre>\r\n    1. It initiates another process if there are enough extra frames.\r\n    2. It selects a process to suspend if the sum of the sizes of the working-sets exceeds the total number of available frames.\r\n</pre>', 1, 1, 68, 'Gate', 2006, 5, 0, 0),
(757, 'A computer system supports 32-bit virtual addresses as well as 32-bit physical addresses. Since the virtual address space is of the same size as the physical address space, the operating system designers decide to get rid of the virtual memory entirely. Which one of the following is true?', 1, 1, 68, 'Gate', 2006, 5, 0, 0),
(758, 'A CPU generates 32-bit virtual addresses. The page size is 4 KB. The processor has a translation look-aside buffer (TLB) which can hold a total of 128 page table entries and is 4-way set associative. The minimum size of the TLB tag is in bit:', 2, 1, 68, 'Gate', 2006, 5, 0, 0),
(759, 'The atomic fetch-and-set x, y instruction unconditionally sets the memory location x to 1 and fetches the old value of x n y without allowing any intervening access to the memory location x. consider the following implementation of P and V functions on a binary semaphore S.\r\n<pre>\r\nvoid P (binary_semaphore *s)\r\n{\r\n    unsigned y;\r\n    unsigned *x = &(s->value);\r\n    do\r\n    {\r\n        fetch-and-set x, y;\r\n    }\r\n    while (y);\r\n}\r\nvoid V (binary_semaphore *s)\r\n{\r\n    S->value = 0;\r\n}\r\n</pre>\r\nWhich one of the following is true?', 1, 1, 1, 'Gate', 2006, 5, 0, 0),
(760, 'Consider three processes (process id 0, 1, 2 respectively) with compute time bursts 2, 4 and 8 time units. All processes arrive at time zero. Consider the longest remaining time first (LRTF) scheduling algorithm. In LRTF ties are broken by giving priority to the process with the lowest process id. The average turnaround time is:  ', 2, 1, 1, 'Gate', 2006, 5, 0, 0),
(761, 'Consider three processes, all arriving at time zero, with total execution time of 10, 20 and 30 units, respectively. Each process spends the first 20% of execution time doing I/O, the next 70% of time doing computation, and the last 10% of time doing I/O again. The operating system uses a shortest remaining compute time first scheduling algorithm and schedules a new process either when the running process gets blocked on I/O or when the running process finishes its compute burst. Assume that all I/O operations can be overlapped as much as possible. For what percentage of time does the CPU remain idle?  ', 2, 1, 1, 'Gate', 2006, 5, 0, 0),
(762, 'Consider the following snapshot of a system running n processes. Process i is holding xi instances of a resource R, 1 ≤ i ≤ n. Currently, all instances of R are occupied. Further, for all i, process i has placed a request for an additional yi instances while holding the xi instances it already has. There are exactly two processes p and q such that y<sub>p</sub> = y<sub>q</sub> = 0. Which one of the following can serve as a necessary condition to guarantee that the system is not approaching a deadlock?', 1, 1, 60, 'Gate', 2006, 5, 0, 0),
(763, 'Barrier is a synchronization construct where a set of processes synchronizes globally i.e. each process in the set arrives at the barrier and waits for all others to arrive and then all processes leave the barrier. Let the number of processes in the set be three and S be a binary semaphore with the usual P and V functions. Consider the following C implementation of a barrier with line numbers shown on left.\r\n<pre>\r\nvoid barrier (void) {\r\n1:   P(S);\r\n2:   process_arrived++;\r\n3.   V(S);\r\n4:   while (process_arrived !=3);\r\n5:   P(S);\r\n6:   process_left++;\r\n7:   if (process_left==3) {\r\n8:      process_arrived = 0;\r\n9:      process_left = 0;\r\n10:  }\r\n11:  V(S);\r\n}\r\n</sub>\r\nThe variables process_arrived and process_left are shared among all processes and are initialized to zero. In a concurrent program all the three processes call the barrier function when they need to synchronize globally. Which one of the following rectifies the problem in the implementation?\r\n', 1, 1, 2, 'Gate', 2006, 5, 0, 0),
(764, 'Barrier is a synchronization construct where a set of processes synchronizes globally i.e. each process in the set arrives at the barrier and waits for all others to arrive and then all processes leave the barrier. Let the number of processes in the set be three and S be a binary semaphore with the usual P and V functions. Consider the following C implementation of a barrier with line numbers shown on left.\r\n<pre>\r\nvoid barrier (void) {\r\n1:   P(S);\r\n2:   process_arrived++;\r\n3.   V(S);\r\n4:   while (process_arrived !=3);\r\n5:   P(S);\r\n6:   process_left++;\r\n7:   if (process_left==3) {\r\n8:      process_arrived = 0;\r\n9:      process_left = 0;\r\n10:  }\r\n11:  V(S);\r\n}\r\n</pre>\r\nThe variables process_arrived and process_left are shared among all processes and are initialized to zero. In a concurrent program all the three processes call the barrier function when they need to synchronize globally. The above implementation of barrier is incorrect. Which one of the following is true?\r\n', 1, 1, 2, 'Gate', 2006, 5, 0, 0),
(765, 'Consider three CPU-intensive processes, which require 10, 20 and 30 time units and arrive at times 0, 2 and 6, respectively. How many context switches are needed if the operating system implements a shortest remaining time first scheduling algorithm? Do not count the context switches at time zero and at the end.', 2, 1, 1, 'Gate', 2006, 5, 0, 0),
(766, 'The head of a hard disk serves requests following the shortest seek time first (SSTF) policy. The head is initially positioned at track number 180. What is the maximum cardinality of the request set, so that the head changes its direction after servicing every request if the total number of tracks are 2048 and the head can start from any track?', 2, 1, 16, 'Gate', 2007, 5, 0, 0),
(767, 'The head of a hard disk serves requests following the shortest seek time first (SSTF) policy. The head is initially positioned at truck number 180. Which of the request sets will cause the head to change its direction after servicing every request assuming that the head does not change direction if there is a tie in SSTF and all the requests arrive before the servicing starts?', 1, 1, 16, 'Gate', 2007, 5, 0, 0),
(768, 'A demand paging system takes 100 time units to service a page fault and 300 time units to replace a dirty page. Memory access time is 1 time unit. The probability of a page fault is p. In case of a page fault, the probability of page being dirty is also p. It is observed that the average access time is 3 time units. Then the value of p is', 1, 1, 68, 'Gate', 2007, 5, 0, 0),
(769, 'Consider n jobs J<sub>1</sub>, J<sub>2</sub>,......J<sub>n</sub> such that job J<sub>i</sub> has execution time ti and a non-negative integer weight w<sub>i</sub>. The weighted mean completion time of the jobs is defined to be <br/><img src=\"./image/question/769.jpg\"/></br>where T<sub>i</sub> is the completion time of job J<sub>i</sub>. Assuming that there is only one processor available, in what order must the jobs be executed in order to minimize the weighted mean completion time of the jobs?', 1, 1, 1, 'Gate', 2007, 5, 0, 0),
(770, 'The address sequence generated by tracing a particular program executing in a pure demand paging system with 100 bytes per page is 0100, 0200, 0430, 0499, 0510, 0530, 0560, 0120, 0220, 0240, 0260, 0320, 0410. Suppose that the memory can store only one page and if x is the address which causes a page fault then the bytes from addresses x to x   99 are loaded on to the memory. How many page faults will occur ?  ', 2, 1, 68, 'Gate', 2007, 5, 0, 0),
(771, 'Let a memory have four free blocks of sizes 4k, 8k, 20k, 2k. These blocks are allocated following the best-fit strategy. The allocation requests are stored in a queue as shown below. <br/><img src=\"./image/question/771.jpg\"/></br>The time at which the request for J<sub>7</sub> will be completed will be  ', 2, 1, 1, 'Gate', 2007, 5, 0, 0),
(772, 'Processes P<sub>1</sub> and P<sub>2</sub> use critical_flag in the following routine to achieve mutual exclusion. Assume that critical_flag is initialized to FALSE in the main program. \r\n<pre>\r\nget_exclusive_access ( ) \r\n{ \r\n    if (critical _flag == FALSE) \r\n    { \r\n        critical_flag = TRUE ;\r\n        critical_region () ;\r\n        critical_flag = FALSE;\r\n    } \r\n} \r\n</pre>\r\nConsider the following statements.\r\n<pre>\r\n i. It is possible for both P<sub>1</sub> and P<sub>2</sub> to access critical_region concurrently.\r\n ii. This may lead to a deadlock. Which of the following holds?\r\n</pre>', 1, 1, 2, 'Gate', 2007, 5, 0, 0),
(773, 'A process has been allocated 3 page frames. Assume that none of the pages of the process are available in the memory initially. The process makes the following sequence of page references (reference string): 1, 2, 1, 3, 7, 4, 5, 6, 3, 1 If optimal page replacement policy is used, how many page faults occur for the above reference string?', 2, 1, 52, 'Gate', 2007, 5, 0, 0),
(774, 'A process has been allocated 3 page frames. Assume that none of the pages of the process are available in the memory initially. The process makes the following sequence of page references (reference string): 1, 2, 1, 3, 7, 4, 5, 6, 3, 1 If optimal page replacement policy is used, how many page faults occur for the above reference string?  ', 2, 1, 52, 'Gate', 2007, 5, 0, 0),
(775, 'Two processes, P1 and P2, need to access a critical section of code. Consider the following synchronization construct used by the processes:Here, wants1 and wants2 are shared variables, which are initialized to false. Which one of the following statements is TRUE about the above construct?v\r\n<pre>\r\n  /* P1 */\r\nwhile (true) {\r\n  wants1 = true;\r\n  while (wants2 == true);\r\n  /* Critical\r\n    Section */\r\n  wants1=false;\r\n}\r\n/* Remainder section */       \r\n\r\n\r\n/* P2 */\r\nwhile (true) {\r\n  wants2 = true;\r\n  while (wants1==true);\r\n  /* Critical\r\n    Section */\r\n  wants2 = false;\r\n}\r\n/* Remainder section */\r\n</pre>', 1, 1, 2, 'Gate', 2007, 5, 0, 0),
(776, 'A single processor system has three resource types X, Y and Z, which are shared by three processes. There are 5 units of each resource type. Consider the following scenario, where the column alloc denotes the number of units of each resource type allocated to each process, and the column request denotes the number of units of each resource type requested by a process in order to complete execution. Which of these processes will finish LAST?\r\n\r\n <pre>\r\n    alloc           request\r\n    X Y Z            X Y Z\r\nP0  1 2 1            1 0 3\r\nP1  2 0 1            0 1 2\r\nP2  2 2 1            1 2 0\r\n</pre>', 1, 1, 60, 'Gate', 2007, 5, 0, 0),
(777, 'A virtual memory system uses First In First Out (FIFO) page replacement policy and allocates a fixed number of frames to a process. Consider the following statements:\r\n<pre>\r\nP: Increasing the number of page frames allocated to a \r\n   process sometimes increases the page fault rate.\r\nQ: Some programs do not exhibit locality of reference.\r\n</pre>\r\nWhich one of the following is TRUE?', 1, 1, 52, 'Gate', 2007, 5, 0, 0),
(778, 'An operating system uses Shortest Remaining Time first (SRT) process scheduling algorithm. Consider the arrival times and execution times for the following processes:\r\n<pre>\r\nProcess  Execution time  Arrival time\r\nP1             20            0\r\nP2             25            15\r\nP3             10            30\r\nP4             15            45\r\n</pre>\r\nWhat is the total waiting time for process P2?', 2, 1, 1, 'Gate', 2007, 5, 0, 0),
(779, 'Consider the following statements about user level threads and kernel level threads. Which one of the following statements is FALSE?', 1, 1, 1, 'Gate', 2007, 5, 0, 0),
(780, 'Group 1 contains some CPU scheduling algorithms and Group 2 contains some applications. Match entries in Group 1 to entries in Group 2.\r\n<pre>\r\n     Group I                          Group II\r\n(P) Gang Scheduling              (1) Guaranteed Scheduling\r\n(Q) Rate Monotonic Scheduling    (2) Real-time Scheduling\r\n(R) Fair Share Scheduling        (3) Thread Scheduling\r\n</pre>', 1, 1, 1, 'Gate', 2007, 5, 0, 0),
(781, 'Match the following flag bits used in the context of virtual memory management on the left side with the different purposes on the right side of the table below.<br/><img src=\"./image/question/781.jpg\"/><br/>', 1, 1, 68, 'Gate', 2008, 5, 0, 0),
(782, 'If the time-slice used in the round-robin scheduling policy is more than the maximum time required to execute any process, then the policy will', 1, 1, 1, 'Gate', 2008, 5, 0, 0),
(783, 'An operating system implements a policy that requires a process to release all resources before making a request for another resource. Select the TRUE statement from the following:', 1, 1, 60, 'Gate', 2008, 5, 0, 0),
(784, 'The following is a code with two threads, producer and consumer, that can run in parallel. Further, S and Q are binary semaphores equipped with the standard P and V operations. semaphore S = 1, Q = 0; integer x;\r\n<pre>\r\n producer:                          consumer:\r\n while (true) do                    while (true) do \r\n P(S);                              P(Q); \r\n x = produce ();                    consume (x);\r\n V(Q);                              V(S);\r\n done                               done\r\n</pre>\r\n Which of the following is TRUE about the program above?', 1, 1, 2, 'Gate', 2008, 5, 0, 0),
(785, 'Assume that EA = (X)  is the effective address equal to the contents of location X, with X incremented by one word length after the effective address is calculated; EA = −(X) is the effective address equal to the contents of location X, with X decremented by one word length before the effective address is calculated; EA = (X)− is the effective address equal to the contents of location X, with X decremented by one word length after the effective address is calculated. The format of the instruction is (opcode, source, destination), which means (destination ← source op destination). Using X as a stack pointer, which of the following instructions can pop the top two elements from the stack, perform the addition operation and push the result back to the stack.', 1, 1, 52, 'Gate', 2008, 5, 0, 0),
(786, 'A processor uses 36 bit physical addresses and 32 bit virtual addresses, with a page frame size of 4 Kbytes. Each page table entry is of size 4 bytes. A three level page table is used for virtual to physical address translation, where the virtual address is used as follows\r\n<pre>\r\n    Bits 30-31 are used to index into the first level page table\r\n    Bits 21-29 are used to index into the second level page table\r\n    Bits 12-20 are used to index into the third level page table, and\r\n    Bits 0-11 are used as offset within the page\r\n</pre>\r\nThe number of bits required for addressing the next level page table (or page frame) in the page table entry of the first, second and third level page tables are respectively  ', 1, 1, 68, 'Gate', 2008, 5, 0, 0),
(787, 'A process executes the following code \r\n<pre>\r\nfor (i =0; i < n; i + +) \r\n    fork( ); \r\n</pre>\r\nThe total number of child processes created is  ', 1, 1, 69, 'Gate', 2008, 5, 0, 0),
(788, 'Which of the following is NOT true of deadlock prevention and deadlock avoidance schemes?', 1, 1, 60, 'Gate', 2008, 5, 0, 0),
(789, 'Which of the following statements about synchronous and asynchronous I/O is NOT true?', 1, 4, 71, 'Gate', 2008, 5, 0, 0),
(790, '<img src=\"./image/question/790.jpg\"/>', 1, 1, 2, 'Gate', 2008, 5, 0, 0),
(791, 'The data blocks of a very large file in the Unix file system are allocated using  ', 1, 1, 30, 'Gate', 2008, 5, 0, 0),
(792, 'A multilevel page table is preferred in comparison to a single level page table for translating virtual address to physical address because', 1, 1, 68, 'Gate', 2009, 5, 0, 0),
(793, 'The enter_CS() and leave_CS() functions to implement critical section of a process are realized using test-and-set instruction as follows:\r\n<pre>\r\nvoid enter_CS(X)\r\n{ \r\n   while (test-and-set(X));\r\n} \r\nvoid leave_CS(X) \r\n{ \r\n   X=0; \r\n}\r\n</pre>\r\n In the above solution, X is a memory location associated with the CS and is initialized to 0. Now consider the following statements: \r\n<pre>\r\nI.lThe above solution to CS problem is deadlock-free \r\nII.The solution is starvation \r\nIII.The processes enter CS in FIFO \r\nIV.More than one process can enter CS at the same time.\r\n</pre>\r\n Which of the above statements is TRUE?  ', 3, 1, 2, 'Gate', 2009, 5, 0, 0),
(794, '<img src=\"./image/question/794.jpg\"/>', 3, 1, 1, 'Gate', 2009, 5, 0, 0),
(795, 'Consider a disk system with 100 cylinders. The requests to access the cylinders occur in following sequence: 4, 34, 10, 7, 19, 73, 2, 15, 6, 20 Assuming that the head is currently at cylinder 50, what is the time taken(ms) to satisfy all requests if it takes 1ms to move from one cylinder to adjacent one and shortest seek time first policy is used?  ', 2, 1, 16, 'Gate', 2009, 5, 0, 0),
(796, 'Consider a system with 4 types of resources R1 (3 units), R2 (2 units), R3 (3 units), R4 (2 units). A non-preemptive resource allocation policy is used. At any given instance, a request is not entertained if it cannot be completely satisfied. Three processes P1, P2, P3 request the sources as follows if executed independently.<br/><img src=\"./image/question/794.jpg\"/><br/>Which one of the following statements is TRUE if all three processes run concurrently starting at time t=0?  ', 1, 1, 60, 'Gate', 2009, 5, 0, 0),
(797, 'The essential content(s) in each entry of a page table is / are', 1, 1, 52, 'Gate', 2009, 5, 0, 0),
(798, '<img src=\"./image/question/798.jpg\"/> ', 1, 1, 60, 'Gate', 2009, 5, 0, 0),
(799, 'The following program consists of 3 concurrent processes and 3 binary semaphores.The semaphores are initialized as S0 = 1, S1 = 0, S2 = 0. <br/><img src=\"./image/question/799.jpg\"/> <br/> How many times will process P0 print \'0\'?', 1, 1, 2, 'Gate', 2010, 5, 0, 0),
(800, 'A system uses FIFO policy for page replacement. It has 4 page frames with no pages loaded to begin with. The system first accesses 100 distinct pages in some order and then accesses the same 100 pages but now in the reverse order. How many page faults will occur?  ', 2, 1, 52, 'Gate', 2010, 5, 0, 0),
(801, 'Consider the methods used by processes P1 and P2 for accessing their critical sections whenever needed, as given below. The initial values of shared boolean variables S1 and S2 are randomly assigned. <br/><img src=\"./image/question/799.jpg\"/> <br/>Which one of the following statements describes the properties achieved?', 1, 1, 2, 'Gate', 2010, 5, 0, 0),
(802, 'Which of the following statements are true?<pre>\r\nI. Shortest remaining time first scheduling may cause starvation\r\nII. Preemptive scheduling may cause starvation\r\nIII. Round robin is better than FCFS in terms of response time\r\n</pre>', 3, 1, 2, 'Gate', 2010, 5, 0, 0);
INSERT INTO `question` (`q_id`, `question`, `type`, `sub_id`, `topic_id`, `source`, `year`, `life`, `attampt`, `correct`) VALUES
(803, 'Consider the following table of arrival time and burst time for three processes P0, P1 and P2. <br/><img src=\"./image/question/803.jpg\"/> <br/>The pre-emptive shortest job first scheduling algorithm is used. Scheduling is carried out only at arrival or completion of processes. What is the average waiting time(ms) for the three processes?  ', 2, 1, 1, 'Gate', 2011, 5, 0, 0),
(804, 'Let the time taken to switch between user and kernel modes of execution be t<sub>1</sub> while the time taken to switch between two processes be t<sub>2</sub>. Which of the following is TRUE?', 1, 1, 1, 'Gate', 2011, 5, 0, 0),
(805, 'A thread is usually defined as a \"light weight process\" because an operating system (OS) maintains smaller data structures for a thread than for a process. In relation to this, which of the following is TRUE?', 1, 1, 1, 'Gate', 2011, 5, 0, 0),
(806, 'Let the page fault service time to 10 ms in a computer with average memory access time being 20 ns. If one page fault is generated for every 10<sup>6</sup> memory accesses, what is the effective access time for the memory in ns?', 2, 1, 36, 'Gate', 2011, 5, 0, 0),
(807, 'Consider the virtual page reference string 1, 2, 3, 2, 4, 1, 3, 2, 4, 1 On a demand paged virtual memory system running on a computer system that main memory size of 3 pages frames which are initially empty. Let LRU, FIFO and OPTIMAL denote the number of page faults under the corresponding page replacements policy. Then', 1, 1, 52, 'Gate', 2011, 5, 0, 0),
(808, 'A file system with 300 GByte disk uses a file descriptor with 8 direct block addresses, 1 indirect block address and 1 doubly indirect block address. The size of each disk block is 128 Bytes and the size of each disk block address is 8 Bytes. The maximum possible file size in this file system is', 1, 1, 30, 'Gate', 2012, 5, 0, 0),
(809, 'Fetch_And_Add(X,i) is an atomic Read-Modify-Write instruction that reads the value of memory location X, increments it by the value i, and returns the old value of X. It is used in the pseudocode shown below to implement a busy-wait lock. L is an unsigned integer shared variable initialized to 0. The value of 0 corresponds to lock being available, while any non-zero value corresponds to the lock being not available.\r\n<pre>\r\n  AcquireLock(L){\r\n         while (Fetch_And_Add(L,1))\r\n               L = 1;\r\n   }\r\n  ReleaseLock(L){\r\n         L = 0;\r\n   }\r\n</pre>\r\nThis implementation', 1, 1, 2, 'Gate', 2012, 5, 0, 0),
(810, 'Consider the 3 processes, P1, P2 and P3 shown in the table.\r\n<pre>\r\nProcess           Arrival time         Time Units Required\r\n   P1                0                         5\r\n   P2                1                         7\r\n   P3                3                         4\r\n</pre>\r\nThe completion order of the 3 processes under the policies FCFS and RR2 (round robin scheduling with CPU quantum of 2 time units) are', 1, 1, 2, 'Gate', 2012, 5, 0, 0),
(811, 'A process executes the code\r\n<pre>\r\nfork();\r\nfork();\r\nfork();\r\n</pre>\r\nThe total number of child processes created is', 2, 1, 69, 'Gate', 2012, 5, 0, 0),
(812, 'A computer uses 46-bit virtual address, 32-bit physical address, and a three-level paged page table organization. The page table base register stores the base address of the first-level table (T1), which occupies exactly one page. Each entry of T1 stores the base address of a page of the second-level table (T2). Each entry of T2 stores the base address of a page of the third-level table (T3). Each entry of T3 stores a page table entry (PTE). The PTE is 32 bits in size. The processor used in the computer has a 1 MB 16-way set associative virtually indexed physically tagged cache. The cache block size is 64 bytes. What is the size of a page in KB in this computer?', 2, 1, 36, 'Gate', 2013, 5, 0, 0),
(813, 'A certain computation generates two arrays a and b such that a[i]=f(i) for 0 ≤ i < n and b[i]=g(a[i]) for 0 ≤ i < n. Suppose this computation is decomposed into two concurrent processes X and Y such that X computes the array a and Y computes the array b. The processes employ two binary semaphores R and S, both initialized to zero. The array a is shared by the two processes. The structures of the processes are shown below.\r\n<pre>\r\nProcess X:                         Process Y:\r\nprivate i;                         private i;\r\nfor (i=0; i < n; i++) {            for (i=0; i < n; i++) {\r\n   a[i] = f(i);                       EntryY(R, S);\r\n   ExitX(R, S);                       b[i]=g(a[i]);\r\n}                                 }\r\n</pre>\r\nWhich one of the following represents the CORRECT implementations of ExitX and EntryY?', 1, 1, 2, 'Gate', 2013, 5, 0, 0),
(814, 'Consider three concurrent processes P1, P2 and P3 as shown below, which access a shared variable D that has been initialized to 100. <br/><img src=\"./image/question/814.jpg\"/> <br/>The process are executed on a uniprocessor system running a time-shared operating system. If the minimum and maximum possible values of D after the three processes have completed execution are X and Y respectively, then the value of Y–X is _______.', 2, 1, 2, 'Gate', 2019, 5, 0, 0),
(815, 'Consider a system with 3 processes that share 4 instances of the same resource type. Each process can request a maximum of K instances. Resource instances can be requested and released only one at a time. The largest value of K that will always avoid deadlock is _________.', 2, 1, 60, 'Gate', 2018, 5, 0, 0),
(816, 'The following C program is executed on a Unix/Linux system:\r\n <pre>\r\n             #include <unistd.h>\r\n             int main ()\r\n             {\r\n                   int i ;\r\n                   for (i=0; i<10; i++)\r\n                          if (i%2 == 0)\r\n                              fork ( ) ;\r\n                   return 0 ;\r\n             }\r\n </pre> The total number of child processes created is _____.  ', 2, 1, 69, 'Gate', 2019, 5, 0, 0),
(817, 'Assume that in a certain computer, the virtual addresses are 64 bits long and the physical addresses are 48 bits long. The memory is word addressable. The page size is 8 kB and the word size is 4 bytes. The Translation Look-aside Buffer (TLB) in the address translation path has 128 valid entries. At most how many distinct virtual addresses can be translated without any TLB miss?', 1, 1, 68, 'Gate', 2019, 5, 0, 0),
(818, 'Consider the following four processes with arrival times (in milliseconds) and their length of CPU bursts (in milliseconds) as shown below:<br/><img src=\"./image/question/818.jpg\"/> <br/>These processes are run on a single processor using preemptive Shortest Remaining Time First scheduling algorithm. If the average waiting time of the processes is 1 millisecond, then the value of Z is _____.', 2, 1, 1, 'Gate', 2019, 5, 0, 0),
(819, 'The index node (inode) of a Unix-like file system has 12 direct, one single-indirect and one double-indirect pointers. The disk block size is 4 kB, and the disk block address is 32-bits long. The maximum possible file size is (rounded off to 1 decimal place) ______ GB.', 2, 1, 30, 'Gate', 2019, 5, 0, 0),
(820, 'Consider the following snapshot of a system running n concurrent processes. Process i is holding X<sub>i</sub> instances of a resource R, 1 ≤ i ≤ n. Assume that all instances of R are currently in use. Further, for all i, process i can place a request for at most Y<sub>i</sub> additional instances of R while holding the X<sub>i</sub> instances it already has. Of the n processes, there are exactly two processes p and q such that Y<sub>p</sub> = Y<sub>q</sub> = 0. Which one of the following conditions guarantees that no other process apart from p and q can complete execution?', 1, 1, 2, 'Gate', 2019, 5, 0, 0),
(821, 'Consider allocation of memory to a new process. Assume that none of the existing holes in the memory will exactly fit the process’s memory requirement. Hence, a new hole of smaller size will be created if allocation is made in any of the existing holes. Which one of the following statements is TRUE?', 1, 1, 36, 'Gate', 2020, 5, 0, 0),
(822, ' Consider the following statements about process state transitions for a system using preemptive scheduling.<br/>Which of the following statements are TRUE? ', 3, 1, 1, 'Gate', 2020, 5, 0, 0),
(823, 'Consider the following set of processes, assumed to have arrived at time 0. Consider the CPU scheduling algorithms Shortest Job First (SJF) and Round Robin (RR). For RR, assume that the processes are scheduled in the order P1,P2,P3,P4.<br/><img src=\"./image/question/818.jpg\"/> <br/>f the time quantum for RR is 4 ms, then the absolute value of the difference between the average turnaround times (in ms) of SJF and RR (round off to 2 decimal places) is _____. ', 2, 1, 1, 'Gate', 2020, 5, 0, 0),
(824, 'Each of a set of n processes executes the following code using two semaphores a and b initialized to 1 and 0, respectively. Assume that count is a shared variable initialized to 0 and not used in CODE SECTION P. \r\n<pre>\r\n<b>Code Section P</b>\r\nwait (a); \r\ncount = count+1;\r\nif (count==n) \r\n    signal (b);\r\nsignal (a);\r\nwait (b);\r\nsignal (b);\r\n<b>Code Section Q</b>\r\n</pre>\r\n What does the code achieve? ', 1, 1, 2, 'Gate', 2020, 5, 0, 0),
(825, 'Consider the following five disk access requests of the form (request id, cylinder number) that are present in the disk scheduler queue at a given time.(P, 155), (Q, 85), (R, 110), (S, 30), (T, 115)Assume the head is positioned at cylinder 100. The scheduler follows Shortest Seek Time First scheduling to service the requests.Which one of the following statements is FALSE? ', 1, 1, 16, 'Gate', 2020, 5, 0, 0),
(826, 'Consider a paging system that uses a 1-level page table residing in main memory and a TLB for address translation. Each main memory access takes 100 ns and TLB lookup takes 20 ns. Each page transfer to/from the disk takes 5000 ns. Assume that the TLB hit ratio is 95%, page fault rate is 10%. Assume that for 20% of the total page faults, a dirty page has to be written back to disk before the required page is read in from disk. TLB update time is negligible. The average memory access time in ns (round off to 1 decimal places) is ______. ', 2, 1, 36, 'Gate', 2020, 5, 0, 0),
(827, 'Consider a process executing on an operating system that uses demand paging. The average time for a memory access in the system is M units if the corresponding memory page is available in memory and D units if the memory access causes a page fault. It has been experimentally measured that the average time taken for a memory access in the process is X units.<br/>Which one of the following is the correct expression for the page fault rate experienced by the process?', 1, 1, 68, 'Gate', 2020, 5, 0, 0),
(828, 'Consider the following solution to the producer-consumer synchronization problem. The shared buffer size is N. Three semaphores empty, full and mutex are defined with respective initial values of 0, N and 1. Semaphore empty denotes the number of available slots in the buffer, for the consumer to read from. Semaphore full denotes the number of available slots in the buffer, for the producer to write to. The placeholder variables, denoted by P, Q, R and S, in the code below can be assigned either empty or full. The valid semaphore operations are: wait() and sigmal().<br/><img src=\"./image/question/828.jpg\"/> <br/>Which one of the following assignments to P, Q, R and S will yield the correct solution?', 1, 1, 2, 'Gate', 2018, 5, 0, 0),
(829, 'Consider a storage disk with 4 platters (numbered as 0, 1, 2 and 3), 200 cylinders (numbered as 0, 1, … , 199), and 256 sectors per track (numbered as 0, 1, … 255). The following 6 disk requests of the form [sector number, cylinder number, platter number] are received by the disk controller at the same time:\r\n<pre>\r\n    [120, 72, 2], [180, 134, 1], [60, 20, 0], [212, 86, 3], [56, 116, 2], [118, 16, 1] \r\n</pre>\r\nCurrently head is positioned at sector number 100 of cylinder 80, and is moving towards higher cylinder numbers. The average power dissipation in moving the head over 100 cylinders is 20 milliwatts and for reversing the direction of the head movement once is 15 milliwatts. Power dissipation associated with rotational latency and switching of head between different platters is negligible.\r\n<br/>\r\nThe total power consumption in milliwatts to satisfy all of the above disk requests using the Shortest Seek Time First disk scheduling algorithm is ______ .\r\n', 2, 1, 16, 'Gate', 2018, 5, 0, 0),
(830, ' In a system, there are three types of resources: E, F and G. Four processes P0, P1, P2 and P3 execute concurrently. At the outset, the processes have declared their maximum resource requirements using a matrix named Max as given below. For example, Max[P2, F] is the maximum number of instances of F that P2 would require. The number of instances of the resources allocated to the various processes at any given state is given by a matrix named Allocation.<br/>Consider a state of the system with the Allocation matrix as shown below, and in which 3 instances of E and 3 instances of F are the only resources available.<br/><center><img src=\"./image/question/830.jpg\"/></center> <br/>From the perspective of deadlock avoidance, which one of the following is true?', 1, 1, 60, 'Gate', 2018, 5, 0, 0),
(831, 'Threads of a process share', 1, 1, 1, 'Gate', 2017, 5, 0, 0),
(832, 'Consider the following CPU processes with arrival times (in milliseconds) and length of CPU bursts (in milliseconds) as given below:<br/><img src=\"./image/question/832.jpg\"/> <br/>If the pre-emptive shortest remaining time first scheduling algorithm is used to schedule the processes, then the average waiting time across all processes is __________ milliseconds.', 2, 1, 1, 'Gate', 2017, 5, 0, 0),
(833, 'A multithreaded program P executes with x number of threads and used y number of locks for ensuring mutual exclusion while operating on shared memory locations. All locks in the program are non-reentrant, i.e., if a thread holds a lock l, then it cannot re-acquire lock l without releasing it. If a thread is unable to acquire a lock, it blocks until the lock becomes available. The minimum value of x and the minimum value of y together for which execution of P can result in a deadlock are:', 1, 1, 2, 'Gate', 2017, 5, 0, 0),
(834, 'Recall that Belady’s anomaly is that the page-fault rate may increase as the number of allocated frames increases. Now, consider the following statements:\r\n<pre>\r\n    S1: Random page replacement algorithm (where a page chosen at random is replaced) suffers from Belady’s anomaly\r\n    S2: LRU page replacement algorithm suffers from Belady’s anomaly \r\n</pre>\r\nWhich of the following is CORRECT?\r\n', 1, 1, 52, 'Gate', 2017, 5, 0, 0),
(835, 'Which of the following is/are shared by all the threads in a process?', 3, 1, 1, 'Gate', 2017, 5, 0, 0),
(836, 'In a file allocation system, which of the following allocation scheme(s) can be used if no external fragmentation is allowed?', 3, 1, 36, 'Gate', 2017, 5, 0, 0),
(837, 'A system shares 9 tape drives. The current allocation and maximum requirement of tape drives for three processes are shown below:<br/><img src=\"./image/question/837.jpg\"/> <br/>Which of the following best describe current state of the system?', 1, 1, 60, 'Gate', 2017, 5, 0, 0),
(838, 'Consider the set of processes with arrival time (in milliseconds), CPU burst time (in milliseconds), and priority (0 is the highest priority) shown below. None of the processes have I/O burst time.<br/><center><img src=\"./image/question/838.jpg\"/></center> <br/>The average waiting time (in milliseconds) of all the processes using preemptive priority scheduling algorithm is __________.', 2, 1, 1, 'Gate', 2017, 5, 0, 0),
(839, 'Consider an arbitrary set of CPU-bound processes with unequal CPU burst lengths submitted at the same time to a computer system. Which one of the following process scheduling algorithms would minimize the average waiting time in the ready queue?', 1, 1, 1, 'Gate', 2016, 5, 0, 0),
(840, 'Consider a computer system with 40-bit virtual addressing and page size of sixteen kilobytes. If the computer system has a one-level page table per process and each page table entry requires 48 bits, then the size of the per-process page table is __________ megabytes.', 2, 1, 36, 'Gate', 2016, 5, 0, 0),
(841, 'Consider a disk queue with requests for I/O to blocks on cylinders 47, 38, 121, 191, 87, 11, 92, 10. The C-LOOK scheduling algorithm is used. The head is initially at cylinder number 63, moving towards larger cylinder numbers on its servicing pass. The cylinders are numbered from 0 to 199. The total head movement (in number of cylinders) incurred while servicing these requests is ___________.', 2, 1, 16, 'Gate', 2016, 5, 0, 0),
(842, 'Consider a computer system with ten physical page frames. The system is provided with an access sequence (a<sub>1</sub>,a<sub>2</sub>,…,a<sub>20</sub>,a<sub>1</sub>,a<sub>2</sub>,…,a<sub>20</sub>), where each ai is a distinct virtual page number. The difference in the number of page faults between the last-in-ﬁrst-out page replacement policy and the optimal page replacement policy is ___________.', 2, 1, 52, 'Gate', 2016, 5, 0, 0),
(843, 'Consider the following proposed solution for the critical section problem. There are n processes: P<sub>0</sub>...P<sub>(n-1)</sub>. In the code, function pmax returns an integer not smaller than any of its arguments. For all i, t[i] is initialized to zero.\r\n<br/>\r\nCode for P<sub>i</sub>:\r\n<pre>\r\ndo {\r\n\r\n      c[i]=1; t[i] = pmax(t[0],...,t[n-1])+1; c[i]=0;\r\n      for every j ≠ i in {0,...,n-1} {\r\n           while (c[j]);\r\n           while (t[j] != 0 && t[j]<=t[i]);\r\n      }\r\n      Critical Section;\r\n      t[i]=0;\r\n      Remainder Section;\r\n} while (true);\r\n</pre>\r\nWhich one of the following is TRUE about the above solution?', 1, 1, 2, 'Gate', 2016, 5, 0, 0),
(844, 'In which one of the following page replacement algorithms it is possible for the page fault rate to increase even when the number of allocated frames increases?', 1, 1, 52, 'Gate', 2016, 5, 0, 0),
(845, ' Consider the following processes, with the arrival time and the length of the CPU burst given in milliseconds. The scheduling algorithm used is preemptive shortest remaining-time ﬁrst.<br/><center><img src=\"./image/question/838.jpg\"/></center> <br/>The average turn around time of these processes is _________ milliseconds.', 2, 1, 1, 'Gate', 2016, 5, 0, 0),
(846, 'Consider the following two-process synchronization solution.\r\n<pre>\r\nProcess 0                                     Process 1\r\n---------                                     ---------\r\nEntry: loop while (turn == 1);                Entry: loop while (turn == 0);\r\n  (critical section)                            (critical section)\r\nExit: turn = 1;                               Exit: turn = 0;\r\n</pre>\r\nThe shared variable turn is initialized to zero. Which one of the following is TRUE?', 1, 1, 2, 'Gate', 2016, 5, 0, 0),
(847, 'Consider a non-negative counting semaphore S. The operation P(S) decrements S, and V(S) increments S. During an execution, 20 P(S) operations and 12 V(S) operations are issued in some order. The largest initial value of S for which at least one P(S) operation will remain blocked is _________.', 2, 1, 2, 'Gate', 2016, 5, 0, 0),
(848, 'The following two functions P1 and P2 that share a variable B with an initial value of 2 execute concurrently.\r\n<pre>\r\nP1() \r\n{ \r\n   C = B – 1; \r\n   B = 2*C;  \r\n}\r\n\r\nP2()\r\n{\r\n   D = 2 * B;\r\n   B = D - 1; \r\n}\r\n</pre>\r\nThe number of distinct values that B can possibly take after the execution is      ', 2, 1, 2, 'Gate', 2016, 5, 0, 0),
(849, 'Consider a uniprocessor system executing three tasks T1, T2 and T3, each of which is composed of an infinite sequence of jobs (or instances) which arrive periodically at intervals of 3, 7 and 20 milliseconds, respectively. The priority of each task is the inverse of its period and the available tasks are scheduled in order of priority, with the highest priority task scheduled first. Each instance of T1, T2 and T3 requires an execution time of 1, 2 and 4 milliseconds, respectively. Given that all tasks initially arrive at the beginning of the 1st millisecond and task preemptions are allowed, the first instance of T3 completes its execution at the end of ______________ milliseconds.', 2, 1, 2, 'Gate', 2015, 5, 0, 0),
(850, 'Suppose the following disk request sequence (track numbers) for a disk with 100 tracks is given: 45, 20, 90, 10, 50, 60, 80, 25, 70. Assume that the initial position of the R/W head is on track 50. The additional distance that will be traversed by the R/W head when the Shortest Seek Time First (SSTF) algorithm is used compared to the SCAN (Elevator) algorithm (assuming that SCAN algorithm moves towards 100 when it starts execution) is _________ tracks.', 2, 1, 16, 'Gate', 2015, 5, 0, 0),
(851, 'Consider a main memory with five page frames and the following sequence of page references: 3, 8, 2, 3, 9, 1, 6, 3, 8, 9, 3, 6, 2, 1, 3. Which one of the following is true with respect to page replacement policies First-In-First Out (FIFO) and Least Recently Used (LRU)? ', 1, 1, 52, 'Gate', 2015, 5, 0, 0),
(852, ' A system has 6 identical resources and N processes competing for them. Each process can request atmost 2 resources. Which one of the following values of N could lead to a deadlock? ', 2, 1, 60, 'Gate', 2015, 5, 0, 0),
(853, 'A computer system implements a 40-bit virtual address, page size of 8 kilobytes, and a 128-entry translation look-aside buffer (TLB organized into 32 sets each having four ways. Assume that the TLB tag does not store any process id. The minimum length of the TLB tag in bits is _________.', 2, 1, 68, 'Gate', 2015, 5, 0, 0),
(854, 'A computer system implements 8 kilobyte pages and a 32-bit physical address space. Each page table entry contains a valid bit, a dirty bit, three permission bits, and the translation. If the maximum size of the page table of a process is 24 megabytes, the length of the virtual address supported by the system is ________ bits.  ', 2, 1, 68, 'Gate', 2015, 5, 0, 0),
(855, ' The maximum number of processes that can be in Ready state for a computer system with n CPUs is ', 1, 1, 1, 'Gate', 2015, 5, 0, 0),
(856, 'Consider the following policies for preventing deadlock in a system with mutually exclusive resources.\r\n<pre>\r\nI. Processes should acquire all their resources at the beginning of execution.  If any resource is not  \r\n   available, all resources acquired so far are released.\r\nII. The resources are numbered uniquely, and processes are allowed to request for resources only in increasing \r\n    resource numbers.\r\nIII. The resources are numbered uniquely, and processes are allowed to request  for resources only in decreasing \r\n     resource numbers.\r\nIV. The resources are numbered uniquely. A process is allowed to request only for a resource with resource number larger\r\n    than its currently held resources.\r\n</pre>\r\nWhich of the above policies can be used for preventing deadlock?', 1, 1, 60, 'Gate', 2015, 5, 0, 0),
(857, 'For the processes listed in the following table, which of the following scheduling schemes will give the lowest average turnaround time?<br/><center><img src=\"./image/question/857.jpg\"/></center>', 1, 1, 1, 'Gate', 2015, 5, 0, 0),
(858, 'Suppose a disk has 201 cylinders, numbered from 0 to 200. At some time the disk arm is at cylinder 100, and there is a queue of disk access requests for cylinders 30, 85, 90, 100, 105, 110, 135 and 145. If Shortest-Seek Time First (SSTF) is being used for scheduling the disk access, the request for cylinder 90 is serviced after servicing ____________ number of requests.', 2, 1, 16, 'Gate', 2014, 5, 0, 0),
(859, 'Which one of the following is FALSE?', 1, 1, 1, 'Gate', 2014, 5, 0, 0),
(860, '<img src=\"./image/question/860.jpg\"/>', 1, 1, 60, 'Gate', 2014, 5, 0, 0),
(861, 'Consider the following set of processes that need to be scheduled on a single CPU. All the times are given in milliseconds. <br/><center><img src=\"./image/question/857.jpg\"/></center><br/> Using the shortest remaining time first scheduling algorithm, the average process turnaround time (in msec) is ____________________.', 2, 1, 1, 'Gate', 2014, 5, 0, 0),
(862, 'Assume that there are 3 page frames which are initially empty. If the page reference string is 1, 2, 3, 4, 2, 1, 5, 3, 2, 4, 6, the number of page faults using the optimal replacement policy is__________.', 2, 1, 52, 'Gate', 2014, 5, 0, 0),
(863, 'A FAT (file allocation table) based file system is being used and the total overhead of each entry in the FAT is 4 bytes in size. Given a 100 × 10<sup>6</sup> bytes disk on which the file system is stored and data block size is 10<sup>3</sup> bytes, the maximum size of a file that can be stored on this disk in units of 10<sup>6</sup> bytes is ____________.', 2, 1, 16, 'Gate', 2014, 5, 0, 0),
(864, 'Consider the procedure below for the Producer-Consumer problem which uses semaphores:  <br/><center><img src=\"./image/question/864.jpg\"/></center><br/>Which one of the following is TRUE?', 1, 1, 2, 'Gate', 2014, 5, 0, 0),
(865, 'Three processes A, B and C each execute a loop of 100 iterations. In each iteration of the loop, a process performs a single computation that requires tc CPU milliseconds and then initiates a single I/O operation that lasts for tio milliseconds. It is assumed that the computer where the processes execute has sufficient number of I/O devices and the OS of the computer assigns different I/O devices to each process. Also, the scheduling overhead of the OS is negligible. The processes have the following characteristics:\r\n<pre>\r\n Process id      tc      tio\r\n     A        100 ms    500 ms\r\n     B        350 ms    500 ms\r\n     C        200 ms    500 ms\r\n</pre>\r\nThe processes A, B, and C are started at times 0, 5 and 10 milliseconds respectively, in a pure time sharing system (round robin scheduling) that uses a time slice of 50 milliseconds. The time in milliseconds at which process C would complete its first I/O operation is ___________.', 2, 1, 1, 'Gate', 2014, 5, 0, 0),
(866, 'A computer has twenty physical page frames which contain pages numbered 101 through 120. Now a program accesses the pages numbered 1, 2, …, 100 in that order, and repeats the access sequence THRICE. Which one of the following page replacement policies experiences the same number of page faults as the optimal page replacement policy for this program?', 1, 1, 52, 'Gate', 2014, 5, 0, 0),
(867, 'A system contains three programs and each requires three tape units for its operation. The minimum number of tape units which the system must have such that deadlocks never arise is _________.', 2, 1, 60, 'Gate', 2014, 5, 0, 0),
(868, 'Consider the basic block given below.\r\n<pre>\r\n a = b + c\r\n c = a + d\r\n d = b + c\r\n e = d - b\r\n a = e + b\r\n</pre>\r\n The minimum number of nodes and edges present in the DAG representation of the above basic block respectively are  ', 1, 1, 43, 'Gate', 2014, 5, 0, 0),
(869, '<img src=\"./image/question/869.jpg\"/>', 2, 1, 1, 'Gate', 2014, 5, 0, 0),
(870, 'Consider a paging hardware with a TLB. Assume that the entire page table and all the pages are in the physical memory. It takes 10 milliseconds to search the TLB and 80 milliseconds to access the physical memory. If the TLB hit ratio is 0.6, the effective memory access time (in milliseconds) is  _________.', 2, 1, 68, 'Gate', 2014, 5, 0, 0),
(871, 'The memory access time is 1 nanosecond for a read operation with a hit in cache, 5 nanoseconds for a read operation with a miss in cache, 2 nanoseconds for a write operation with a hit in cache and 10 nanoseconds for a write operation with a miss in cache. Execution of a sequence of instructions involves 100 instruction fetch operations, 60 memory operand read operations and 40 memory operand write operations. The cache hit-ratio is 0.9.  The average memory access time (in nanoseconds) in executing the sequence of instructions is   __________.', 2, 1, 36, 'Gate', 2014, 5, 0, 0),
(872, 'A scheduling algorithm assigns priority proportional to the waiting time of a process. Every process starts with priority zero (the lowest priority). The scheduler re-evaluates the process priorities every T time units and decides the next process to schedule. Which one of the following is TRUE if the processes have no I/O operations and all arrive at time zero?', 1, 1, 1, 'Gate', 2013, 5, 0, 0),
(873, 'Three concurrent processes X, Y, and Z execute three different code segments that access and update certain shared variables. Process X executes the P operation (i.e., wait) on semaphores a, b and c; process Y executes the P operation on semaphores b, c and d; process Z executes the P operation on semaphores c, d, and a before entering the respective code segments. After completing the execution of its code segment, each process invokes the V operation (i.e., signal) on its three semaphores. All semaphores are binary semaphores initialized to one. Which one of the following represents a deadlock-free order of invoking the P operations by the processes?', 1, 1, 1, 'Gate', 2013, 5, 0, 0),
(874, 'Consider a hard disk with 16 recording surfaces (0-15) having 16384 cylinders (0-16383) and each cylinder contains 64 sectors (0-63). Data storage capacity in each sector is 512 bytes. Data are organized cylinder-wise and the addressing format is <cylinder no., surface no., sector no.>. A file of size 42797 KB is stored in the disk and the starting disk location of the file is <1200, 9, 40>. What is the cylinder number of the last sector of the file, if it is stored in a contiguous manner?', 2, 1, 16, 'Gate', 2013, 5, 0, 0),
(875, 'A shared variable x, initialized to zero, is operated on by four concurrent processes W, X, Y, Z as follows. Each of the processes W and X reads x from memory, increments by one, stores it to memory, and then terminates. Each of the processes Y and Z reads x from memory, decrements by two, stores it to memory, and then terminates. Each process before reading x invokes the P operation (i.e., wait) on a counting semaphore S and invokes the V operation (i.e., signal) on the semaphore S after storing x to memory. Semaphore S is initialized to two. What is the maximum possible value of x after all processes complete execution?', 2, 1, 1, 'Gate', 2013, 5, 0, 0),
(876, 'Consider the following C functions.<br/><img src=\"./image/question/876.jpg\"/><br/> The return value of fun2 (5) is _______. ', 2, 7, 26, 'Gate', 2020, 5, 0, 0),
(877, 'Consider the following C functions.<br/><img src=\"./image/question/877.jpg\"/><br/> The value returned by pp (3, 4) is ________. ', 2, 7, 26, 'Gate', 2020, 5, 0, 0),
(878, '<img src=\"./image/question/878.jpg\"/>', 2, 7, 26, 'Gate', 2018, 5, 0, 0),
(879, '<img src=\"./image/question/879.jpg\"/>', 1, 7, 26, 'Gate', 2018, 5, 0, 0),
(880, '<img src=\"./image/question/880.jpg\"/>', 1, 7, 26, 'Gate', 2018, 5, 0, 0),
(881, '<img src=\"./image/question/881.jpg\"/>', 2, 7, 26, 'Gate', 2018, 5, 0, 0),
(882, '<img src=\"./image/question/882.jpg\"/>', 2, 7, 26, 'Gate', 2018, 5, 0, 0),
(883, '<img src=\"./image/question/883.jpg\"/>', 1, 7, 26, 'Gate', 2017, 5, 0, 0),
(884, '<img src=\"./image/question/884.jpg\"/>', 1, 7, 26, 'Gate', 2017, 5, 0, 0),
(885, '<img src=\"./image/question/885.jpg\"/>', 1, 7, 26, 'Gate', 2017, 5, 0, 0),
(886, '<img src=\"./image/question/886.jpg\"/>', 2, 7, 26, 'Gate', 2017, 5, 0, 0),
(887, '<img src=\"./image/question/887.jpg\"/>', 2, 7, 26, 'Gate', 2017, 5, 0, 0),
(888, '<img src=\"./image/question/888.jpg\"/>', 1, 7, 26, 'Gate', 2017, 5, 0, 0),
(889, '<img src=\"./image/question/889.jpg\"/>', 1, 7, 26, 'Gate', 2017, 5, 0, 0),
(890, 'Consider the C program fragment below which is meant to divide x and y using repeated subtractions. The variables x, y, q and r are all unsigned int.\r\n<pre>\r\n          while (r >= y)  {\r\n              r = r - y;\r\n              q = q + 1;\r\n          }\r\n</pre>\r\nWhich of the following conditions on the variables x, y, q and r before the execution of the fragment will ensure that the loop terminates in a state satisfying the condition x == (y*q + r)?', 1, 7, 26, 'Gate', 2017, 5, 0, 0),
(891, 'Consider the following snippet of a C program. Assume that swap(&x, &y)  exchanges the contents of x and y.\r\n<pre>\r\nint main ()  {\r\n      int array[] = {3, 5, 1, 4, 6, 2};\r\n      int done = 0;\r\n      int i;\r\n\r\n      while (done == 0)  {\r\n           done = 1;\r\n           for (i=0; i<=4; i++)  {\r\n                if (array[i] < array[i+1])  {\r\n                       swap (&array[i], &array[i+1]);\r\n                       done = 0;\r\n                }\r\n           }\r\n           for (i=5; i>=1; i--)  {\r\n                if (array[i] > array[i-1])   {\r\n                      swap(&array[i], &array[i-1]);\r\n                      done=0;\r\n                }\r\n           }\r\n       }\r\n       printf(\"%d\", array[3]);\r\n}\r\n</pre>\r\nThe output of the program is ___________.', 2, 7, 26, 'Gate', 2017, 5, 0, 0),
(892, 'Consider the following C program.\r\n<pre>\r\n#include\r\nint main () {\r\n    int m=10;\r\n    int n, n1;\r\n    n=++m;\r\n    n1=m++;\r\n    n--;\r\n    --n1;\r\n    n-=n1;\r\n    printf(“%d”, n);\r\n    return 0;\r\n}\r\n</pre>\r\nThe output of the program is ______', 2, 7, 26, 'Gate', 2017, 5, 0, 0),
(893, 'Consider the following C program.\r\n<pre>\r\n#include<stdio.h>\r\n#include<string.h>\r\nint main ()  {\r\n  char* c = \"GATECSIT2017\";\r\n  char* p = c;\r\n  printf(\"%d\", (int) strlen (c + 2[p] - 6[p] - 1));\r\n  return 0;\r\n}\r\n</pre>\r\nThe output of the program is __________.', 2, 7, 26, 'Gate', 2017, 5, 0, 0),
(894, 'Consider the following C program.\r\n<pre>\r\nvoid f(int, short);\r\nvoid main ()\r\n{\r\n     int i = 100;\r\n     short s = 12;\r\n     short *p = &s;\r\n     __________ ;         // call to f()\r\n}\r\n</pre>\r\nWhich one of the following expressions, when placed in the blank above, will NOT result in a type checking error?', 1, 7, 26, 'Gate', 2016, 5, 0, 0),
(895, 'Consider the following C program.\r\n<pre>\r\n#include<stdio.h>\r\nvoid mystery(int *ptra, int *ptrb) {\r\n      int *temp;\r\n      temp = ptrb;\r\n      ptrb = ptra;\r\n      ptra = temp;\r\n}\r\nint main() {\r\n      int a=2016, b=0, c=4, d=42;\r\n      mystery(&a, &b);\r\n      if (a < c)\r\n             mystery(&c, &a);\r\n      mystery(&a, &d);\r\n      printf(\"%d\\n\", a);\r\n}\r\n</pre>\r\nThe output of the program is ________.', 2, 7, 26, 'Gate', 2016, 5, 0, 0),
(896, 'The following function computes the maximum value contained in an integer array p[] of size n (n >= 1).\r\n<pre>\r\n       int max(int *p, int n) {\r\n           int a=0, b=n-1;\r\n           \r\n           while (__________) {\r\n               if (p[a] <= p[b]) {a = a+1;}\r\n               else                 {b = b-1;}\r\n           }\r\n\r\n           return p[a];\r\n       }\r\n</pre>\r\nThe missing loop condition is', 1, 7, 26, 'Gate', 2016, 5, 0, 0),
(897, 'What will be the output of the following C program?\r\n<pre>\r\nvoid count(int n)  {\r\n     static int d=1;\r\n     printf(\"%d \", n);\r\n     printf(\"%d \", d);\r\n     d++;\r\n     if(n>1) count(n-1);\r\n     printf(\"%d \", d);\r\n}\r\n\r\nvoid main() {\r\n     count(3);\r\n}\r\n</pre>', 1, 7, 26, 'Gate', 2016, 5, 0, 0),
(898, 'What will be the output of the following pseudo-code when parameters are passed by reference and dynamic scoping is assumed?\r\n<pre>\r\n       a=3;\r\n       void n(x) {x = x * a; print(x);}\r\n       void m(y) {a = 1; a = y - a; n(a); print(a);}\r\n       void main() {m(a);}\r\n</pre>', 1, 7, 26, 'Gate', 2016, 5, 0, 0),
(899, 'The value printed by the following program is __________.\r\n<pre>\r\n     void f(int* p, int m) {\r\n        m = m + 5;\r\n        *p = *p + m;\r\n        return;\r\n     }\r\n\r\n     void main() {\r\n        int i=5, j=10;\r\n        f(&i, j);\r\n        printf(\"%d\", i+j);\r\n     }\r\n</pre>', 2, 7, 26, 'Gate', 2016, 5, 0, 0),
(900, 'The following function computes X<sup>Y</sup> for positive integers X and Y.\r\n<pre>\r\n       int exp (int X, int Y) {\r\n           int res = 1, a = X, b = Y;\r\n\r\n           while ( b != 0 ){\r\n               if ( b%2 == 0) { a = a*a; b = b/2; }\r\n               else           { res = res*a; b = b-1; }\r\n           }\r\n           return res;\r\n\r\n        }\r\n</pre>\r\nWhich one of the following conditions is TRUE before every iteration of the loop?', 1, 7, 26, 'Gate', 2016, 5, 0, 0),
(901, 'Consider the following program:\r\n<pre>\r\n    int f(int *p, int n)\r\n    {\r\n       if (n <= 1) return 0;\r\n       else return max (f(p+1,n-1),p[0]-p[1]);\r\n    }\r\n\r\n    int main()\r\n    {\r\n       int a[] = {3,5,2,6,4};\r\n       printf(\"%d\", f(a,5));\r\n    }\r\n</pre>\r\nNote: max(x,y) returns the maximum of x and y.\r\n\r\nThe value printed by this program is __________.', 2, 7, 26, 'Gate', 2016, 5, 0, 0),
(902, 'The output of the following C program is __________.\r\n<pre>\r\nvoid f1 (int a, int b)\r\n{\r\n  int c;\r\n  c=a; a=b; b=c;\r\n}\r\nvoid f2 (int *a, int *b)\r\n{\r\n  int c;\r\n  c=*a; *a=*b;*b=c;\r\n}\r\nint main()\r\n{\r\n  int a=4, b=5, c=6;\r\n  f1(a, b);\r\n  f2(&b, &c);\r\n  printf (“%d”, c-a-b);\r\n  return 0;\r\n}\r\n</pre>', 2, 7, 26, 'Gate', 2015, 5, 0, 0),
(903, 'What is the output of the following C code? Assume that the address of x is 2000 (in decimal) and an integer requires four bytes of memory.\r\n<pre>\r\n#include <stdio.h>\r\nint main()\r\n{ \r\n   unsigned int x[4][3] = {{1, 2, 3}, {4, 5, 6}, \r\n                           {7, 8, 9}, {10, 11, 12}};\r\n   printf(\"%u, %u, %u\", x+3, *(x+3), *(x+2)+3);\r\n}\r\n</pre>', 1, 7, 26, 'Gate', 2015, 5, 0, 0),
(904, 'Consider the following C program segment.\r\n<pre>\r\nwhile (first <= last)\r\n{\r\n   if (array [middle] < search)\r\n      first = middle +1;\r\n   else if (array [middle] == search)\r\n      found = True;\r\n   else last = middle – 1;\r\n   middle = (first + last)/2;\r\n}\r\nif (first < last) not Present = True;\r\n</pre>\r\nThe cyclomatic complexity of the program segment is __________.', 2, 7, 26, 'Gate', 2015, 5, 0, 0),
(905, 'Consider the following C function.\r\n<pre>\r\nint fun1 (int n)\r\n{\r\n   int i, j, k, p, q = 0;\r\n   for (i = 1; i<n; ++i)\r\n   {\r\n      p = 0;\r\n      for (j = n; j > 1; j = j/2)\r\n         ++p;\r\n      for (k = 1; k < p; k = k*2)\r\n         ++q;\r\n   }\r\n   return q;\r\n}\r\n</pre>', 1, 7, 26, 'Gate', 2015, 5, 0, 0),
(906, 'Consider the following function written the C programming language. <br/><img src=\"./image/question/906.jpg\"/>', 1, 7, 26, 'Gate', 2015, 5, 0, 0),
(907, 'Consider the following C functions <br/><img src=\"./image/question/907.jpg\"/>', 2, 7, 26, 'Gate', 2015, 5, 0, 0),
(908, 'Consider the C program below <br/><img src=\"./image/question/908.1.jpg\"/><br/><img src=\"./image/question/908.2.jpg\"/><br/>value printed by the above program is __________', 2, 7, 26, 'Gate', 2015, 5, 0, 0),
(909, 'Consider the following C program segment.\r\n<pre>\r\n# include <stdio.h>\r\nint main( )\r\n{\r\n    char s1[7] = \"1234\", *p;\r\n    p = s1 + 2;\r\n    *p = \'0\' ;\r\n    printf (\"%s\", s1);\r\n}\r\n</pre>\r\nWhat will be printed by the program?\r\n', 2, 7, 26, 'Gate', 2015, 5, 0, 0),
(910, 'Consider the following recursive C function. If get(6) function is being called in main() then how many times will the get() function be invoked before returning to the main()?\r\n<pre>\r\nvoid get (int n)\r\n{\r\n   if (n < 1) return;\r\n   get(n-1);\r\n   get(n-3);\r\n   printf(\"%d\", n);\r\n}\r\n</pre>', 2, 7, 26, 'Gate', 2015, 5, 0, 0),
(911, 'Consider the following C program.\r\n<pre>\r\n# include\r\nint main( )\r\n{\r\n  static int a[] = {10, 20, 30, 40, 50};\r\n  static int *p[] = {a, a+3, a+4, a+1, a+2};\r\n  int **ptr = p;\r\n  ptr++;\r\n  printf(\"%d%d\", ptr - p, **ptr};\r\n}\r\n</pre>\r\nThe output of the program is _________\r\n', 2, 7, 26, 'Gate', 2015, 5, 0, 0),
(912, 'Consider the following C program:\r\n<pre>\r\n# include <stdio.h>\r\nint main( )\r\n{\r\n   int i, j, k = 0;\r\n   j = 2 * 3 / 4 + 2.0 / 5 + 8 / 5;\r\n   k  -= --j;\r\n   for (i = 0; i < 5; i++)\r\n   {\r\n      switch(i + k)\r\n      {\r\n         case 1:\r\n         case 2: printf(\"n%d\", i + k);\r\n         case 3: printf(\"n%d\", i + k);\r\n         default: printf(\"n%d\", i + k);\r\n      }\r\n   }\r\n   return 0;\r\n}\r\n</pre>', 2, 7, 26, 'Gate', 2015, 5, 0, 0),
(913, 'Consider the following C program. The output of the program is __________.\r\n<pre>\r\n# include <stdio.h>\r\nint f1(void);\r\nint f2(void);\r\nint f3(void);\r\nint x = 10;\r\nint main()\r\n{\r\n    int x = 1;\r\n    x += f1() + f2() + f3() + f2();\r\n    pirntf(\"%d\", x);\r\n    return 0;\r\n}\r\nint f1()\r\n{\r\n    int x = 25;\r\n    x++;\r\n    return x;\r\n}\r\nint f2( )\r\n{\r\n    static int x = 50;\r\n    x++;\r\n    return x;\r\n}\r\nint f3( )\r\n{\r\n    x *= 10;\r\n    return x;\r\n}\r\n</pre>', 2, 7, 26, 'Gate', 2015, 5, 0, 0),
(914, 'Consider the following program in C language:\r\n<pre>\r\n#include <stdio.h>\r\nmain()\r\n{\r\n    int i;\r\n    int *pi = &i;\r\n    scanf(\"%d\", pi);\r\n    printf(\"%dn\", i+5);\r\n}\r\n</pre>\r\nWhich one of the following statements is TRUE?\r\n', 1, 7, 26, 'Gate', 2014, 5, 0, 0),
(915, '<img src=\"./image/question/915.jpg\"/>', 2, 7, 26, 'Gate', 2014, 5, 0, 0),
(916, 'Suppose n and p are unsigned int variables in a C program. We wish to set p to <sup>n</sup>C<sub>3</sub>.  If n is large, which one of the following statements is most likely to set p  correctly?', 1, 7, 26, 'Gate', 2014, 5, 0, 0),
(917, 'Consider the following function\r\n<pre>\r\ndouble f(double x){\r\n  if (abs(x*x - 3) < 0.01) return x;\r\n  else return f(x/2 + 1.5/x);\r\n}\r\n</pre>\r\nGive a value q (to 2 decimals) such that f(q) will return q:_____.\r\n', 2, 7, 26, 'Gate', 2014, 5, 0, 0),
(918, 'Consider the C function given below.\r\n<pre>\r\nint f(int j)\r\n{\r\n  static int i = 50;\r\n  int k;\r\n  if (i == j)\r\n  {\r\n    printf(“something”);\r\n    k = f(i);\r\n    return 0;\r\n  }\r\n  else return 0;\r\n}\r\n</pre>\r\nWhich one of the following is TRUE?\r\n', 1, 7, 26, 'Gate', 2014, 5, 0, 0),
(919, '<img src=\"./image/question/919.jpg\"/>', 1, 7, 26, 'Gate', 2014, 5, 0, 0),
(920, 'The minimum number of arithmetic operations required to evaluate the polynomial P(X) = X<sup>5</sup>   4X<sup>3</sup>   6X   5 for a given value of X, using only one temporary variable is ________.', 2, 7, 26, 'Gate', 2013, 5, 0, 0),
(921, 'Consider the following function:\r\n<pre>\r\nint unknown(int n) {\r\n    int i, j, k = 0;\r\n    for (i  = n/2; i <= n; i++)\r\n        for (j = 2; j <= n; j = j * 2)\r\n            k = k + n/2;\r\n    return k;\r\n }\r\n</pre>', 1, 7, 26, 'Gate', 2013, 5, 0, 0),
(922, 'The procedure given below is required to find and replace certain characters inside an input character string supplied in array A. The characters to be replaced are supplied in array oldc, while their respective replacement characters are supplied in array newc. Array A has a fixed length of five characters, while arrays oldc and newc contain three characters each. However, the procedure is flawed\r\n<pre>\r\nvoid find_and_replace(char *A, char *oldc, char *newc) {\r\n    for (int i = 0; i < 5; i++)\r\n       for (int j = 0; j < 3; j++)\r\n           if (A[i] == oldc[j]) A[i] = newc[j];\r\n}\r\n</pre>\r\nThe procedure is tested with the following four test cases (1) oldc = \"abc\", newc = \"dab\" (2) oldc = \"cde\", newc = \"bcd\" (3) oldc = \"bca\", newc = \"cda\" (4) oldc = \"abc\", newc = \"bac\" The tester now tests the program on all input strings of length five consisting of characters ‘a’, ‘b’, ‘c’, ‘d’ and ‘e’ with duplicates allowed. If the tester carries out this testing with the four test cases given above, how many test cases will be able to capture the flaw?', 1, 7, 26, 'Gate', 2013, 5, 0, 0),
(923, 'What will be the output of the following C program segment?\r\n<pre>\r\nchar inchar = \'A\';\r\nswitch (inchar)\r\n{\r\ncase \'A\' :\r\n    printf (\"choice A n\") ;\r\ncase \'B\' :\r\n    printf (\"choice B \") ;\r\ncase \'C\' :\r\ncase \'D\' :\r\ncase \'E\' :\r\ndefault:\r\n    printf (\"No Choice\") ;\r\n}\r\n</pre>', 1, 7, 26, 'Gate', 2012, 5, 0, 0),
(924, 'What does the following fragment of C-program print?<pre>char c[] = \"GATE2011\";char *p =c;printf(\"%s\", p   p[3] - p[1]) ;</pre>', 1, 7, 26, 'Gate', 2011, 5, 0, 0),
(925, 'Consider the following recursive C function that takes two arguments\r\n<pre>\r\nunsigned int foo(unsigned int n, unsigned int r) {\r\n  if (n  > 0) return (n%r +  foo (n/r, r ));\r\n  else return 0;\r\n}\r\n</pre>\r\nWhat is the return value of the function foo when it is called as foo(345, 10) ?\r\n', 2, 7, 26, 'Gate', 2011, 5, 0, 0),
(926, '<img src=\"./image/question/927.jpg\"/>', 1, 7, 26, 'Gate', 2012, 5, 0, 0),
(927, 'Consider the following recursive C function that takes two arguments.<br/><img src=\"./image/question/926.jpg\"/>', 2, 7, 26, 'Gate', 2011, 5, 0, 0),
(928, 'What does the following program print?\r\n<pre>\r\n#include\r\nvoid f(int *p, int *q)\r\n{\r\n  p = q;\r\n *p = 2;\r\n}\r\nint i = 0, j = 1;\r\nint main()\r\n{\r\n  f(&i, &j);\r\n  printf(\"%d %d n\", i, j);\r\n  getchar();\r\n  return 0;\r\n}\r\n</pre>', 1, 7, 26, 'Gate', 2010, 5, 0, 0),
(929, 'What is the value printed by the foloowing c program\r\n<pre>\r\n#include<stdio.h>\r\nint f(int *a, int n)\r\n{\r\n  if(n <= 0) return 0;\r\n  else if(*a % 2 == 0) return *a + f(a+1, n-1);\r\n  else return *a - f(a+1, n-1);\r\n}\r\n \r\nint main()\r\n{\r\n  int a[] = {12, 7, 13, 4, 11, 6};\r\n  printf(\"%d\", f(a, 6));\r\n  getchar();\r\n  return 0;\r\n}\r\n</pre>', 2, 7, 26, 'Gate', 2010, 5, 0, 0),
(930, 'Consider the program below:\r\n<pre>\r\n# include < stdio .h >\r\nint fun(int n, int * f_p) \r\n{ \r\n    int t, f; \r\n    if (n <= 1) \r\n    { \r\n        * f_p = 1;\r\n         return 1;\r\n    }\r\n    t = fun (n- 1, f_p);\r\n    f = t+ * f_p;\r\n    * f_p = t;\r\n    return f; \r\n} \r\nint main() \r\n{ \r\n    int x = 15; \r\n    printf (\" % d\\ n\", fun(5, & x)); \r\n    return 0; \r\n}\r\n</pre>\r\n The value printed is', 2, 7, 26, 'Gate', 2009, 5, 0, 0),
(931, 'Which combination of the integer variables x, y and z makes the variable a get the value 4 in the following expression? \r\n<pre>\r\na = (x > y)? ((x > z)? x : z): ((y > z)? y : z)\r\n</pre>', 1, 7, 26, 'Gate', 2008, 5, 0, 0),
(932, 'What is printed by the following C program?\r\n<pre> \r\nint f (int x, int * py, int * *ppz)                        void main ( )                                                                  {                                                          {\r\n    int y,    z;                                                int   c,   * b,      * *a;\r\n    * *ppz  +  = 1;  z = *ppz;                                  c = 4;     b = &c;  a = &b;\r\n    * py  + = 2;   y = *py;                                     pr int f (\" %d\", f (c, b, a));\r\n    x  + = 3;                                              } \r\n    return x + y + z; \r\n}\r\n</pre>', 2, 7, 26, 'Gate', 2008, 5, 0, 0),
(933, 'Choose the correct option to fill ? 1 and ? 2 so that the program below prints an input string in reverse order. Assume that the input string is terminated by a newline \r\n<pre>\r\nvoid recerse (void){\r\n    int c;   if (?1)reverse ( );\r\n   ? 2 \r\n} \r\nmain ( ) \r\n{\r\n     printf(\"Enter Text \");\r\n     printf(\"\\ n \");\r\n     reverse ( );\r\n     printf(\"\\ n \");\r\n}\r\n</pre>', 1, 7, 26, 'Gate', 2008, 5, 0, 0),
(934, '<img src=\"./image/question/934.jpg\"/>', 1, 7, 26, 'Gate', 2008, 5, 0, 0),
(935, '<img src=\"./image/question/935.jpg\"/>', 1, 7, 26, 'Gate', 2004, 5, 0, 0),
(936, 'What is the output printed by the following program?\r\n<pre>\r\n#include<stdio.h>\r\nint f(int n, int k)\r\n{\r\n    if (n == 0)\r\n        return 0;\r\n    else if (n % 2)\r\n        return f(n/2, 2*k) + k;\r\n    else return f(n/2, 2*k) - k;\r\n}\r\nint main ()\r\n{\r\n    printf(\"%d\", f(20, 1));\r\n    return 0;\r\n}\r\n</pre>', 2, 7, 26, 'Gate', 2005, 5, 0, 0),
(937, 'Let a and b be two sorted arrays containing n integers each, in non-decreasing order. Let c be a sorted array containing 2n integers obtained by merging the two arrays a and b. Assuming the arrays are indexed starting from 0, consider the following four statements<br/>Which of the following is TRUE? ', 3, 7, 26, 'Gate', 2005, 5, 0, 0),
(938, 'Let a be an array containing n integers in increasing order. The following algorithm determines whether there are two distinct numbers in the array whose difference is a specified number S > 0.\r\n<pre>\r\ni = 0;\r\nj = 1;\r\nwhile (j < n )\r\n{\r\n    if (E) j++;\r\n    else if (a[j] - a[i] == S) break;\r\n    else i++;\r\n}\r\nif (j < n)\r\n    printf(\"yes\")\r\nelse\r\n   printf (\"no\");\r\n</pre>\r\nChoose the correct expression for E.\r\n', 1, 7, 26, 'Gate', 2005, 5, 0, 0);
INSERT INTO `question` (`q_id`, `question`, `type`, `sub_id`, `topic_id`, `source`, `year`, `life`, `attampt`, `correct`) VALUES
(939, 'The following C function takes a singly-linked list of integers as a parameter and rearranges the elements of the list. The list is represented as pointer to a structure. The function is called with the list containing the integers 1, 2, 3, 4, 5, 6, 7 in the given order. What will be the contents of the list after the function completes execution?\r\n<pre>\r\nstruct node {\r\n    int value;\r\n    struct node *next;\r\n);\r\nvoid rearrange (struct node *list)\r\n{\r\n    struct node *p, *q;\r\n    int temp;\r\n    if (!list || !list -> next)\r\n        return;\r\n    p = list;\r\n    q = list -> next;\r\n    while (q)\r\n    {\r\n        temp = p -> value;\r\n        p -> value = q -> value;\r\n        q -> value = temp;\r\n        p = q -> next;\r\n        q = p ? p -> next : 0;\r\n    }\r\n}\r\n</pre>', 1, 7, 26, 'Gate', 2005, 5, 0, 0),
(940, 'The following C function takes two ASCII strings and determines whether one is an anagram of the other. An anagram of a string s is a string obtained by permuting the letters in s.\r\n<pre>\r\nint anagram (char *a, char *b) {\r\n    int count [128], j;\r\n    for (j = 0;  j < 128; j++) count[j] = 0;\r\n    j = 0;\r\n    while (a[j] && b[j]) {\r\n    A;\r\n    B;\r\n}\r\nfor (j = 0; j < 128; j++) if (count [j]) return 0;\r\nreturn 1;\r\n}\r\n</pre>\r\nChoose the correct alternative for statements A and B.', 1, 7, 26, 'Gate', 2005, 5, 0, 0),
(941, 'Consider the following C-program:\r\n<pre>\r\ndouble foo (double); /* Line 1 */\r\nint main()\r\n{\r\n    double da, db;\r\n    // input da\r\n    db = foo(da);\r\n}\r\ndouble foo(double a)\r\n{\r\n    return a;\r\n}\r\n</pre>\r\nThe above code compiled without any error or warning. If Line 1 is deleted, the above code will show:\r\n', 1, 7, 26, 'Gate', 2005, 5, 0, 0),
(942, 'What does the following C-statement declare? \r\n<pre>\r\nint ( * f) (int * ) ;\r\n</pre>', 1, 7, 26, 'Gate', 2005, 5, 0, 0),
(943, 'The following function computes the value of <sup>m</sup>C<sub>n</sub> correctly for all legal values m and n (m≥1,n≥0 and m>n)\r\n<pre>\r\n int func(int m, int n)\r\n{\r\n    if (E) return 1;\r\n    else return(func(m -1, n) + func(m - 1, n - 1));\r\n}\r\n</pre>\r\nIn the above function, which of the following is the correct expression for E?   ', 1, 7, 26, 'Gate', 2006, 5, 0, 0),
(944, 'Which one of the choices given below would be printed when the following program is executed?\r\n<pre>\r\n#include\r\nint a1[] = {6, 7, 8, 18, 34, 67};\r\nint a2[] = {23, 56, 28, 29};\r\nint a3[] = {-12, 27, -31};\r\nint *x[] = {a1, a2, a3};\r\nvoid print(int *a[])\r\n{\r\n            printf(\"%d,\", a[0][2]);\r\n            printf(\"%d,\", *a[2]);\r\n            printf(\"%d,\", *++a[0]);\r\n            printf(\"%d,\", *(++a)[0]);\r\n            printf(\"%dn\", a[-1][+1]);\r\n}\r\nmain()\r\n{\r\n             print(x);\r\n}\r\n</pre>', 1, 7, 26, 'Gate', 2006, 5, 0, 0),
(945, 'Which one of the choices given below would be printed when the following program is executed?\r\n<pre>\r\n#include stdio.h\r\nvoid swap (int *x, int *y)\r\n{\r\n    static int *temp;\r\n    temp = x;\r\n    x = y;\r\n    y = temp;\r\n}\r\nvoid printab ()\r\n{\r\n    static int i, a = -3, b = -6;\r\n    i = 0;\r\n    while (i <= 4)\r\n    {\r\n        if ((i++)%2 == 1) continue;\r\n        a = a + i;\r\n        b = b + i;\r\n    }\r\n    swap (&a, &b);\r\n    printf(\"a =  %d, b = %dn\", a, b);\r\n}\r\nmain()\r\n{\r\n    printab();\r\n    printab();\r\n}\r\n</pre>', 1, 7, 26, 'Gate', 2006, 5, 0, 0),
(946, 'Which one of the choices given below would be printed when the following program is executed ?\r\n<pre>\r\n#include <stdio.h>\r\nstruct test {\r\n               int i;\r\n               char *c;\r\n}st[] = {5, \"become\", 4, \"better\", 6, \"jungle\", 8, \"ancestor\", 7, \"brother\"};\r\nmain ()\r\n{ \r\n    struct test *p = st;\r\n    p += 1;\r\n    ++p -> c;\r\n    printf(\"%s,\", p++ -> c);\r\n    printf(\"%c,\", *++p -> c);\r\n    printf(\"%d,\", p[0].i);\r\n    printf(\"%s n\", p -> c);\r\n}\r\n</pre>', 1, 7, 26, 'Gate', 2006, 5, 0, 0),
(947, 'Consider this C code to swap two integers and these five statements after it:\r\n<pre>\r\nvoid swap(int *px, int *py)\r\n{\r\n   *px = *px - *py;\r\n   *py = *px + *py;\r\n   *px = *py - *px;\r\n}\r\nS1: will generate a compilation error \r\nS2: may generate a segmentation fault at runtime depending on the arguments passed \r\nS3: correctly implements the swap procedure for all input pointers referring to integers stored in memory locations accessible to the process \r\nS4: implements the swap procedure correctly for some but not all valid input pointers \r\nS5: may add or subtract integers and pointers.\r\n</pre>', 1, 7, 26, 'Gate', 2006, 5, 0, 0),
(948, 'Early binding refers to a binding performed at compile time and late binding refers to a binding performed at execution time. Consider the following statements: \r\n<pre>\r\ni. Static scope facilitates w1 bindings. \r\nii. Dynamic scope requires w2 bindings. \r\niii. Early bindings w3 execution efficiency. \r\niv. Late bindings w4 execution efficiency. \r\n</pre>\r\nThe right choices of wl, w2, w3 and w4 (in that order) are  ', 1, 7, 26, 'Gate', 2006, 5, 0, 0),
(949, 'Consider the program below in a hypothetical programming language which allows global variables and a choice of static or dynamic scoping.\r\n<pre>\r\nint i ;\r\nprogram main ()\r\n{\r\n    i = 10;\r\n    call f();\r\n}\r\n\r\nprocedure f()\r\n{   \r\n    int i = 20;\r\n    call g ();\r\n}\r\nprocedure g ()\r\n{   \r\n    print i;\r\n}\r\n</pre>\r\nLet x be the value printed under static scoping and y be the value printed under dynamic scoping. Then, x and y are', 1, 7, 26, 'Gate', 2007, 5, 0, 0),
(950, 'Consider the program below in a hypothetical language which allows global variable and a choice of call by reference or call by value methods of parameter passing.\r\n<pre>\r\nint i ;\r\nprogram main ()\r\n{\r\n    int j = 60;\r\n    i = 50;\r\n    call f (i, j);\r\n    print i, j;\r\n}\r\nprocedure f (x, y)\r\n{           \r\n    i = 100;\r\n    x = 10;\r\n    y = y + i ;\r\n}\r\n</pre>\r\nWhich one of the following options represents the correct output of the program for the two parameter passing mechanisms?', 1, 7, 26, 'Gate', 2007, 5, 0, 0),
(951, '<pre>\r\n#include <stdio.h>\r\nint main ()    {\r\n    int sum = 0, maxsum = 0,  i,  n = 6;\r\n    int a [] = {2, -2, -1, 3, 4, 2};\r\n    for (i = 0; i < n; i++)    {\r\n            if (i == 0 || a [i]  < 0  || a [i] < a [i - 1])  {\r\n                     if (sum > maxsum) maxsum = sum;\r\n                     sum = (a [i] > 0) ? a [i] : 0;\r\n            }\r\n            else sum += a [i];\r\n    }\r\n    if (sum > maxsum) maxsum = sum ;\r\n    printf (\"%dn\", maxsum);\r\n\r\n}\r\n</pre>', 2, 7, 26, 'Gate', 2007, 5, 0, 0),
(952, 'The function f is defined as follows:\r\n<pre>\r\nint f (int n) {\r\n    if (n <= 1) return 1;\r\n    else if (n % 2  ==  0) return f(n/2);\r\n    else return f(3n - 1);\r\n}\r\n</pre>\r\nAssuming that arbitrarily large integers can be passed as a parameter to the function, consider the following statements. ', 3, 7, 26, 'Gate', 2007, 5, 0, 0),
(953, 'Consider the following C function, what is the output?\r\n<pre>\r\n#include <stdio.h>\r\nint f(int n)\r\n{\r\n    static int r = 0;\r\n    if (n <= 0) return 1;\r\n    if (n > 3)\r\n    {\r\n        r = n;\r\n        return f(n-2)+2;\r\n    }\r\n    return f(n-1)+r;\r\n}\r\nint main()\r\n{\r\n    printf(\"%d\", f(5));\r\n}\r\n</pre>', 2, 7, 26, 'Gate', 2007, 5, 0, 0),
(954, 'Consider the code fragment written in C below :\r\n<pre>\r\nvoid f (int n)\r\n{\r\n    if (n <= 1)  {\r\n        printf (\"%d\", n);\r\n    }\r\n    else {\r\n        f (n/2);\r\n        printf (\"%d\", n%2);\r\n    }\r\n}\r\n</pre>\r\nWhich of the following implementations will produce the same output for f(173) as the above code?\r\n<pre>\r\nP1\r\nvoid f (int n)\r\n{\r\n    if (n/2)  {\r\n        f(n/2);\r\n    }\r\n    printf (\"%d\", n%2);\r\n}\r\nP2\r\nvoid f (int n)\r\n{\r\n    if (n <=1)  {\r\n        printf (\"%d\", n);\r\n    }\r\n    else {\r\n        printf (\"%d\", n%2);\r\n        f (n/2);\r\n    }\r\n}\r\n</pre>', 1, 7, 26, 'Gate', 2008, 5, 0, 0),
(955, 'Consider the code fragment written in C below :\r\n<pre>\r\nvoid f (int n)\r\n{\r\n  if (n <=1)  {\r\n   printf (\"%d\", n);\r\n  }\r\n  else {\r\n   f (n/2);\r\n   printf (\"%d\", n%2);\r\n  }\r\n}\r\n</pre>\r\nWhat does f(173) print?\r\n', 1, 7, 26, 'Gate', 2007, 5, 0, 0),
(956, 'What is the output printed by the following C code?\r\n<pre>\r\n# include <stdio.h>\r\nint main ()\r\n{\r\n    char a [6] = \"world\";\r\n    int i, j;\r\n    for (i = 0, j = 5; i < j; a [i++] = a [j--]);\r\n    printf (\"%sn\", a);\r\n}\r\n /* Add code here. Remove these lines if not writing code */\r\n</pre>', 1, 7, 26, 'Gate', 2008, 5, 0, 0),
(957, 'Consider the C program below. What does it print?\r\n<pre>\r\n# include <stdio.h>\r\n# define swapl (a, b) tmp = a; a = b; b = tmp\r\nvoid swap2 ( int a, int b)\r\n{\r\n        int tmp;\r\n        tmp = a; a = b; b = tmp;\r\n }\r\nvoid swap3 (int*a, int*b)\r\n{\r\n        int tmp;\r\n        tmp = *a; *a = *b; *b = tmp;\r\n}\r\nint main ()\r\n{\r\n        int num1 = 5, num2 = 4, tmp;\r\n        if (num1 < num2) {swap1 (num1, num2);}\r\n        if (num1 < num2) {swap2 (num1 + 1, num2);}\r\n        if (num1 >= num2) {swap3 (&num1, &num2);}\r\n        printf (\"%d, %d\", num1, num2);\r\n}\r\n /* Add code here. Remove these lines if not writing code */\r\n</pre>', 1, 7, 26, 'Gate', 2008, 5, 0, 0),
(958, 'Consider the C program given below. What does it print?\r\n<pre>\r\n#include <stdio.h>\r\nint main ()\r\n{\r\n        int i, j;\r\n        int a [8] = {1, 2, 3, 4, 5, 6, 7, 8};\r\n        for(i = 0; i < 3; i++) {\r\n             a[i] = a[i] + 1;\r\n             i++;\r\n        }\r\n        i--;\r\n        for (j = 7; j > 4; j--) {\r\n              int i = j/2;\r\n              a[i] = a[i] - 1;\r\n        }\r\n        printf (\"%d, %d\", i, a[i]);\r\n}\r\n /* Add code here. Remove these lines if not writing code */\r\n</pre>', 1, 7, 26, 'Gate', 2008, 5, 0, 0),
(959, 'C program is given below:\r\n<pre>\r\n# include <stdio.h>\r\nint main ()\r\n{\r\n        int i, j;\r\n        char a [2] [3] = {{\'a\', \'b\', \'c\'}, {\'d\', \'e\', \'f\'}};\r\n        char b [3] [2];\r\n        char *p = *b;\r\n        for (i = 0; i < 2; i++) {\r\n              for (j = 0; j < 3; j++) {\r\n              *(p + 2*j + i) = a [i] [j];\r\n              }\r\n        }\r\n}\r\n /* Add code here. Remove these lines if not writing code */\r\n</pre>\r\nWhat should be the contents of the array b at the end of the program?\r\n', 1, 7, 26, 'Gate', 2008, 5, 0, 0),
(960, 'The goal of structured programming is to', 1, 7, 26, 'Gate', 2004, 5, 0, 0),
(961, '<img src=\"./image/question/961.jpg\"/>', 2, 7, 26, 'Gate', 2004, 5, 0, 0),
(962, '<img src=\"./image/question/962.jpg\"/>', 1, 7, 26, 'Gate', 2004, 5, 0, 0),
(963, '<img src=\"./image/question/963.jpg\"/>', 1, 7, 26, 'Gate', 2004, 5, 0, 0),
(964, '<img src=\"./image/question/964.jpg\"/>', 1, 7, 26, 'Gate', 2004, 5, 0, 0),
(965, 'Let x be an integer which can take a value of 0 or 1. The statement \r\n<pre>\r\nif(x = =0) \r\n   x = 1; \r\nelse \r\n   x = 0;\r\n</pre>\r\n is equivalent to which one of the following?', 1, 7, 26, 'Gate', 2004, 5, 0, 0),
(966, 'A program attempts to generate as many permutations as possible of the string, \'abcd\' by pushing the characters a, b, c, d in the same order onto a stack, but it may pop off the top character at any time. Which one of the following strings CANNOT be generated using this program?', 1, 7, 26, 'Gate', 2004, 5, 0, 0),
(967, 'Consider the following C program which is supposed to compute the transpose of a given 4 x 4 matrix M. Note that, there is an X in the program which indicates some missing statements. Choose the correct option to replace X in the program.\r\n<pre>\r\n#include<stdio.h>\r\n#define ROW 4\r\n#define COL 4\r\nint M[ROW][COL] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16};\r\nmain()\r\n{\r\n    int i, j, t;\r\n    for (i = 0; i < 4; ++i)\r\n    {\r\n        X\r\n    }\r\n    for (1 = 0; i < 4; ++i)\r\n        for (j = 0; j < 4; ++j)\r\n            printf (\"%d\", M[i][j]);\r\n}\r\n</pre>', 1, 7, 26, 'Gate', 2004, 5, 0, 0),
(968, 'What is the output of the following program?\r\n<pre>\r\n#include <stdio.h>\r\nint funcf (int x);\r\nint funcg (int y);\r\n\r\nmain()\r\n{\r\n    int x = 5, y = 10, count;\r\n    for (count = 1; count <= 2; ++count)\r\n    {\r\n        y += funcf(x) + funcg(x);\r\n        printf (\"%d \", y);\r\n    }\r\n}\r\n\r\nfuncf(int x)\r\n{\r\n    int y;\r\n    y = funcg(x);\r\n    return (y);\r\n}\r\n\r\nfuncg(int x)\r\n{\r\n    static int y = 10;\r\n    y += 1;\r\n    return (y+x);\r\n}\r\n</pre>', 1, 7, 26, 'Gate', 2004, 5, 0, 0),
(969, 'Choose the correct option to fill the ?1 and ?2 so that the program prints an input string in reverse order. Assume that the input string is terminated by a new line character.\r\n<pre>\r\n#include <stdio.h>\r\nvoid wrt_it (void);\r\nint main (void)\r\n{\r\n    printf(\"Enter Text\"); \r\n    printf (\"n\");\r\n    wrt_ it();\r\n    printf (\"n\");\r\n    return 0;\r\n}\r\nvoid wrt_it (void)\r\n{\r\n    int c;\r\n    if (?1)\r\n        wrt_it();\r\n    ?2\r\n}\r\n</pre>', 1, 7, 26, 'Gate', 2004, 5, 0, 0),
(970, 'Consider the following C program:\r\n<pre>\r\n#include <stdio.h>\r\ntypedef struct \r\n{\r\n    char *a;\r\n    char *b;\r\n} t;\r\nvoid f1(t s);\r\nvoid f2(t *p);\r\nmain()\r\n{\r\n    static t s = {\"A\", \"B\"};\r\n    printf (\"%s %sn\", s.a, s.b);\r\n    f1(s);\r\n    printf (\"%s %sn\", s.a, s.b);\r\n    f2(&s);\r\n}\r\nvoid f1(t s)\r\n{\r\n    s.a = \"U\";\r\n    s.b = \"V\";\r\n    printf (\"%s %sn\", s.a, s.b);\r\n    return;\r\n}\r\nvoid f2(t *p)\r\n{\r\n    p -> a  = \"V\";\r\n    p -> b = \"W\";\r\n    printf(\"%s %sn\", p -> a, p -> b);\r\n    return;\r\n}\r\n</pre>\r\nWhat is the output generated by the program ?', 1, 7, 26, 'Gate', 2004, 5, 0, 0),
(971, 'The following program fragment is written in a programming language that allows variables and does not allow nested declarations of functions.\r\n<pre>\r\nglobal int i = 100, j = 5;\r\nvoid P(x)\r\n{\r\n    int i = 10;\r\n    print(x + 10);\r\n    i = 200;\r\n    j = 20;\r\n    print(x);\r\n}\r\nmain()\r\n{\r\n    P(i + j);\r\n}\r\n</pre>\r\nIf the programming language uses static scoping and call by need parameter passing mechanism, the values printed by the above program are\r\n', 1, 7, 26, 'Gate', 2003, 5, 0, 0),
(972, 'In the following C program fragment, j, k n and TwoLog_n are interger variables, and A is an array of integers. The variable n is initialized to an integer ≥ 3, and TwoLog_n is initialized to the \r\n<pre>\r\nvalue of 2*⌈log2(n)⌉\r\nfor (k = 3; k < = n; k++)\r\n    A[k] = 0;\r\nfor (k = 2; k < = TwoLog_n; k++)\r\n    for (j = k + 1; j < = n; j++)\r\n        A[j] = A[j] || (j % k);\r\nfor (j = 3; j < = n; j++)\r\n    if (!A[j]) printf(\"%d\", j);\r\n</pre>\r\nThe set of numbers printed by this program fragment is\r\n', 1, 7, 26, 'Gate', 2003, 5, 0, 0),
(973, 'Consider the C program shown below.\r\n<pre>\r\n#include <stdio.h>\r\n#define print(x) printf(\"%d \", x)\r\nint x;\r\nvoid Q(int z)\r\n{\r\n    z += x;\r\n    print(z);\r\n}\r\nvoid P(int *y)\r\n{\r\n    int x = *y + 2;\r\n    Q(x);\r\n    *y = x - 1;\r\n    print(x);\r\n}\r\nmain(void)\r\n{\r\n    x = 5;\r\n    P(&x);\r\n    print(x);\r\n}\r\n</pre>\r\nThe output of this program is\r\n', 1, 7, 26, 'Gate', 2003, 5, 0, 0),
(974, 'In the C language', 1, 7, 26, 'Gate', 2002, 5, 0, 0),
(975, '<img src=\"./image/question/975.jpg\"/>', 1, 7, 26, 'Gate', 2000, 5, 0, 0),
(976, '<img src=\"./image/question/976.jpg\"/>', 1, 7, 26, 'Gate', 2000, 5, 0, 0),
(977, 'Aliasing in the context of programming languages refers to', 1, 7, 26, 'Gate', 2000, 5, 0, 0),
(978, '<img src=\"./image/question/978.jpg\"/>', 1, 7, 26, 'Gate', 2000, 5, 0, 0),
(979, '<img src=\"./image/question/979.jpg\"/>', 2, 7, 26, 'Gate', 2000, 5, 0, 0),
(980, '<img src=\"./image/question/980.jpg\"/>', 1, 7, 26, 'Gate', 1999, 5, 0, 0),
(981, '<img src=\"./image/question/981.jpg\"/>', 1, 7, 26, 'Gate', 2001, 5, 0, 0),
(982, 'In which of the following case(s) is it possible to obtain different results for call-by-reference and call-by-name parameter passing?', 3, 7, 26, 'Gate', 1989, 5, 0, 0),
(983, 'An unrestricted use of the \"go to\" statement is harmful because of which of the following reason (s):', 1, 7, 26, 'Gate', 1989, 5, 0, 0),
(984, 'Which one of the following statements is NOT correct about the B<sup> </sup> tree data structure used for creating an index of a relational database table?', 1, 12, 36, 'Gate', 2019, 5, 0, 0),
(985, 'Consider the following two statements about database transaction schedules:\r\n<pre>\r\nI. Strict two-phase locking protocol generates conflict serializable schedules that are also recoverable.\r\nII. Timestamp-ordering concurrency control protocol with Thomas Write Rule can generate view serializable schedules that are not conflict serializable.\r\n</pre>\r\nWhich of the above statements is/are TRUE?', 1, 12, 70, 'Gate', 2019, 5, 0, 0),
(986, 'Consider the following relations P(X,Y,Z), Q(X,Y,T) and R(Y,V).<br/>\r\n<img src=\"./image/question/986.jpg\"/><br/>\r\nHow many tuples will be returned by the following relational algebra query?\r\n<pre>\r\n          ∏<sub>x</sub>(σ<sub>(P.Y=R.Y ∧ R.V=V2)</sub>(P × R)) - ∏<sub>x</sub>(σ<sub>(Q.Y=R.Y ∧ Q.T>2)</sub>(Q × R))\r\n</pre>', 2, 12, 73, 'Gate', 2019, 5, 0, 0),
(987, 'A relational database contains two tables Student and Performance as shown below:<br/>\r\n<img src=\"./image/question/987.jpg\"/><br/>\r\nThe primary key of the Student table is Roll_no. For the Performance table, the columns Roll_no. and Subject_code together from the primary key. Consider the SQL query given below:\r\n<pre>\r\n       SELECT S.Student_name, sum (P.Marks)\r\n       FROM Student S, Performance P\r\n       WHERE P.Marks > 84\r\n       GROUP BY S.Student_name;\r\n</pre>\r\nThe number of rows returned by the above SQL query is _____.', 2, 12, 72, 'Gate', 2019, 5, 0, 0),
(988, 'Let the set of functional dependencies F = {QR → S, R → P, S → Q} hold on a relation schema X = (PQRS). X is not in BCNF. Suppose X is decomposed into two schemas Y and Z, where Y = (PR) and Z = (QRS).\r\nConsider the two statements given below.\r\n<pre>\r\n    I. Both Y and Z are in BCNF\r\n   II. Decomposition of X into Y and Z is dependency preserving and lossless\r\n</pre>\r\nWhich of the above statements is/are correct?  ', 1, 12, 73, 'Gate', 2019, 5, 0, 0),
(989, 'Consider a relational database containing the following schemas.<br/>\r\n<img src=\"./image/question/989.jpg\"/><br/>\r\nThe primary key of each table is indicated by underlying the constituent fields.\r\n<pre>\r\nSELECT s.sno, s.sname\r\nFROM Suppliers s, Catalogue c\r\nWHERE s.sno = c.sno AND\r\nCost > (SELECT AVG (cost)\r\nFROM Catalogue\r\nWHERE pno = ‘P4’\r\nGROUP BY pno);\r\n</pre>\r\nThe number of rows returned by the above SQL query is', 2, 12, 72, 'Gate', 2020, 5, 0, 0),
(990, 'Which one of the following is used to represent the supporting many-one relationships of a weak entity set in an entity-relationship diagram?', 1, 12, 61, 'Gate', 2020, 5, 0, 0),
(991, 'Consider a schedule of transactions T<sub>1</sub> and T<sub>2</sub>:<br/><img src=\"./image/question/991.jpg\"/><br/> Here, RX stands for “Read(X)” and WX stands for “Write(X)”. Which one of the following schedules is conflict equivalent to the above schedule? ', 1, 12, 70, 'Gate', 2020, 5, 0, 0),
(992, 'Consider a relational table R that is in 3NF, but not in BCNF. Which one of the following statements is TRUE? ', 1, 12, 74, 'Gate', 2020, 5, 0, 0),
(993, 'Consider a database implemented using B  tree for file indexing and installed on a disk drive with block size of 4 KB. The size of search key is 12 bytes and the size of tree/disk pointer is 8 bytes. Assume that the database has one million records. Also assume that no node of the B  tree and no records are present initially in main memory. Consider that each record fits into one disk block. The minimum number of disk accesses required to retrieve any record in the database is ______. ', 2, 12, 36, 'Gate', 2020, 5, 0, 0),
(994, 'In an Entity-Relationship (ER) model, suppose R is a many-to-one relationship from entity set E1 to entity set E2. Assume that E1 and E2 participate totally in R and that the cardinality of E1 is greater than the cardinality of E2.<br/>Which one of the following is true about R?', 1, 12, 61, 'Gate', 2018, 5, 0, 0),
(995, 'Consider the following two tables and four queries in SQL.\r\n     Book (<u>isbn</u>, bname), Stock (<u>isbn</u>, copies)\r\n<pre>\r\nQuery 1:    SELECT B.isbn, S.copies\r\n            FROM Book B INNER JOIN Stock S\r\n            ON B.isbn = S.isbn;\r\n\r\nQuery 2:    SELECT B.isbn, S.copies\r\n            FROM Book B LEFT OUTER JOIN Stock S\r\n            ON B.isbn = S.isbn;\r\n\r\nQuery 3:    SELECT B.isbn, S.copies\r\n            FROM Book B RIGHT OUTER JOIN Stock S\r\n            ON B.isbn = S.isbn;\r\n\r\nQuery 4:    SELECT B.isbn, S.copies\r\n            FROM Book B FULL OUTER JOIN Stock S\r\n            ON B.isbn = S.isbn;\r\n</pre>\r\nWhich one of the queries above is certain to have an output that is a superset of the outputs of the other three queries?', 1, 12, 72, 'Gate', 2018, 5, 0, 0),
(996, 'Consider the following four relational schemas. For each schema, all non-trivial functional dependencies are listed. The underlined attributes are the respective primary keys.\r\n<pre>\r\nSchema I: Registration(rollno, courses)\r\n          Field ‘courses’ is a set-valued attribute containing the set of \r\n          courses a student has registered for.\r\n          Non-trivial functional dependency\r\n          rollno → courses\r\n\r\nSchema II: Registration (rollno, coursid, email)\r\n          Non-trivial functional dependencies:\r\n          rollno, courseid → email\r\n          email → rollno\r\n 	\r\nSchema III: Registration (rollno, courseid, marks, grade)\r\n          Non-trivial functional dependencies:\r\n          rollno, courseid, → marks, grade\r\n          marks → grade\r\n 	\r\nSchema IV: Registration (rollno, courseid, credit)\r\n          Non-trivial functional dependencies:\r\n          rollno, courseid → credit\r\n          courseid → credit\r\n</pre>\r\nWhich one of the relational schemas above is in 3NF but not in BCNF?\r\n', 1, 12, 74, 'Gate', 2018, 5, 0, 0),
(997, 'Consider the relations r(A, B) and s(B, C), where s.B is a primary key and r.B is a foreign key referencing s.B. Consider the query\r\n<pre>\r\n    Q: r⋈(σ<sub>B<5</sub>(s)) \r\n</pre>\r\nLet LOJ denote the natural left outer-join operation. Assume that r and s contain no null values.\r\n<br/>\r\nWhich one of the following is NOT equivalent to Q?', 1, 12, 73, 'Gate', 2018, 5, 0, 0),
(998, 'The following functional dependencies hold true for the relational schema {V, W, X, Y, Z} :\r\n<pre>\r\n    V → W\r\n    VW → X\r\n    Y → VX\r\n    Y → Z\r\n</pre>\r\nWhich of the following is irreducible equivalent for this set of functional dependencies?', 1, 12, 74, 'Gate', 2018, 5, 0, 0),
(999, 'Consider a database that has the relation schema EMP (EmpId, EmpName, and DeptName). An instance of the schema EMP and a SQL query on it are given below.<br/><img src=\"./image/question/999.jpg\"/><br/>The output of executing the SQL query is ___________.', 2, 12, 72, 'Gate', 2017, 5, 0, 0),
(1000, 'Consider a database that has the relation schemas EMP(EmpId, EmpName, DeptId), and DEPT(DeptName, DeptId). Note that the DeptId can be permitted to a NULL in the relation EMP. Consider the following queries on the database expressed in tuple relational calculus.<br/>Which of the following queries are safe?', 3, 12, 73, 'Gate', 2017, 5, 0, 0),
(1001, 'In a database system, unique timestamps are assigned to each transaction using Lamport’s logical clock. Let TS(T<sub>1</sub>) and TS(T<sub>2</sub>) be the timestamps of transactions T<sub>1</sub> and T<sub>2</sub> respectively. Besides, T<sub>1</sub> holds a lock on the resource R and T<sub>2</sub> has requested a conflicting lock on the same resource R. The following algorithm is used to prevent deadlocks in the database system assuming that a killed transaction is restarted with the same timestamp.\r\n<pre>\r\n           if TS(T<sub>2</sub>)<TS(T<sub>1</sub>) then\r\n                T<sub>1</sub> is killed\r\n           else T<sub>2</sub> waits.\r\n</pre>\r\nAssume any transaction that is not killed terminates eventually. Which of the following is TRUE about the database system that uses the above algorithm to prevent deadlocks?', 1, 12, 70, 'Gate', 2017, 5, 0, 0),
(1002, 'Consider a database that has the relation schema CR(StudentName, CourseName). An instance of the schema CR is as given below.<br/>\r\n<img src=\"./image/question/1002.jpg\"/><br/>\r\nThe following query is made on the database.\r\n<pre>\r\n         T<sup>1</sub> ← π<sub>CourseName</sub>(σ<sub>StudentName=\'SA\'</sub>(CR))\r\n         T<sub>2</sub> ← CR ÷ T<sub>1</sub>\r\n</pre>\r\nThe number of rows in T<sub>2</sub> is ____________.', 2, 12, 73, 'Gate', 2017, 5, 0, 0),
(1003, 'An ER model of a database consists of entity types A and B. These are connected by a relationship R which does not have its own attribute. Under which one of the following conditions, can the relational table for R be merged with that of A?', 1, 12, 61, 'Gate', 2017, 5, 0, 0),
(1004, 'Consider the following tables T1 and T2. <br/><center><img src=\"./image/question/1004.jpg\"/></center><br/>In table T1, P is the primary key and Q is the foreign key referencing R in table T2 with on-delete cascade and on-update cascade. In table T2, R is the primary key and S is the foreign key referencing P in table T1 with on-delete set NULL and on-update cascade. In order to delete record 〈3,8〉 from table T1, the number of additional records that need to be deleted from table T1 is _________.', 2, 12, 73, 'Gate', 2017, 5, 0, 0),
(1005, 'Two transactions T<sub>1</sub> and T<sub>2</sub> are given as</p><ul>T<sub>1</sub>: r<sub>1</sub>(X)w<sub>1</sub>(X)r<sub>1</sub>(Y)w<sub>1</sub>(Y)<br>T<sub>2</sub>: r<sub>2</sub>(Y)w<sub>2</sub>(Y)r<sub>2</sub>(Z)w<sub>2</sub>(Z)</ul><p align=\"Justify\">where r<sub>i</sub>(V) denotes a read operation by transaction T<sub>i</sub> on a variable V and w<sub>i</sub>(V) denotes a write operation by transaction T<sub>i</sub> on a variable V. The total number of conflict serializable schedules that can be formed by T<sub>1</sub>', 2, 12, 70, 'Gate', 2017, 5, 0, 0),
(1006, 'Consider the following database table named top_scorer.<br/>\r\n<center><img src=\"./image/question/1006.jpg\"/></center><br/>\r\n<pre>\r\nSELECT ta.player FROM top_scorer AS ta\r\nWHERE ta.goals > ALL (SELECT tb.goals\r\n                  FROM top_scorer AS tb\r\n                  WHERE tb.country = \'Spain\')\r\nAND ta.goals > ANY (SELECT tc.goals\r\n                  FROM top_scorer AS tc\r\n                  WHERE tc.country = \'Germany\')\r\n</pre>\r\nThe number of tuples returned by the above SQL query is _____.', 2, 12, 72, 'Gate', 2017, 5, 0, 0),
(1007, 'In a B  tree, if the search-key value is 8 bytes long, the block size is 512 bytes and the block pointer size is 2 bytes, then the maximum order of the B  tree is _________.', 2, 12, 36, 'Gate', 2017, 5, 0, 0),
(1008, 'Which of the following is NOT a superkey in a relational schema with attributes V, W, X, Y, Z and primary key VY?', 1, 12, 74, 'Gate', 2016, 5, 0, 0),
(1009, 'NOT a part of the ACID properties of database transactions?', 1, 12, 70, 'Gate', 2016, 5, 0, 0),
(1010, 'A database of research articles in a journal uses the following schema.\r\n<pre>\r\n    (VOLUME, NUMBER, STARTPAGE, ENDPAGE, TITLE, YEAR, PRICE) \r\n</pre>\r\nThe primary key is (VOLUME, NUMBER, STARTPAGE, ENDPAGE) and the following functional dependencies exist in the schema.\r\n<pre>\r\n    (VOLUME, NUMBER, STARTPAGE, ENDPAGE) → TITLE\r\n    (VOLUME, NUMBER) → YEAR\r\n    (VOLUME, NUMBER, STARTPAGE, ENDPAGE) → PRICE \r\n</pre>\r\nThe database is redesigned to use the following schemas.\r\n<pre>\r\n    (VOLUME, NUMBER, STARTPAGE, ENDPAGE, TITLE, PRICE)\r\n    (VOLUME, NUMBER, YEAR) \r\n</pre>\r\nWhich is the weakest normal form that the new database satisﬁes, but the old one does not?', 1, 12, 74, 'Gate', 2016, 5, 0, 0),
(1011, 'Consider the following two phase locking protocol. Suppose a transaction T accesses (for read or write operations), a certain set of objects{O<sub>1</sub>,...,O<sub>k</sub>}. This is done in the following manner:\r\n<pre>\r\n    Step1. T acquires exclusive locks to O<sub>1</sub>,...,O<sub>k</sub> in increasing order of their addresses.\r\n    Step2. The required operations are performed.\r\n    Step3. All locks are released. \r\n</pre>\r\nThis protocol will', 1, 12, 70, 'Gate', 2016, 5, 0, 0),
(1012, 'B  Trees are considered BALANCED because', 1, 12, 36, 'Gate', 2016, 5, 0, 0),
(1013, 'Suppose a database schedule S involves transactions T<sub>1</sub>, ..., T<sub>n</sub>. Construct the precedence graph of S with vertices representing the transactions and edges representing the conﬂicts. If S is serializable, which one of the following orderings of the vertices of the precedence graph is guaranteed to yield a serial schedule?', 1, 12, 70, 'Gate', 2016, 5, 0, 0),
(1014, 'Consider the following database schedule with two transactions, T<sub>1</sub> and T<sub>2</sub>.\r\n<pre>\r\n    S = r<sub>2</sub>(X); r<sub>1</sub>(X); r<sub>2</sub>(Y); w<sub>1</sub>(X); r<sub>1</sub>(Y); w<sub>2</sub>(X); a<sub>1</sub>; a<sub>2</sub> \r\n</pre>\r\nwhere r<sub>i</sub>(Z) denotes a read operation by transaction T<sub>i</sub> on a variable Z, w<sub>i</sub>(Z) denotes a write operation by Ti on a variable Z and a<sub>i</sub> denotes an abort by transaction T<sub>i</sub>.\r\n<br/>\r\nWhich one of the following statements about the above schedule is TRUE?', 1, 12, 70, 'Gate', 2016, 5, 0, 0),
(1015, 'Consider the following database table named water_schemes :<br/>\r\n<center><img src=\"./image/question/1015.jpg\"/></center><br/>\r\nThe number of tuples returned by the following SQL query is _________.\r\n<pre>\r\nwith total(name, capacity) as\r\n   select district_name, sum(capacity)\r\n   from water_schemes\r\n   group by district_name\r\nwith total_avg(capacity) as\r\n   select avg(capacity)\r\n   from total\r\nselect name\r\n   from total, total_avg\r\n   where total.capacity ≥ total_avg.capacity\r\n</pre>', 2, 12, 72, 'Gate', 2016, 5, 0, 0),
(1016, 'SELECT operation in SQL is equivalent to ', 1, 12, 72, 'Gate', 2015, 5, 0, 0),
(1017, 'Consider an Entity-Relationship (ER) model in which entity sets E1 and E2 are connected by an m : n relationship R<sub>12</sub>, E1 and E3 are connected by a 1 : n (1 on the side of E1 and n on the side of E3) relationship R<sub>13</sub>. E1 has two single-valued attributes a<sub>11</sub> and a<sub>12</sub> of which a<sub>11</sub> is the key attribute. E2 has two single-valued attributes a<sub>21</sub> and a<sub>22</sub> is the key attribute. E3 has two single-valued attributes a<sub>31</sub> and a<sub>32</sub> of which a<sub>31</sub> is the key attribute. The relationships do not have any attributes. If a relational model is derived from the above ER model, then the minimum number of relations that would be generated if all the relations are in 3NF is ___________.  ', 2, 12, 61, 'Gate', 2015, 5, 0, 0),
(1018, 'Consider the following relations: <br/>\r\n<img src=\"./image/question/1018.jpg\"/><br/>\r\n<pre>\r\n     SELECT S. Student_Name, sum(P.Marks)\r\n     FROM Student S, Performance P\r\n     WHERE S.Roll_No = P.Roll_No\r\n     GROUP BY S.Student_Name\r\n</pre>\r\nThe number of rows that will be returned by the SQL query is _________  ', 2, 12, 72, 'Gate', 2015, 5, 0, 0),
(1019, 'Consider the following transaction involving two bank account x and y.<br/><img src=\"./image/question/1019.jpg\"/><br/>', 1, 12, 70, 'Gate', 2015, 5, 0, 0),
(1020, 'With reference to the B  tree index of order 1 shown below, the minimum number of nodes (including the Root node) that must be fetched in order to satisfy the following query:\"Get all records with a searcj key grater than or equal to 7 and less than 15\" is ___________ <br/><center><img src=\"./image/question/1020.jpg\"/></center><br/>', 2, 12, 36, 'Gate', 2015, 5, 0, 0),
(1021, 'Consider two relations R<sub>1</sub>(A,B) with the tuples (1,5), (3,7) and R<sub>2</sub>(A,C) = (1,7), (4,9). Assume that R(A,B,C) is the full natural outer join of R<sub>1</sub> and R<sub>2</sub>. Consider the following tuples of the form (A,B,C): a = (1.5,null) , b = (1,null,7), c = (3,null,9), d = (4,7,null), e = (1,5,7), f = (3,7,null) , g = (4,null,9). Which one of the following statements is correct?  ', 1, 12, 73, 'Gate', 2015, 5, 0, 0),
(1022, 'Consider a simple checkpointing protocol and the following set of operations in the log. <br/><img src=\"./image/question/1022.jpg\"/><br/>', 1, 12, 70, 'Gate', 2015, 5, 0, 0),
(1023, 'Consider the relation X(P, Q, R, S, T, U) with the following set of functional dependencies\r\n<pre>\r\nF = {\r\n       {P, R} → {S,T},  \r\n       {P, S, U} → {Q, R}\r\n    }\r\n</pre>\r\nWhich of the following is the trivial functional dependency in F+ is closure of F?', 1, 12, 74, 'Gate', 2015, 5, 0, 0),
(1024, 'Consider the following relation\r\n<pre>\r\n  Cinema (theater, address, capacity)\r\n</pre>\r\nWhich of the following options will be needed at the end of the SQL query\r\n<pre>\r\nSELECT P1. address\r\nFROM Cinema P1\r\n</pre>\r\nSuch that it always finds the addresses of theaters with maximum capacity?', 1, 12, 72, 'Gate', 2015, 5, 0, 0),
(1025, 'Consider the relation scheme R = (E, F, G, H, I, J, K, L, M, N) and the set of functional dependencies  {{E,F} → {G}, {F} → {I,J}, {E,H} → {K,L}, {K} → {M}, {L} → {N}} on R. What is the key for R?', 1, 12, 74, 'Gate', 2015, 5, 0, 0),
(1026, 'Given the following statements:\r\n<pre>\r\n    S1: A foreign key declaration can always \r\n        be replaced by an equivalent check\r\n        assertion in SQL.\r\n    S2: Given the table R(a,b,c) where a and\r\n        b together form the primary key, the \r\n        following is a valid table definition.\r\n        CREATE TABLE S (\r\n            a INTEGER,\r\n            d INTEGER,\r\n            e INTEGER,\r\n            PRIMARY KEY (d),\r\n            FOREIGN KEY (a) references R)\r\n</pre>\r\nWhich one of the following statements is CORRECT?', 1, 12, 72, 'Gate', 2014, 5, 0, 0),
(1027, 'Consider the following four schedules due to three transactions (indicated by the subscript) using read and write on a data item x, denoted by r(x) and w(x) respectively. Which one of them is conflict serializable?', 1, 12, 70, 'Gate', 2014, 5, 0, 0),
(1028, 'Given the following two statements:\r\n<pre>\r\n  S1: Every table with two single-valued \r\n      attributes is in 1NF, 2NF, 3NF and BCNF.\r\n\r\n  S2: AB->C, D->E, E->C is a minimal cover for \r\n      the set of functional dependencies \r\n      AB->C, D->E, AB->E, E->C.\r\n</pre>\r\nWhich one of the following is CORRECT?', 1, 12, 74, 'Gate', 2014, 5, 0, 0),
(1029, 'Given the following schema:\r\n<pre>\r\n     employees(emp-id, first-name, last-name, hire-date, dept-id, salary)\r\n     departments(dept-id, dept-name, manager-id, location-id)\r\n</pre>\r\nYou want to display the last names and hire dates of all latest hires in their respective departments in the location ID 1700. You issue the following query:\r\n<pre>\r\nSQL> SELECT last-name, hire-date\r\n     FROM employees\r\n     WHERE (dept-id, hire-date) IN ( SELECT dept-id, MAX(hire-date)\r\n                                     FROM employees JOIN departments USING(dept-id)\r\n                                     WHERE location-id = 1700\r\n                                     GROUP BY dept-id); \r\n</pre>\r\nWhat is the outcome?', 1, 12, 72, 'Gate', 2014, 5, 0, 0),
(1030, 'The maximum number of superkeys for the relation schema R(E, F, G, H) with E as the key is _____.', 2, 12, 74, 'Gate', 2014, 5, 0, 0),
(1031, 'Given the STUDENTS relation as shown below.<br/><img src=\"./image/question/1031.jpg\"/><br/>For (StudentName, StudentAge) to be the key for this instance, the value X should not be equal to', 2, 12, 74, 'Gate', 2014, 5, 0, 0),
(1032, 'Consider the following schedule S of transactions T1, T2, T3, T4:<br/><img src=\"./image/question/1032.jpg\"/><br/>Which one of the following statements is CORRECT?', 1, 12, 70, 'Gate', 2014, 5, 0, 0),
(1033, 'Consider a join (relation algebra) between relations r(R) and s(S) using the nested loop method. There are 3 buffers each of size equal to disk block size, out of which one buffer is reserved for intermediate results. Assuming size(r(R)) < size(s(S)), the join will have fewer number of disk block accesses if', 1, 12, 73, 'Gate', 2014, 5, 0, 0),
(1034, 'SQL allows tuples in relations, and correspondingly defines the multiplicity of tuples in the result of joins. Which one of the following queries always gives the same answer as the nested query shown below:\r\n<pre>\r\n    select * from R where a in (select S.a from S)\r\n</pre>', 1, 12, 72, 'Gate', 2014, 5, 0, 0),
(1035, 'What is the optimized version of the relation algebra expression π<sub>A1</sub>(π<sub>A2</sub>(σ<sub>F1</sub>(σ<sub>F2</sub>(r)))), where A1, A2 are sets of attributes in  with A1 ⊂ A2 and F1, F2 are Boolean expressions based on the attributes in r?  ', 1, 12, 73, 'Gate', 2014, 5, 0, 0),
(1036, 'A prime attribute of a relation scheme  is an attribute that appears', 1, 12, 61, 'Gate', 2014, 5, 0, 0),
(1037, 'Consider the relational schema given below, where eId of the relation dependent is a foreign key referring to empId of the relation employee. Assume that every employee has at least one associated dependent in the dependent relation.\r\n<pre> \r\nemployee (empId, empName, empAge) dependent(depId, eId, depName, depAge)\r\n</pre> \r\nConsider the following relational algebra query: \r\n<pre>\r\n∏<sub>empId</sub>(employee)-∏<sub>empId</sub>(employee⋈<sub>(empId = eID)∧(empAge ≤ depAge)</sub>dependent)\r\n</pre>\r\nThe above query evaluates to the set of empIds of employees whose age is greater than that of  ', 1, 12, 73, 'Gate', 2014, 5, 0, 0),
(1038, 'Consider the following relational schema: employee(empId,empName,empDept) customer(custId,custName,salesRepId,rating) salesRepId is a foreign key referring to empId of the employee relation. Assume that each employee makes a sale to at least one customer. What does the following query return? \r\n<pre>\r\nSELECT empName FROM employee E WHERE NOT EXISTS (SELECT custId FROM customer C WHERE C.salesRepId = E.empId AND(GATEC.rating<>’GOOD’);\r\n</pre>', 1, 12, 72, 'Gate', 2014, 5, 0, 0),
(1039, 'An index is clustered, if', 1, 12, 36, 'Gate', 2013, 5, 0, 0),
(1040, 'Consider the following releation schema <br/><img src=\"./image/question/1040.jpg\"/>', 3, 12, 73, 'Gate', 2013, 5, 0, 0),
(1041, '<img src=\"./image/question/1041.jpg\"/>', 2, 12, 74, 'Gate', 2013, 5, 0, 0),
(1042, 'Relation R has eight attributes ABCDEFGH. Fields of R contain only atomic values. <br/><img src=\"./image/question/1042.jpg\"/>', 1, 12, 74, 'Gate', 2013, 5, 0, 0),
(1043, 'Which of the following is TRUE?  ', 1, 12, 74, 'Gate', 2012, 5, 0, 0),
(1044, 'Given the basic ER and relational models, which of the following is INCORRECT?', 1, 12, 61, 'Gate', 2012, 5, 0, 0),
(1045, 'which of the  following statements are TRUE about an SQL query? ', 3, 12, 72, 'Gate', 2012, 5, 0, 0),
(1046, 'Consider the following transactions with data items P and Q initialized to zero:\r\n<pre>\r\nT1: read (P) ;\r\n    read (Q) ;\r\n    if P = 0 then Q : = Q + 1 ;\r\n    write (Q) ;\r\nT2: read (Q) ;\r\n    read (P) ;\r\n    if Q = 0 then P : = P + 1 ;\r\n    write (P) ;\r\n</pre>\r\nAny non-serial interleaving of T1 and T2 for concurrent execution leads to', 1, 12, 70, 'Gate', 2012, 5, 0, 0),
(1047, 'Suppose R<sub>1</sub>(<u>A</u>, B) and R<sub>2</sub>(<u>C</u>, D) are two relation schemas. Let r<sub>1</sub> and r<sub>2</sub> be the corresponding relation instances. B is a foreign key that refers to C in R<sub>2</sub>. If data in r<sub>1</sub> and r<sub>2</sub> satisfy referential integrity constraints, which of the following is ALWAYS TRUE?', 1, 12, 73, 'Gate', 2012, 5, 0, 0),
(1048, '<img src=\"./image/question/1048.jpg\"/>', 2, 12, 73, 'Gate', 2012, 5, 0, 0),
(1049, 'Consider the above tables A, B and C. How many tuples does the result of the following SQL query contains? <br/>\r\n<img src=\"./image/question/1049.jpg\"/><br/>\r\n<pre>\r\nSELECT A.id \r\nFROM   A \r\nWHERE  A.age > ALL (SELECT B.age \r\n                    FROM   B \r\n                    WHERE  B. name = \"arun\")\r\n</pre>', 2, 12, 72, 'Gate', 2012, 5, 0, 0),
(1050, 'Consider a relational table with a single record for each registered student with the following attributes.\r\n<pre>\r\n1. Registration_Num: Unique registration number\r\n   of each registered student\r\n2. UID: Unique identity number, unique at the \r\n   national level for each citizen\r\n3. BankAccount_Num: Unique account number at\r\n   the bank. A student can have multiple accounts\r\n   or join accounts. This attribute stores the \r\n   primary account number.\r\n4. Name: Name of the student\r\n5. Hostel_Room: Room number of the hostel \r\n</pre>\r\nWhich one of the following option is INCORRECT?', 1, 12, 72, 'Gate', 2011, 5, 0, 0),
(1051, 'Consider a relational table r with sufficient number of records, having attributes A1, A2,…, An and let 1 <= p <= n. Two queries Q1 and Q2 are given below. <br/><img src=\"./image/question/1051.jpg\"/><br/>The database can be configured to do ordered indexing on Ap or hashing on Ap. Which of the following statements is TRUE?    ', 1, 12, 72, 'Gate', 2011, 5, 0, 0),
(1052, 'Database table by name Loan_Records is given below.\r\n<pre>\r\nBorrower    Bank_Manager   Loan_Amount\r\n Ramesh      Sunderajan     10000.00\r\n Suresh      Ramgopal       5000.00\r\n Mahesh      Sunderajan     7000.00\r\n</pre>\r\nWhat is the output of the following SQL query?\r\n<pre>\r\nSELECT Count(*) \r\nFROM  ( ( SELECT Borrower, Bank_Manager \r\n          FROM Loan_Records) AS S \r\n          NATURAL JOIN ( SELECT Bank_Manager, Loan_Amount \r\n                         FROM Loan_Records) AS T );\r\n</pre>', 2, 12, 72, 'Gate', 2011, 5, 0, 0),
(1053, 'Consider a database table T containing two columns X and Y each of type integer. After the creation of the table, one record (X=1, Y=1) is inserted in the table. Let MX and My denote the respective maximum values of X and Y among all records in the table at any point in time. Using MX and MY, new records are inserted in the table 128 times with X and Y values being MX+1, 2*MY+1 respectively. It may be noted that each time after the insertion, values of MX and MY change. What will be the output of the following SQL query after the steps mentioned above are carried out?\r\n<pre>\r\nSELECT Y FROM T WHERE X=7;\r\n</pre>', 2, 12, 72, 'Gate', 2011, 5, 0, 0),
(1054, 'Consider a B<sup> </sup>-tree in which the maximum number of keys in a node is 5. What is the minimum number of keys in any non-root node?', 2, 12, 36, 'Gate', 2010, 5, 0, 0),
(1055, 'A relational schema for a train reservation database is given below. Passenger (pid, pname, age) Reservation (pid, class, tid)\r\n<pre>\r\nTable: Passenger\r\npid   pname   age\r\n-----------------\r\n 0    Sachin   65\r\n 1    Rahul    66\r\n 2    Sourav   67\r\n 3    Anil     69\r\n\r\nTable : Reservation\r\npid  class  tid\r\n---------------\r\n 0    AC   8200\r\n 1    AC   8201\r\n 2    SC   8201\r\n 5    AC   8203\r\n 1    SC   8204\r\n 3    AC   8202\r\n</pre>\r\nWhat pids are returned by the following SQL query for the above instance of the tables?\r\n<pre>\r\nSLECT pid\r\nFROM Reservation ,\r\nWHERE class ‘AC’ AND\r\n    EXISTS (SELECT *\r\n       FROM Passenger\r\n       WHERE age > 65 AND\r\n       Passenger. pid = Reservation.pid)\r\n</pre>', 1, 12, 72, 'Gate', 2010, 5, 0, 0),
(1056, 'Which of the following concurrency control protocols ensure both conflict serializability and freedom from deadlock? \r\n<pre>\r\nI. 2-phase locking \r\nII. TIme-stamp ordering\r\n</pre>', 1, 12, 70, 'Gate', 2010, 5, 0, 0),
(1057, 'Consider the following schedule for transactions T1, T2 and T3: <br/><center><img src=\"./image/question/1057.jpg\"/></center><br/>Which one of the schedules below is the correct serialization of the above?    ', 1, 12, 70, 'Gate', 2010, 5, 0, 0),
(1058, 'Which of the following functional dependencies hold for relations R(A, B, C) and S(B, D, E):\r\n<pre>\r\nB -> A\r\nA -> C\r\n</pre>\r\nThe relation R contains 200 tuples and the rel ation S contains 100 tuples. What is the maximum number of tuples possible in the natural join of R and S (R natural join S)  ', 2, 12, 73, 'Gate', 2010, 5, 0, 0),
(1059, 'Consider two transactions T1 and T2, and four schedules S1, S2, S3, S4 of T1 and T2 as given below: <br/><img src=\"./image/question/1059.jpg\"/><br/>Which of the above schedules are conflict-serializable?  ', 3, 12, 70, 'Gate', 2009, 5, 0, 0),
(1060, 'The following key values are inserted into a B  - tree in which order of the internal nodes is 3, and that of the leaf nodes is 2, in the sequence given below. The order of internal nodes is the maximum number of tree pointers in each node, and the order of leaf nodes is the maximum number of data items that can be stored in it. The B  - tree is initially 10, 3, 6, 8, 4, 2, 1 The maximum number of times leaf nodes would get split up as a result of these insertions is  ', 2, 12, 36, 'Gate', 2009, 5, 0, 0),
(1061, 'Let R and S be relational schemes such that R={a,b,c} and S={c}. Now consider the following queries on the database:<br/><img src=\"./image/question/1061.jpg\"/><br/>Which of the above queries are equivalent?', 3, 12, 73, 'Gate', 2009, 5, 0, 0),
(1062, 'Consider the following relational schema:\r\n<pre>\r\n Suppliers(sid:integer, sname:string, city:string, street:string)\r\n Parts(pid:integer, pname:string, color:string)\r\n Catalog(sid:integer, pid:integer, cost:real)\r\n</pre>\r\n Consider the following relational query on the above database \r\n<pre>\r\nSELECT S.sname FROM Suppliers S WHERE S.sid NOT IN \r\n    (SELECT C.sid FROM Catalog C WHERE C.pid NOT \r\n       (SELECT P.pid FROM    Parts P WHERE P.color<> \'blue\'))\r\n</pre>\r\n Assume that relations corresponding to the above schema are not empty. Which one of the following is the correct interpretation of the above query?', 1, 12, 72, 'Gate', 2009, 5, 0, 0),
(1063, 'Consider the following relational schema:\r\n<pre>\r\n Suppliers(sid:integer, sname:string, city:string, street:string)\r\n Parts(pid:integer, pname:string, color:string)\r\n Catalog(sid:integer, pid:integer, cost:real)\r\n</pre> \r\nAssume that, in the suppliers relation above, each supplier and each street within a city has a unique name, and (sname, city) forms a candidate key. No other functional dependencies are implied other than those implied by primary and candidate keys. Which one of the following is TRUE about the above schema?  ', 1, 12, 74, 'Gate', 2009, 5, 0, 0),
(1064, 'Which of the following tuple relational calculus expression(s) is/are equivalent to<img src=\"./image/question/1064.jpg\"/><br/>', 3, 12, 73, 'Gate', 2008, 5, 0, 0),
(1065, 'A clustering index is defined on the fields which are of type', 1, 12, 36, 'Gate', 2008, 5, 0, 0),
(1066, 'A B-tree of order 4 is built from scratch by 10 successive insertions. What is the maximum number of node splitting operations that may take place?', 2, 12, 36, 'Gate', 2008, 5, 0, 0),
(1067, 'Let R and S be two relations with the following schema<br/><img src=\"./image/question/1067.jpg\"/><br/>', 3, 12, 73, 'Gate', 2008, 5, 0, 0),
(1068, 'Consider the following relational schemes for a library database: \r\n<pre>\r\nBook(Title, Author, Catalog_ no, Publisher, Year, Price) \r\nCollection (Title, Author, Catalog_ no) \r\n</pre>\r\nwith in the following functional dependencies: \r\n<pre>\r\nI.Title Author ® Catalog_no \r\nII.Catalog_no ® Title Author Publisher Year \r\nIII.Publisher Title Year ® Price \r\n</pre>\r\nAssume {Author, Title} is the key for both schemes. Which of the following statements is true?  ', 1, 12, 74, 'Gate', 2008, 5, 0, 0),
(1069, 'Consider a file of 16384 records. Each record is 32 bytes long and its key field is of size 6 bytes. The file is ordered on a non-key field, and the file organization is unspanned. The file is stored in a file system with block size 1024 bytes, and the size of a block pointer is 10 bytes. If the secondary index is built on the key field of the file, and a multi-level index scheme is used to store the secondary index, the number of first-level and second-level blocks in the multi-level index are respectively', 1, 12, 36, 'Gate', 2008, 5, 0, 0),
(1070, 'Consider the following ER diagram <br/><img src=\"./image/question/1070.jpg\"/><br/>The minimum number of tables needed to represent M, N, P, R1, R2 is', 2, 12, 61, 'Gate', 2008, 5, 0, 0),
(1071, 'Consider the following ER diagram <br/><img src=\"./image/question/1070.jpg\"/><br/>Which of the following is a correct attribute set for one of the tables for the correct answer to the above question?  ', 1, 12, 61, 'Gate', 2008, 5, 0, 0),
(1072, 'Let R (A, B, C, D) be a relational schema with the following functional dependencies:\r\n<pre>\r\nA → B, B → C,\r\nC → D and D → B. \r\n</pre>\r\nThe decomposition of R into \r\n(A, B), (B, C), (B, D)', 1, 12, 74, 'Gate', 2008, 5, 0, 0),
(1073, 'Let R (A, B, C, D, E, P, G) be a relational schema in which the following functional depen­dencies are known to hold:\r\n<pre>\r\n AB → CD,\r\n DE → P,\r\n C → E,\r\n P → C\r\n B → G.\r\n</pre>\r\n The relational schema R is', 1, 12, 74, 'Gate', 2008, 5, 0, 0);
INSERT INTO `question` (`q_id`, `question`, `type`, `sub_id`, `topic_id`, `source`, `year`, `life`, `attampt`, `correct`) VALUES
(1074, 'Consider the following three schedules of transactions T1, T2 and T3. [Notation: In the following NYO represents the action Y (R for read, W for write) performed by transac­tion N on object O.]\r\n<pre>\r\n(S1)	2RA	2WA	3RC	2WB	3WA	3WC	1RA	1RB	1WA	1WB\r\n(S2)	3RC	2RA	2WA	2WB	3WA	1RA	1RB	1WA	1WB	3WC\r\n(S3)	2RA	3RC	3WA	2WA	2WB	3WC	1RA	1RB	1WA	1WB\r\n</pre>\r\nWhich of the following statements is TRUE?  ', 1, 12, 70, 'Gate', 2008, 5, 0, 0),
(1075, '<pre>\r\nStudent (school-id, sch-roll-no, sname, saddress) \r\nSchool (school-id, sch-name, sch-address, sch-phone) \r\nEnrolment(school-id sch-roll-no, erollno, examname) \r\nExamResult(erollno, examname, marks) \r\n</pre>\r\nWhat does the following SQL query output?\r\n<pre>\r\nSELECT  sch-name, COUNT (*)\r\nFROM    School C, Enrolment E, ExamResult R\r\nWHERE   E.school-id = C.school-id\r\nAND\r\nE.examname = R.examname AND E.erollno = R.erollno\r\nAND\r\nR.marks = 100 AND S.school-id IN (SELECT school-id\r\n                                FROM student\r\n                                GROUP BY school-id\r\n                                 HAVING COUNT (*) > 200)\r\nGROUP By school-id\r\n /* Add code here. Remove these lines if not writing code */\r\n</pre>', 1, 12, 72, 'Gate', 2008, 5, 0, 0),
(1076, '<pre>\r\nStudent (school-id, sch-roll-no, sname, saddress) \r\nSchool (school-id, sch-name, sch-address, sch-phone) \r\nEnrolment(school-id sch-roll-no, erollno, examname) \r\nExamResult(erollno, examname, marks) \r\n</pre>\r\nWhat does the following SQL query output?\r\n</pre>\r\nSELECT  sch-name, COUNT (*)\r\nFROM    School C, Enrolment E, ExamResult R\r\nWHERE   E.school-id = C.school-id\r\nAND\r\nE.examname = R.examname AND E.erollno = R.erollno\r\nAND\r\nR.marks = 100 AND S.school-id IN (SELECT school-id\r\n                                FROM student\r\n                                GROUP BY school-id\r\n                                 HAVING COUNT (*) > 200)\r\nGROUP By school-id\r\n /* Add code here. Remove these lines if not writing code */\r\n</pre>', 1, 12, 72, 'Gate', 2008, 5, 0, 0),
(1077, 'Information about a collection of students is given by the relation studinfo(studId, name, sex). The relation enroll(studId, courseId) gives which student has enrolled for (or taken) that course(s). Assume that every course is taken by at least one male and at least one female student. What does the following relational algebra expression represent? <br/><img src=\"./image/question/1077.jpg\"/>', 1, 12, 73, 'Gate', 2007, 5, 0, 0),
(1078, 'Consider the relation employee(name, sex, supervisorName) with name as the key. supervisorName gives the name of the supervisor of the employee under consideration. What does the following Tuple Relational Calculus query produce? <br/><img src=\"./image/question/1078.jpg\"/>', 1, 12, 73, 'Gate', 2007, 5, 0, 0),
(1079, 'Which one of the following statements if FALSE?', 1, 12, 74, 'Gate', 2007, 5, 0, 0),
(1080, 'The order of a leaf node in a B - tree is the maximum number of (value, data record pointer) pairs it can hold. Given that the block size is 1K bytes, data record pointer is 7 bytes long, the value field is 9 bytes long and a block pointer is 6 bytes long, what is the order of the leaf node?', 2, 12, 36, 'Gate', 2007, 5, 0, 0),
(1081, 'Consider the following schedules involving two transactions. Which one of the following statements is TRUE?  <br/><img src=\"./image/question/1081.jpg\"/>', 1, 12, 70, 'Gate', 2007, 5, 0, 0),
(1082, 'Consider a selection of the form σ<sub>A≤100</sub>(r), where r is a relation with 1000 tuples. Assume that the attribute values for A among the tuples are uniformly distributed in the interval [0, 500]. Which one of the following options is the best estimate of the number of tuples returned by the given selection query ?', 1, 12, 73, 'Gate', 2007, 5, 0, 0),
(1083, '<img src=\"./image/question/1083.jpg\"/>', 1, 12, 70, 'Gate', 2007, 5, 0, 0),
(1084, 'Consider the following implications relating to functional and multivalued dependencies given below, which may or may not be correct. <br/>which of the following implications are valid?', 3, 12, 74, 'Gate', 2007, 5, 0, 0),
(1085, 'Consider the following relation schemas :\r\n<pre>\r\n        b-Schema = (b-name, b-city, assets)\r\n        a-Schema = (a-num, b-name, bal)\r\n        d-Schema = (c-name, a-number)\r\n</pre>\r\nLet branch, account and depositor be respectively instances of the above schemas. Assume that account and depositor relations are much bigger than the branch relation. Consider the following query: \r\n<pre>\r\nП<sub>c-name</sub> (σ<sub>b-city = \"Agra\" ⋀ bal < 0</sub> (branch ⋈ (account ⋈ depositor) \r\n</pre>\r\nWhich one of the following queries is the most efficient version of the above query ?  ', 1, 12, 73, 'Gate', 2007, 5, 0, 0),
(1086, '<img src=\"./image/question/1086.jpg\"/>', 2, 12, 36, 'Gate', 2007, 5, 0, 0),
(1087, '<img src=\"./image/question/1087.jpg\"/>', 1, 12, 36, 'Gate', 2007, 5, 0, 0),
(1088, 'Consider the following log sequence of two transactions on a bank account, with initial balance 12000, that transfer 2000 to a mortgage payment and then apply a 5% interest.\r\n<pre>\r\n  1. T1 start\r\n  2. T1 B old=12000 new=10000\r\n  3. T1 M old=0 new=2000\r\n  4. T1 commit\r\n  5. T2 start\r\n  6. T2 B old=10000 new=10500\r\n  7. T2 commit\r\n</pre>\r\nSuppose the database system crashes just before log record 7 is written. When the system is restarted, which one statement is true of the recovery procedure?', 1, 12, 70, 'Gate', 2007, 5, 0, 0),
(1089, 'The following functional dependencies are given:\r\n<pre>\r\nAB → CD, \r\nAF → D,\r\nDE → F,\r\nC → G ,\r\nF → E,\r\nG → A\r\n</pre>\r\nWhich one of the following options is false?', 1, 12, 74, 'Gate', 2006, 5, 0, 0),
(1090, 'Consider the relation account (customer, balance) where customer is a primary key and there are no null values. We would like to rank customers according to decreasing balance. The customer with the largest balance gets rank 1. ties are not broke but ranks are skipped: if exactly two customers have the largest balance they each get rank 1 and rank 2 is not assigned\r\n<pre>\r\nQuery1:\r\n  select A.customer, count(B.customer)\r\n  from account A, account B\r\n  where A.balance <=B.balance\r\n  group by A.customer\r\n\r\nQuery2:\r\n  select A.customer, 1+count(B.customer)\r\n  from account A, account B\r\n  where A.balance < B.balance\r\n  group by A.customer\r\n</pre>\r\nConsider these statements about Query1 and Query2.\r\n<pre>\r\n1. Query1 will produce the same row set as Query2 for \r\n   some but not all databases.\r\n2. Both Query1 and Query2 are correct implementation \r\n   of the specification\r\n3. Query1 is a correct implementation of the specification\r\n   but Query2 is not\r\n4. Neither Query1 nor Query2 is a correct implementation\r\n   of the specification\r\n5. Assigning rank with a pure relational query takes \r\n   less time than scanning in decreasing balance order \r\n   assigning ranks using ODBC.\r\n</pre>\r\nWhich two of the above statements are correct?', 1, 12, 74, 'Gate', 2006, 5, 0, 0),
(1091, 'Consider the relation \"enrolled(student, course)\" in which (student, course) is the primary key, and the relation \"paid(student, amount)\" where student is the primary key. Assume no null values and no foreign keys or integrity constraints. Given the following four queries:\r\n<pre>\r\nQuery1: select student from enrolled where \r\n        student in (select student from paid)\r\nQuery2: select student from paid where \r\n        student in (select student from enrolled)\r\nQuery3: select E.student from enrolled E, paid P \r\n         where E.student = P.student\r\nQuery4:  select student from paid where exists\r\n        (select * from enrolled where enrolled.student = paid.student)\r\n</pre>\r\nWhich one of the following statements is correct?', 1, 12, 72, 'Gate', 2006, 5, 0, 0),
(1092, 'Consider the relations r1(P, Q, R) and r2(R, S, T) with primary keys P and R respectively. The relation r1 contains 2000 tuples and r2 contains 2500 tuples. The maximum size of the join r1⋈ r2 is :', 2, 12, 73, 'Gate', 2006, 5, 0, 0),
(1093, 'Which of the following relational query languages have the same expressive power?\r\n<pre>\r\n    1. Relational algebra\r\n    2. Tuple relational calculus restricted to safe expressions\r\n    3. Domain relational calculus restricted to safe expressions\r\n</pre>', 1, 12, 73, 'Gate', 2006, 5, 0, 0),
(1094, 'In a database file structure, the search key field is 9 bytes long, the block size is 512 bytes, a record pointer is 7 bytes and a block pointer is 6 bytes. The largest possible order of a non-leaf node in a B  tree implementing this file structure is', 2, 12, 36, 'Gate', 2006, 5, 0, 0),
(1095, 'Consider a relation R with five attributes V, W, X, Y, and Z. The following functional dependencies hold:<pre> VY→ W, WX → Z, ZY → V</pre> Which of the following is a candidate key for R?', 1, 12, 74, 'Gate', 2006, 5, 0, 0),
(1096, '<img src=\"./image/question/1096.jpg\"/>', 1, 12, 72, 'Gate', 2006, 5, 0, 0),
(1097, 'Consider a database with three relation instances shown below. The primary keys for the Drivers and Cars relation are did and cid respectively and the records are stored in ascending order of these primary keys as given in the tables. No indexing is available<br/><img src=\"./image/question/1097.jpg\"/><br/>Let n be the number of comparisons performed when the above SQL query is optimally executed. If linear search is used to locate a tuple in a relation using primary key, then n lies in the range', 1, 12, 72, 'Gate', 2006, 5, 0, 0),
(1098, 'Consider a relation scheme R = (A, B, C, D, E, H) on which the following functional dependencies hold: \r\n<pre>\r\n{A → B, BC → D, E → C, D → A}.\r\n</pre>\r\n What are the candidate keys of R?', 1, 12, 74, 'Gate', 2005, 5, 0, 0),
(1099, 'The relation book (<u>title</u>, price) contains the titles and prices of different books. Assuming that no two books have the same price, what does the following SQL query list?\r\n<pre>\r\n  select title\r\n  from book as B\r\n  where (select count(*)\r\n     from book as T\r\n     where T.price > B.price) < 5\r\n</pre>', 1, 12, 72, 'Gate', 2005, 5, 0, 0),
(1100, 'The following table has two attributes A and C where A is the primary key and C is the foreign key referencing A with on-delete cascade.\r\n<pre>\r\nA   C\r\n-----\r\n2   4\r\n3   4\r\n4   3\r\n5   2\r\n7   2\r\n9   5\r\n6   4\r\n</pre>\r\nThe set of all tuples that must be additionally deleted to preserve referential integrity when the tuple (2,4) is deleted is:', 1, 12, 72, 'Gate', 2005, 5, 0, 0),
(1101, '<span style=\"font-weight: 400;\">Let r be a relation instance with schema R = (A, B, C, D). We define r</span><span style=\"font-weight: 400;\"><sub>1</sub></span><span style=\"font-weight: 400;\">&nbsp;= Π</span><span style=\"font-weight: 400;\"><sub>A,B,C&nbsp;</sub></span><span style=\"font-weight: 400;\">(R) and r</span><span style=\"font-weight: 400;\"><sub>2</sub></span><span style=\"font-weight: 400;\">&nbsp;= Π</span><span style=\"font-weight: 400;\"><sub>A,D</sub></span><span style=\"font-weight: 400;\">&nbsp;(R). Let s = r</span><span style=\"font-weight: 400;\"><sub>1</sub></span><span style=\"font-weight: 400;\">&nbsp;* r</span><span style=\"font-weight: 400;\"><sub>2</sub></span><span style=\"font-weight: 400;\">&nbsp;where * denotes natural join. Given that the decomposition of r into r<sub>1</sub></span><span style=\"font-weight: 400;\">&nbsp;and r<sub>2</sub></span><span style=\"font-weight: 400;\">&nbsp;is lossy, which one of the following is TRUE?</span>', 1, 12, 73, 'Gate', 2005, 5, 0, 0),
(1102, 'Which one of the following is a key factor for preferring B  -trees to binary search trees for indexing database relations?', 1, 12, 36, 'Gate', 2005, 5, 0, 0),
(1103, 'Which one of the following statements about normal forms is FALSE?  ', 1, 12, 74, 'Gate', 2005, 5, 0, 0),
(1104, 'Consider the entities \'hotel room\', and \'person\' with a many to many relationship \'lodging\' as shown below: <br/><img src=\"./image/question/1104.jpg\"/><br/>If we wish to store information about the rent payment to be made by person (s) occupying different hotel rooms, then this information should appear as an attribute of', 1, 12, 61, 'Gate', 2005, 5, 0, 0),
(1105, 'A table has fields Fl, F2, F3, F4, F5 with the following functional dependencies<pre>F1 → F3   F2→ F4   (F1 . F2) → F5 </pre>In terms of Normalization, this table is in', 1, 12, 74, 'Gate', 2005, 5, 0, 0),
(1106, 'A B-Tree used as an index for a large database table has four levels including the root node. If a new key is inserted in this index, then the maximum number of nodes that could be newly created in the process are:', 2, 12, 36, 'Gate', 2005, 5, 0, 0),
(1107, 'A company maintains records of sales made by its salespersons and pays them commission based on each individual\'s total sales made in a year. This data is maintained in a table with following schema:\r\nsalesinfo = (salespersonid, totalsales, commission)\r\nIn a certain year, due to better business results, the company decides to further reward its salespersons by enhancing the commission paid to them as per the following formula:\r\nIf commission < = 50000, enhance it by 2% If 50000 < commission < = 100000, enhance it by 4% If commission > 100000, enhance it by 6%\r\nThe IT staff has written three different SQL scripts to calculate enhancement for each slab, each of these scripts is to run as a separate transaction as follows:\r\n<pre>\r\n T1 	\r\n\r\nUpdate salesinfo\r\nSet commission = commission * 1.02\r\nWhere commission < = 50000;\r\n\r\n T2 	\r\n\r\nUpdate salesinfo\r\nSet commission = commission * 1.04\r\nWhere commission > 50000 and commission is < = 100000;\r\n\r\n T3 	\r\n\r\nUpdate salesinfo\r\nSet commission = commission * 1.06\r\nWhere commission > 100000;\r\n</pre>\r\nWhich of the following options of running these transactions will update the commission of all salespersons correctly', 1, 12, 72, 'Gate', 2005, 5, 0, 0),
(1108, 'A table \'student\' with schema (roll, name, hostel, marks), and another table \'hobby\' with schema (roll, hobbyname) contains records as shown below:\r\n<pre>\r\nTable: Student \r\nROLL 	NAME 	         HOSTEL 	MARKS\r\n1798 	Manoj Rathod 	  7     	95\r\n2154 	Soumic Banerjee   5     	68\r\n2369 	Gumma Reddy 	  7 	        86\r\n2581 	Pradeep Pendse 	  6       	92\r\n2643 	Suhas Kulkarni 	  5       	78\r\n2711 	Nitin Kadam 	  8       	72\r\n2872 	Kiran Vora 	  5       	92\r\n2926 	Manoj Kunkalikar  5     	94\r\n2959 	Hemant Karkhanis  7     	88\r\n3125 	Rajesh Doshi 	  5       	82\r\n \r\nTable: hobby\r\nROLL 	HOBBYNAME\r\n1798 	chess\r\n1798 	music\r\n2154 	music\r\n2369 	swimming\r\n2581 	cricket\r\n2643 	chess\r\n2643 	hockey\r\n2711 	volleyball\r\n2872 	football\r\n2926 	cricket\r\n2959 	photography\r\n3125 	music\r\n3125 	chess\r\n</pre>\r\nThe following SQL query is executed on the above tables:\r\n<pre>\r\nselect hostel\r\nfrom student natural join hobby\r\nwhere marks > = 75 and roll between 2000 and 3000;\r\n</pre>\r\nRelations S and H with the same schema as those of these two tables respectively contain the same information as tuples. A new relation S’ is obtained by the following relational algebra operation: \r\n<pre>\r\nS’ = ∏<sub>hostel</sub> ((σ<sub>s.roll = H.roll</sub> (σ<sub>marks > 75 and roll > 2000 and roll < 3000 </sub>(S)) X (H)) \r\n</pre>\r\nThe difference between the number of rows output by the SQL statement and the number of tuples in S’ is      ', 2, 12, 72, 'Gate', 2005, 5, 0, 0),
(1109, 'In an inventory management system implemented at a trading corporation, there are several tables designed to hold all the information. Amongst these, the following two tables hold information on which items are supplied by which suppliers, and which warehouse keeps which items along with the stock-level of these items. \r\n<pre>\r\nSupply = (supplierid, itemcode) \r\nInventory = (itemcode, warehouse, stocklevel) \r\n</pre>\r\nFor a specific information required by the management, following SQL query has been written\r\n<pre>\r\nSelect distinct STMP.supplierid\r\nFrom Supply as STMP\r\nWhere not unique (Select ITMP.supplierid\r\n                  From Inventory, Supply as ITMP\r\n                  Where STMP.supplierid = ITMP.supplierid\r\n                  And ITMP.itemcode = Inventory.itemcode\r\n                  And Inventory.warehouse = \'Nagpur\');\r\n</pre>\r\nFor the warehouse at Nagpur, this query will find all suppliers who', 1, 12, 72, 'Gate', 2005, 5, 0, 0),
(1110, 'In a schema with attributes A, B, C, D and E following set of functional dependencies are given\r\n<pre>\r\nA → B \r\nA → C \r\nCD → E \r\nB → D \r\nE → A\r\n</pre>\r\nWhich of the following functional dependencies is NOT implied by the above set?', 1, 12, 74, 'Gate', 2005, 5, 0, 0),
(1111, 'A database table T1 has 2000 records and occupies 80 disk blocks. Another table T2 has 400 records and occupies 20 disk blocks. These two tables have to be joined as per a specified join condition that needs to be evaluated for every pair of records from these two tables. The memory buffer space available can hold exactly one block of records for T1 and one block of records for T2 simultaneously at any point in time. No index is available on either table. If Nested-loop join algorithm is employed to perform the join, with the most appropriate choice of table to be used in outer loop, the number of block accesses required for reading the data are  ', 1, 12, 36, 'Gate', 2005, 5, 0, 0),
(1112, 'A database table T1 has 2000 records and occupies 80 disk blocks. Another table T2 has 400 records and occupies 20 disk blocks. These two tables have to be joined as per a specified join condition that needs to be evaluated for every pair of records from these two tables. The memory buffer space available can hold exactly one block of records for T1 and one block of records for T2 simultaneously at any point in time. No index is available on either table. If, instead of Nested-loop join, Block nested-loop join is used, again with the most appropriate choice of table in the outer loop, the reduction in number of block accesses required for reading the data will be  ', 1, 12, 36, 'Gate', 2005, 5, 0, 0),
(1113, 'For secondary key processing which of the following file organizations is preferred? Give a one line justification:', 1, 12, 36, 'Gate', 1989, 5, 0, 0),
(1114, '<img src=\"./image/question/1114.jpg\"/>', 3, 12, 74, 'Gate', 1990, 5, 0, 0),
(1115, '<img src=\"./image/question/1115.jpg\"/>', 1, 12, 12, 'Gate', 1990, 5, 0, 0),
(1116, 'Which of the following relational calculus expressions is not safe?', 1, 12, 73, 'Gate', 2001, 5, 0, 0),
(1117, 'R(A,B,C,D) is a relation. Which of the following does not have a lossless join, dependency preserving BCNF decomposition?', 1, 12, 74, 'Gate', 2001, 5, 0, 0),
(1118, 'Let r and s be two relations over the relation schemes R and S respectively, and let A be an attribute in R. Then the relational algebra expression σ<sub>A=a</sub>(r⋈s) is always equal to', 1, 12, 73, 'Gate', 2001, 5, 0, 0),
(1119, 'Suppose the adjacency relation of vertices in a graph is represented in a table Adj(X,Y). Which of the following queries cannot be expressed by a relational algebra expression of constant length?', 1, 12, 73, 'Gate', 2001, 5, 0, 0),
(1120, 'Consider a schema R(A,B,C,D) and functional dependencies A → B and C → D. Then the decomposition of R into R<sub>1</sub>(AB) and R<sub>2</sub>(CD) is', 1, 12, 74, 'Gate', 2001, 5, 0, 0),
(1121, 'Which normal form is considered adequate for normal relational database design?', 1, 12, 74, 'Gate', 2001, 5, 0, 0),
(1122, 'Given two union compatible relations R<sub>1</sub>(A,B) and R<sub>2</sub> (C,D), what is the result of the operation R<sub>1</sub>A = CAB = DR<sub>2</sub>?', 1, 12, 73, 'Gate', 1998, 5, 0, 0),
(1123, 'Which of the following is/are correct?', 1, 12, 72, 'Gate', 1999, 5, 0, 0),
(1124, 'Which of the following sets of component(s) is/are sufficient to implement any arbitrary Boolean function?', 3, 9, 67, 'Gate', 1999, 5, 0, 0),
(1125, 'Which of the following sets of component(s) is/are sufficient to implement any arbitrary Boolean function?', 1, 9, 62, 'Gate', 1999, 5, 0, 0),
(1126, 'Consider the schema R = (S T U V) and the dependencies \r\n<pre>\r\nS → T,\r\nT → U,\r\nU → V\r\nV → S\r\n</pre>\r\n Let R = (R1 and R2) be a decomposition such that R1 ∩ R2 ≠ ∅ . The decomposition is', 1, 12, 74, 'Gate', 1999, 5, 0, 0),
(1127, '<img src=\"./image/question/1127.jpg\"/>', 1, 12, 70, 'Gate', 1999, 5, 0, 0),
(1128, 'Which of the following is correct?', 1, 12, 36, 'Gate', 1999, 5, 0, 0),
(1129, 'Let R = (a, b, c, d, e, f) be a relation scheme with the following dependencies \r\n<pre>\r\nc → f,\r\ne → a,\r\nec → d,\r\na → b.\r\n</pre>\r\nWhich of the following is a key for R?', 1, 12, 74, 'Gate', 1999, 5, 0, 0),
(1130, 'In SQL, relations can contain null values, and comparisons with null values are treated as unknown. Suppose all comparisons with a null value are treated as false. Which of the following pairs is not equivalent?', 1, 12, 72, 'Gate', 2000, 5, 0, 0),
(1131, '<img src=\"./image/question/1130.jpg\"/>', 1, 12, 73, 'Gate', 1999, 5, 0, 0),
(1132, 'Consider the join of a relation R with a relation S. If R has m tuples and S has n tuples then the maximum and minimum sizes of the join respectively are', 1, 12, 73, 'Gate', 1999, 5, 0, 0),
(1133, '<img src=\"./image/question/1133.jpg\"/>', 1, 12, 73, 'Gate', 2000, 5, 0, 0),
(1134, '<img src=\"./image/question/1134.jpg\"/>', 1, 12, 74, 'Gate', 2000, 5, 0, 0),
(1135, '<img src=\"./image/question/1135.jpg\"/>', 1, 12, 73, 'Gate', 2000, 5, 0, 0),
(1136, 'B+-trees are preferred to binary trees in databases because', 1, 12, 36, 'Gate', 2000, 5, 0, 0),
(1137, '<img src=\"./image/question/1137.jpg\"/>', 1, 12, 74, 'Gate', 2002, 5, 0, 0),
(1138, 'Relation R is decomposed using a set of functional dependencies, F, and relation S is decomposed using another set of functional dependencies, G. One decomposition is definitely BCNF, the other is definitely 3NF, but it is not known which is which. To make a quaranteed identification, which one of the following tests should be used on the decompositions? (Assume that the closures of F and G are available).', 1, 12, 74, 'Gate', 2002, 5, 0, 0),
(1139, 'A B+- tree index is to be built on the Name attribute of the relation STUDENT. Assume that all student names are of length 8 bytes, disk blocks are of size 512 bytes, and index pointers are of size 4 bytes. Given this scenario, what would be the best choice of the degree (i.e. the number of pointers per node) of the B+-tree?', 2, 12, 36, 'Gate', 2002, 5, 0, 0),
(1140, 'With regard to the expressive power of the formal relational query languages, which of the following statements is true?', 1, 12, 73, 'Gate', 2002, 5, 0, 0),
(1141, 'Relation R with an associated set of functional dependencies, F, is decomposed into BCNF. The redundancy (arising out of functional dependencies) in the resulting set of relations is', 1, 12, 74, 'Gate', 2002, 5, 0, 0),
(1142, 'Consider three data items D1, D2 and D3 and the following execution schedule of transactions T1, T2 and T3. In the diagram, R(D) and W(D) denote the actions reading and writing the data item D respectively.<br/><img src=\"./image/question/1142.jpg\"/><br/>Which of the following statements is correct?    ', 1, 12, 70, 'Gate', 2003, 5, 0, 0),
(1143, 'Consider the set of relations shown below and the SQL query that follows.\r\n<pre>\r\nStudents: (Roll_number, Name, Date_of_birth)\r\n  Courses: (Course number, Course_name, Instructor)\r\n  Grades: (Roll_number, Course_number, Grade)\r\n\r\n select distinct Name\r\n         from Students, Courses, Grades\r\n         where Students. Roll_number = Grades.Roll_number\r\n              and Courses.Instructor = Korth\r\n              and Courses.Course_number = Grades.Course_number\r\n              and Grades.grade = A\r\n</pre>\r\nWhich of the following sets is computed by the above query?', 1, 12, 72, 'Gate', 2003, 5, 0, 0),
(1144, 'Consider the following functional dependencies in a database:\r\n<pre>\r\n  Data_of_Birth → Age\r\n  Age → Eligibility\r\n  Name → Roll_number\r\n  Roll_number → Name\r\n  Course_number → Course_name\r\n  Course_number → Instructor\r\n  (Roll_number, Course_number) → Grade\r\n</pre>\r\nThe relation (Roll_number, Name, Date_of_birth, Age) is:', 1, 12, 74, 'Gate', 2003, 5, 0, 0),
(1145, 'Consider the following SQL query\r\n<pre>\r\nselect distinct al, a2,........., an\r\nfrom r1, r2,........, rm\r\nwhere P\r\n</pre>\r\nFor an arbitrary predicate P, this query is equivalent to which of the following relational algebra expressions ?  ', 1, 12, 72, 'Gate', 2003, 5, 0, 0),
(1146, 'Which of the following scenarios may lead to an irrecoverable error in a database system?', 1, 12, 70, 'Gate', 2003, 5, 0, 0),
(1147, 'Consider a table T in a relational database with a key field K. A B-tree of order p is used as an access structure on K, where p denotes the maximum number of tree pointers in a B-tree index node. Assume that K is 10 bytes long; disk block size is 512 bytes; each data pointer P<sub>D</sub> is 8 bytes long and each block pointer P<sub>B</sub> is 5 bytes long. In order for each B-tree node to fit in a single disk block, the maximum value of p is', 2, 12, 36, 'Gate', 2003, 5, 0, 0),
(1148, 'Consider two tables in a relational database with columns and rows as follows:\r\n<pre>\r\nTable: Student \r\nROLL_NO 	NAME 	DEPT_ID\r\n1       	ABC 	1\r\n2 	        DEF 	1\r\n3       	GHI 	2\r\n4 	        JKL 	3\r\nTable: Department\r\nDEPT_ID 	DEPT_NAME\r\n1 	        A\r\n2 	        B\r\n3 	        C\r\n</pre>\r\nRoll_no is the primary key of the Student table, Dept_id is the primary key of the Department table and Student.Dept_id is a foreign key from Department.Dept_id What will happen if we try to execute the following two SQL statements?\r\n<pre>\r\n    I.  update Student set Dept_id = Null where Roll_on = 1\r\n    II. update Department set Dept_id = Null where Dept_id = 1\r\n</pre>', 1, 12, 72, 'Gate', 2004, 5, 0, 0),
(1149, 'A table T1 in a relational database has the following rows and columns:\r\n<pre>\r\nroll no. 	 marks\r\n1 	         10\r\n2 	         20\r\n3 	         30\r\n4       	 Null\r\n</pre>\r\nThe following sequence of SQL statements was successfully executed on table T1.\r\n<pre>\r\nUpdate T1 set marks = marks + 5\r\nSelect avg(marks) from T1\r\n</pre>\r\nWhat is the output of the select statement?', 2, 12, 72, 'Gate', 2004, 5, 0, 0),
(1150, 'A relation Empdtl is defined with attributes empcode (unique), name, street, city, state and pincode. For any pincode, there is only one city and state. Also, for any given street, city and state, there is just one pincode. In normalization terms, Empdtl is a relation in', 1, 12, 74, 'Gate', 2004, 5, 0, 0),
(1151, 'A relational database contains two tables student and department in which student table has columns roll_no, name and dept_id and department table has columns dept_id and dept_name. The following insert statements were executed successfully to populate the empty tables:\r\n<pre>\r\nInsert into department values (1, \'Mathematics\')\r\nInsert into department values (2, \'Physics\')\r\nInsert into student values (l, \'Navin\', 1)\r\nInsert into student values (2, \'Mukesh\', 2)\r\nInsert into student values (3, \'Gita\', 1)\r\n</pre>\r\nHow many rows and columns will be retrieved by the following SQL statement?\r\n<pre>\r\nSelect * from student, department\r\n</pre>', 1, 12, 72, 'Gate', 2004, 5, 0, 0),
(1152, 'Consider the following entity relationship diagram (ERD), where two entities E1 and E2 have a relation R of cardinality 1 : m. <br/><img src=\"./image/question/1152.jpg\"/><br/>The attributes of E1 are A11, A12 and A13 where A11 is the key attribute. The attributes of E2 are A21, A22 and A23 where A21 is the key attribute and A23 is a multi-valued attribute. Relation R does not have any attribute. A relational database containing minimum number of tables with each table satisfying the requirements of the third normal form (3NF) is designed from the above ERD. The number of tables in the database is ', 2, 12, 61, 'Gate', 2004, 5, 0, 0),
(1153, 'Which level of locking provides the highest degree of concurrency in a relational database?', 1, 12, 70, 'Gate', 2004, 5, 0, 0),
(1154, '<img src=\"./image/question/1154.jpg\"/>', 1, 12, 72, 'Gate', 2004, 5, 0, 0),
(1155, 'The order of an internal node in a B+ tree index is the maximum number of children it can have. Suppose that a child pointer takes 6 bytes, the search field value takes 14 bytes, and the block size is 512 bytes. What is the order of the internal node?', 2, 12, 36, 'Gate', 2004, 5, 0, 0),
(1156, '<img src=\"./image/question/1156.jpg\"/>', 1, 12, 74, 'Gate', 2004, 5, 0, 0),
(1157, '<img src=\"./image/question/1157.jpg\"/>', 1, 12, 73, 'Gate', 2004, 5, 0, 0),
(1158, 'Let R1 (<u>A</u>, B, (D)) and R2 (<u>D</u>, E) be two relation schema, where the primary keys are shown underlined, and let C be a foreign key in R1 referring to R2. Suppose there is no violation of the above referential integrity constraint in the corresponding relation instances r1 and r2. Which one of the following relational algebra expressions would necessarily produce an empty relation? ', 1, 12, 73, 'Gate', 2004, 5, 0, 0),
(1159, '<img src=\"./image/question/1159.jpg\"/>', 1, 12, 36, 'Gate', 1998, 5, 0, 0),
(1160, 'Which of the following query transformations (i.e. replacing the l.h.s. expression by the r.h.s. expression) is incorrect? R1 and R2 are relations, C1, C2 are selection conditions and A1, A2 are attributes of R1?', 1, 12, 73, 'Gate', 1998, 5, 0, 0),
(1161, '<img src=\"./image/question/1161.jpg\"/>', 1, 12, 74, 'Gate', 1997, 5, 0, 0),
(1162, '<img src=\"./image/question/1162.jpg\"/>', 1, 12, 74, 'Gate', 1997, 5, 0, 0),
(1163, 'Which of the following statements are True:', 3, 12, 12, 'Gate', 1996, 5, 0, 0),
(1164, 'In 16-bit 2\'s complement representation, the decimal number -28 is:', 1, 9, 75, 'Gate', 2019, 5, 0, 0),
(1165, 'Two numbers are chosen independently and uniformly at random from the set {1, 2, ..., 13}. The probability (rounded off to 3 decimal places) that their 4-bit (unsigned) binary representations have the same most significant bit is ______.', 2, 9, 75, 'Gate', 2019, 5, 0, 0),
(1166, 'Consider Z = X - Y, where X, Y and Z are all in sign-magnitude form. X and Y are each represented in n bits. To avoid overflow, the representation of Z would require a minimum of:', 1, 9, 75, 'Gate', 2019, 5, 0, 0),
(1167, 'Which one of the following is NOT a valid identity?', 1, 9, 67, 'Gate', 2019, 5, 0, 0),
(1168, 'What is the minimum number of 2-input NOR gates required to implement a 4-variable function function expressed in sum-of-minterms form as f = Σ(0, 2, 5, 7, 8, 10, 13, 15)? Assume that all the inputs and their complements are available.', 1, 9, 62, 'Gate', 2019, 5, 0, 0),
(1169, 'Consider three 4-variable functions f1, f2 and f3, which are expressed in sum-of-minterms as\r\n<pre>\r\nf1 = Σ(0, 2, 5, 8, 14),\r\nf2 = Σ(2, 3, 6, 8, 14, 15),\r\nf3 = Σ(2, 7, 11, 14)\r\n</pre>\r\nFor the following circuit with one AND gate and one XOR gate, the output function f can be expressed as:\r\n<center><img src=\"./image/question/1169.jpg\"/></center>', 1, 9, 67, 'Gate', 2019, 5, 0, 0),
(1170, 'A multiplexer is placed between a group of 32 registers and an accumulator to regulate data movement such that at any given point in time the content of only one register will move to the accumulator. The minimum number of select lines needed for the multiplexer is _____. ', 2, 9, 62, 'Gate', 2020, 5, 0, 0),
(1171, 'If there are m input lines and n output lines for a decoder that is used to uniquely address a byte addressable 1 KB RAM, then the minimum value of m + n is ____. ', 2, 9, 62, 'Gate', 2020, 5, 0, 0),
(1172, 'Consider the Boolean function z(a,b,c).<br/><img src=\"./image/question/1172.jpg\"/><br/> Which one of the following minterm lists represents the circuit given above? ', 1, 9, 76, 'Gate', 2020, 5, 0, 0),
(1173, 'Consider three registers R1, R2 and R3 that store numbers in IEEE-754 single precision floating point format. Assume that R1 and R2 contain the values (in hexadecimal notation) 0x42200000 and 0xC1200000, respectively.<br/>If R3 = R1/R2, what is the value stored in R3? ', 1, 9, 75, 'Gate', 2020, 5, 0, 0),
(1174, 'Let ⊕ and ⊙ denote the Exclusive OR and Exclusive NOR operations, respectively. Which one of the following is NOT CORRECT?', 1, 9, 76, 'Gate', 2018, 5, 0, 0),
(1175, 'Consider the sequential circuit shown in the figure, where both flip-flops used are positive edge-triggered D flip-flops.<br/><img src=\"./image/question/1175.jpg\"/><br/>The number of states in the state transition diagram of this circuit that have a transition back to the same state on some value of \"in\" is ______', 2, 9, 77, 'Gate', 2018, 5, 0, 0),
(1176, 'Consider the unsigned 8-bit fixed point binary number representation below,\r\n<pre>\r\n    bsub>7</sub>b<sub>6</sub>b<sub>5</sub>b<sub>4</sub>b<sub>3</sub> ⋅ b<sub>2</sub>b<sub>1</sub>b<sub>0</sub> \r\n</pre>\r\nwhere the position of the binary point is between b3 and b2 . Assume b7 is the most significant bit. Some of the decimal numbers listed below cannot be represented exactly in the above representation:\r\n<pre>\r\n    (i) 31.500    (ii) 0.875    (iii) 12.100    (iv) 3.001 \r\n</pre>\r\nWhich one of the following statements is true?\r\n', 1, 9, 75, 'Gate', 2018, 5, 0, 0),
(1177, 'Consider the minterm list form of a Boolean function F given below.\r\n<pre>\r\n    F(P, Q, R, S) = Σm(0, 2, 5, 7, 9, 11) + d(3, 8, 10, 12, 14) \r\n</pre>\r\nHere, m denotes a minterm and d denotes a don’t care term. The number of essential prime implicants of the function F is _______ .', 2, 9, 67, 'Gate', 2018, 5, 0, 0),
(1178, 'The n-bit fixed-point representation of an unsigned real number X uses f bits for the fraction part. Let i = n-f. The range of decimal values for X in this representation is', 1, 9, 75, 'Gate', 2017, 5, 0, 0),
(1179, 'When two 8-bit numbers A<sub>7</sub>...A<sub>0</sub> and B<sub>7</sub>...B<sub>0</sub> in 2’s complement representation (with A<sub>0</sub> and B<sub>0</sub> as the least significant bits) are added using a ripple-carry adder, the sum bits obtained are S<sub>7</sub>...S<sub>0</sub> and the carry bits are C<sub>7</sub>...C<sub>0</sub>. An overflow is said to have occurred if', 1, 9, 62, 'Gate', 2017, 5, 0, 0),
(1180, 'Consider the Karnaugh map given below, where X represents “don’t care” and blank represents 0.<br/><img src=\"./image/question/1180.jpg\"/>', 2, 9, 67, 'Gate', 2017, 5, 0, 0),
(1181, 'Consider a combination of T and D flip-flops connected as shown below. The output of the D flip-flop is connected to the input of the T flip-flop and the output of the T flip-flop is connected to the input of the D flip-flop.<br/><img src=\"./image/question/1181.jpg\"/><br/>Initially, both Q<sub>0</sub> and Q<sub>1</sub> are set to 1 (before the 1<sup>s</sup>t clock cycle). The outputs', 1, 9, 77, 'Gate', 2017, 5, 0, 0),
(1182, 'The representation of the value of a 16-bit unsigned integer X in hexadecimal number system is BCA9. The representation of the value of X in octal number system is', 2, 9, 75, 'Gate', 2017, 5, 0, 0),
(1183, 'Given the following binary number in 32-bit (single precision) IEEE-754 format:<pre>    00111110011011010000000000000000</pre>The decimal value closest to this floating-point number is', 1, 9, 75, 'Gate', 2017, 5, 0, 0),
(1184, 'Consider a quadratic equation x<sup>2</sup> - 13x   36 = 0 with coefficients in a base b. The solutions of this equation in the same base b are x = 5 and x = 6. Then b=________.', 2, 9, 75, 'Gate', 2017, 5, 0, 0),
(1185, 'If w, x, y, z are Boolean variables, then which one of the following is INCORRECT?', 1, 9, 67, 'Gate', 2017, 5, 0, 0),
(1186, 'Given f(w,x,y,z) = Σ<sub>m</sub>(0,1,2,3,7,8,10)   Σ<sub>d</sub>(5,6,11,15), where d represents the don’t-care condition in Karnaugh maps. Which of the following is a minimum product-of-sums (POS) form of f(w,x,y,z)?', 1, 9, 67, 'Gate', 2017, 5, 0, 0),
(1187, 'Consider a binary code that consists of only four valid code words as given below:\r\n<pre>\r\n00000, 01011, 10101, 11110\r\n</pre>\r\nLet the minimum Hamming distance of the code be p and the maximum number of erroneous bits that can be corrected by the code be q. Then the values of p and q are', 1, 9, 75, 'Gate', 2017, 5, 0, 0),
(1188, 'The next state table of a 2-bit saturating up-counter is given below.<br/><center><img src=\"./image/question/1188.jpg\"/></center><br/>The counter is built as a synchronous sequential circuit using T flip-flops. The expressions for T<sub>1</sub> and T<sub>0</sub> are', 1, 9, 77, 'Gate', 2017, 5, 0, 0),
(1189, 'Consider the Boolean operator with the following properties:<br/>\r\n<img src=\"./image/question/1189.jpg\"/><br/>\r\nThen x#y is equiavlent to', 1, 9, 67, 'Gate', 2016, 5, 0, 0),
(1190, 'The 16-bit 2’s complement representation of an integer is 1111 1111 1111 0101; its decimal representation is __________.', 2, 9, 75, 'Gate', 2016, 5, 0, 0),
(1191, 'We want to design a synchronous counter that counts the sequence 0-1-0-2-0-3 and then repeats. The minimum number of J-K ﬂip-ﬂops required to implement this counter is __________.', 2, 9, 77, 'Gate', 2016, 5, 0, 0),
(1192, 'Consider the two cascaded 2-to-1 multiplexers as shown in the ﬁgure.<br/><img src=\"./image/question/1192.jpg\"/><br/>The minimal sum of products form of the output X is ', 1, 9, 62, 'Gate', 2016, 5, 0, 0),
(1193, 'Consider a carry lookahead adder for adding two n-bit integers, built using gates of fan-in at most two. The time to perform addition using this adder is __________.', 1, 9, 62, 'Gate', 2016, 5, 0, 0),
(1194, 'Consider an eight-bit ripple-carry adder for computing the sum of A and B, where A and B are integers represented in 2’s complement form. If the decimal value of A is one, the decimal value of B that leads to the longest latency for the sum to stabilize is _________.', 2, 9, 62, 'Gate', 2016, 5, 0, 0),
(1195, 'Let, x<sub>1</sub>⊕x<sub>2</sub>⊕x<sub>3</sub>⊕x<sub>4</sub> = 0 where x<sub>1</sub>, x<sub>2</sub>, x<sub>3</sub>, x<sub>4</sub> are Boolean variables, and ⊕ is the XOR operator. Which one of the following must always be TRUE?', 1, 9, 67, 'Gate', 2016, 5, 0, 0),
(1196, 'Let X be the number of distinct 16-bit integers in 2’s complement representation. Let Y be the number of distinct 16-bit integers in sign magnitude representation.<br/>Then X-Y is _________.', 2, 9, 75, 'Gate', 2016, 5, 0, 0),
(1197, 'Consider a 4-bit Johnson counter with an initial value of 0000. The counting sequence of this counter is ', 1, 9, 77, 'Gate', 2015, 5, 0, 0),
(1198, 'The binary operator ≠ is defined by the following truth table<br/><img src=\"./image/question/1198.jpg\"/><br/>Which one of the following is true about the binary operator ≠?', 1, 9, 76, 'Gate', 2015, 5, 0, 0),
(1199, 'A positive edge-triggered D flip-flop is connected to a positive edge-triggered JK flipflop as follows. The Q output of the D flip-flop is connected to both the J and K inputs of the JK flip-flop, while the Q output of the JK flip-flop is connected to the input of the D flip-flop. Initially, the output of the D flip-flop is set to logic one and the output of the JK flip-flop is cleared. Which one of the following is the bit sequence (including the initial state) generated at the Q output of the JK flip-flop when the flip-flops are connected to a free-running common clock? Assume that J = K = 1 is the toggle mode and J = K = 0 is the state-holding mode of the JK flip-flop. Both the flip-flops have non-zero propagation delays. ', 1, 9, 77, 'Gate', 2015, 5, 0, 0),
(1200, 'The minimum number of JK flip-flops required to construct a synchronous counter with the count sequence (0, 0, 1, 1, 2, 2, 3, 3, 0, 0,…….) is ___________.', 2, 9, 77, 'Gate', 2015, 5, 0, 0),
(1201, 'The number of min-terms after minimizing the following Boolean expression is ______\r\n<pre>\r\n  [D\' + AB\' + A\'C + AC\'D + A\'C\'D]\'\r\n</pre>', 2, 9, 67, 'Gate', 2015, 5, 0, 0),
(1202, 'A half adder is implemented with XOR and AND gates. A full adder is implemented with two half adders and one OR gate. The propagation delay of an XOR gate is twice that of an AND/OR gate. The propagation delay of an AND/OR gate is 1.2 microseconds. A 4-bit ripple-carry binary adder is implemented by using four full adders. The total propagation time of this 4-bit binary adder in microseconds is ____________. ', 2, 9, 62, 'Gate', 2015, 5, 0, 0),
(1203, 'The total number of prime implicants of the function f(w,x,y,z) = Σ(0, 2, 4, 5, 6, 10) is ______.', 2, 9, 62, 'Gate', 2015, 5, 0, 0),
(1204, 'Consider the following Boolean expression for F:\r\n<pre>\r\nF(P, Q, R, S) = PQ + P\'QR + P\'QR\'S\r\n</pre>\r\nThe minimal sum-of-products form of F is  ', 1, 9, 67, 'Gate', 2014, 5, 0, 0),
(1205, 'The base (or radix) of the number system such that the following equation holds is____________.<pre>312/20 = 13.1</pre>', 2, 9, 75, 'Gate', 2014, 5, 0, 0),
(1206, 'Consider a 4-to-1 multiplexer with two select lines S<sub>1</sub> and S<sub>0</sub>, given below <br/><img src=\"./image/question/1206.jpg\"/><br/>The minimal sum-of-products form of the Boolean expression for the output F of the multiplexer is      ', 1, 9, 62, 'Gate', 2014, 5, 0, 0),
(1207, 'The dual of a Boolean function F(x<sub>1</sub>, x<sub>2</sub>, ..., x<sub>n</sub>, +, ⋅, \'), written as F<sup>D</sup>, is the same expression as that of F with + and ⋅ swapped. F is said to be self-dual if F = F<sup>D</sup>. The number of self-dual functions with n Boolean variables is', 1, 9, 67, 'Gate', 2014, 5, 0, 0),
(1208, 'Let k = 2<sup>n</sup>. A circuit is built by giving the output of an n-bit binary counter as input to an n-to-2<sup>n</sup> bit decoder. This circuit is equivalent to a', 1, 9, 77, 'Gate', 2014, 5, 0, 0),
(1209, 'Consider the equation (123)<sub>5</sub> = (x8)<sub>y</sub> with x and y as unknown. The number of possible solutions is __________.', 2, 9, 75, 'Gate', 2014, 5, 0, 0),
(1210, '<img src=\"./image/question/1210.jpg\"/>', 1, 9, 75, 'Gate', 2014, 5, 0, 0),
(1211, 'Consider the following combinational function block involving four Boolean variables x, y, a, b where x, a, b are inputs and y is the output.  <pre> f (x, y, a, b) { if (x is 1) y = a; else y = b; } </pre>  Which one of the following digital logic blocks is the most suitable for implementing this function?  ', 1, 9, 67, 'Gate', 2014, 5, 0, 0),
(1212, '<img src=\"./image/question/1212.jpg\"/><br/>The above synchronous sequential circuit built using JK flip-flops is initialized with Q2Q1Q0=000. The state sequence for this circuit for the next 3 clock cycles is', 1, 9, 77, 'Gate', 2014, 5, 0, 0),
(1213, '<img src=\"./image/question/1213.jpg\"/>', 1, 9, 76, 'Gate', 2014, 5, 0, 0),
(1214, 'The smallest integer that can be represented by an 8-bit number in 2’s complement form is', 2, 9, 75, 'Gate', 2013, 5, 0, 0),
(1215, 'In the following truth table, V = 1 if and only if the input is valid.  <br/><img src=\"./image/question/1215.jpg\"/><br/>What function does the truth table represent?  ', 1, 9, 62, 'Gate', 2013, 5, 0, 0),
(1216, 'Which one of the following expressions does NOT represent exclusive NOR of x and y?', 1, 9, 75, 'Gate', 2013, 5, 0, 0),
(1217, 'The truth table <br/><img src=\"./image/question/1217.jpg\"/><br/>represents the Boolean function', 1, 9, 67, 'Gate', 2012, 5, 0, 0),
(1218, 'The decimal value 0.5 in IEEE single precision floating point representation has', 1, 9, 75, 'Gate', 2012, 5, 0, 0),
(1219, 'The amount of ROM needed to implement a 4 bit multiplier is', 1, 9, 62, 'Gate', 2012, 5, 0, 0),
(1220, 'What is the minimal form of the karnaugh map shown below? Assume that X denotes a don\'t care term <br/><img src=\"./image/question/1220.jpg\"/><br/>', 1, 9, 67, 'Gate', 2012, 5, 0, 0),
(1221, 'The simplified SOP (sum of product) form of the boolean expression <br/><img src=\"./image/question/1221.jpg\"/><br/>', 1, 9, 67, 'Gate', 2011, 5, 0, 0),
(1222, 'The minimum number of D flip-flops needed to design a mod-258 counter is', 2, 9, 77, 'Gate', 2011, 5, 0, 0),
(1223, 'Which one of the following circuits is NOT equivalent to a 2-input XNOR (exclusive NOR) gate?', 1, 9, 76, 'Gate', 2011, 5, 0, 0),
(1224, 'Consider the following circuit involving three D-type flip-flops used in a certail type of counter configuration. <br/><img src=\"./image/question/1224.jpg\"/><br/> If all the flip-flops were reset to O at power on, what is the total number of distinct outputs *states) represented by PQR generated by the counter?    ', 2, 9, 77, 'Gate', 2011, 5, 0, 0),
(1225, 'Consider the following circuit involving three D-type flip-flops used in a certail type of counter configuration. <br/><img src=\"./image/question/1224.jpg\"/><br/> If at some instance prior to the occurrence of the clock edge, P, Q and R have a value 0, 1 and 0 respectively, what shall be the value of PQR after the clock edge?', 1, 9, 77, 'Gate', 2011, 5, 0, 0),
(1226, 'The minterm expansion of <img src=\"./image/question/1226.jpg\"/>', 1, 9, 67, 'Gate', 2010, 5, 0, 0),
(1227, 'A main memory unit with a capacity of 4 megabytes is built using 1M 1-bit DRAM chips. Each DRAM chip has 1K rows of cells with 1K cells in each row. The time taken for a single refresh operation is 100 nanoseconds. The time required to perform one refresh operation on all the cells in the memory unit is', 1, 9, 62, 'Gate', 2010, 5, 0, 0),
(1228, 'P is a 16-bit signed integer. The 2\'s complement representation of P is (F87B)<sub>16</sub>. The 2\'s complement representation of 8*P is', 1, 9, 75, 'Gate', 2010, 5, 0, 0),
(1229, 'The Boolean expression for the output \'f\' of the multiplexer shown below is <br/><img src=\"./image/question/1229.jpg\"/>', 1, 9, 62, 'Gate', 2010, 5, 0, 0),
(1230, 'What is the Boolean expression for the output f of the combinational logic circuit of NOR gates given below?  <br/><img src=\"./image/question/1230.jpg\"/>', 1, 9, 76, 'Gate', 2010, 5, 0, 0),
(1231, 'In the sequential circuit shown below,if the initial value of the output Q1Q0 is 00,what are the next four values of Q1Q0?  <br/><img src=\"./image/question/1231.jpg\"/>', 1, 9, 77, 'Gate', 2010, 5, 0, 0),
(1232, '(1217)<sub>8</sub> is equivalent to', 1, 9, 75, 'Gate', 2010, 5, 0, 0),
(1233, 'What is the minimum number of gates required to implement the Boolean function (AB C) if we have to use only 2-input NOR gates?', 2, 9, 76, 'Gate', 2009, 5, 0, 0),
(1234, 'How many 32K × 1 RAM chips are needed to provide a memory capacity of 256K-bytes?', 2, 9, 62, 'Gate', 2009, 5, 0, 0),
(1235, 'In the IEEE floating point representation, the hexadecimal value 0×00000000 corresponds to', 1, 9, 75, 'Gate', 2008, 5, 0, 0),
(1236, 'In the Karnaugh map shown below, X denotes a don’t care term. What is the minimal form of the function represented by the Karnaugh map?   <br/><img src=\"./image/question/1236.jpg\"/>', 1, 9, 75, 'Gate', 2008, 5, 0, 0),
(1237, 'Let r denote number system radix. The only value(s) of r that satisfy the equation <img src=\"./image/question/1237.jpg\"/>', 1, 9, 75, 'Gate', 2008, 5, 0, 0),
(1238, 'If P, Q, R are Boolean variables, then (p+q\')(p.q\' + p.r)(p\'.r\'+q\') Simplifies to', 1, 9, 67, 'Gate', 2008, 5, 0, 0),
(1239, 'A set of Boolean connectives is functionally complete if all Boolean functions can be synthesized using those. Which of the following sets of connectives is NOT functionally complete?', 1, 9, 67, 'Gate', 2008, 5, 0, 0),
(1240, 'The following bit pattern represents a floating point number in IEEE 754 single precision format 1 10000011 101000000000000000000000 The value of the number in decimal form is', 1, 9, 75, 'Gate', 2008, 5, 0, 0),
(1241, 'Consider the following Boolean function of four variables f(A, B, C, D) = Σ(2, 3, 6, 7, 8, 9, 10, 11, 12, 13) The function is', 1, 9, 67, 'Gate', 2008, 5, 0, 0),
(1242, 'What Boolean function does the circuit below realize ? <br/><img src=\"./image/question/1242.jpg\"/>', 1, 9, 62, 'Gate', 2008, 5, 0, 0),
(1243, 'A processor that has carry, overflow and sign flag bits as part of its program status word (PSW) performs addition of the following two 2\'s complement numbers 01001101 and 11101001. After the execution of this addition operation, the status of the carry, overflow and sign flags, respectively will be:', 1, 9, 75, 'Gate', 2008, 5, 0, 0),
(1244, 'Consider the following state diagram and its realization by a JK flip flop<br/><img src=\"./image/question/1244.jpg\"/><br/>The combinational circuit generates J and K in terms of x, y and Q. The Boolean expressions for J and K are :    ', 1, 9, 77, 'Gate', 2008, 5, 0, 0),
(1245, 'The two numbers given below are multiplied using the Booth\'s algorithm. \r\n<pre>\r\nMultiplicand : 0101 1010 1110 1110 \r\nMultiplier: 0111 0111 1011 1101 \r\n</pre>\r\nHow many additions/Subtractions are required for the multiplication of the above two numbers?  ', 1, 9, 75, 'Gate', 2008, 5, 0, 0),
(1246, 'What is the maximum number of different Boolean functions involving n Boolean variables? ', 1, 9, 75, 'Gate', 2007, 5, 0, 0),
(1247, 'How many 3-to-8 line decoders with an enable input are needed to construct a 6-to-64 line decoder without using any other logic gates?', 2, 9, 62, 'Gate', 2007, 5, 0, 0),
(1248, 'Consider the following Boolean function of four variables: f(w,x,y,z) = ∑(1,3,4,6,9,11,12,14) The function is:', 1, 9, 67, 'Gate', 2007, 5, 0, 0),
(1249, 'Let f(w, x, y, z) = ∑(0, 4, 5, 7, 8, 9, 13, 15). Which of the following expressions are equivalent to f?', 3, 9, 67, 'Gate', 2007, 5, 0, 0),
(1250, 'Define the connective * for the Boolean variables X and Y as: \r\n<pre>\r\nX * Y = XY + X\' Y\'. \r\nLet Z = X * Y.\r\n</pre>\r\nConsider the following expressions P, Q and R.\r\n<pre>\r\nP: X = Y⋆Z \r\nQ: Y = X⋆Z \r\nR: X⋆Y⋆Z=1\r\n</pre>\r\nWhich of the following is TRUE?  ', 1, 9, 67, 'Gate', 2007, 5, 0, 0);
INSERT INTO `question` (`q_id`, `question`, `type`, `sub_id`, `topic_id`, `source`, `year`, `life`, `attampt`, `correct`) VALUES
(1251, 'Suppose only one multiplexer and one inverter are allowed to be used to implement any Boolean function of n variables. What is the minimum size of the multiplexer needed?', 1, 9, 62, 'Gate', 2007, 5, 0, 0),
(1252, 'In a look-ahead carry generator, the carry generate function Gi and the carry propagate function P<sub>i</sub> for inputs A<sub>i</sub> and B<sub>i</sub> are given by:\r\n<pre>\r\nP<sub>i</sub> = A<sub>i</sub> ⨁ B<sub>i</sub> and G<sub>i</sub> = A<sub>i</sub>B<sub>i</sub>\r\n</pre>\r\nThe expressions for the sum bit S<sub>i</sub> and the carry bit C<sub>i+1</sub> of the look-ahead carry adder are given by:\r\n<pre>\r\nS<sub>i</sub> = P<sub>i</sub> ⨁ C<sub>i</sub> and C<sub>i+1</sub> = G<sub>i</sub> + P<sub>i</sub>C<sub>i</sub> , where C<sub>0</sub> is the input carry.\r\n</pre>\r\nConsider a two-level logic implementation of the look-ahead carry generator. Assume that all P<sub>i</sub> and G<sub>i</sub> are available for the carry generator circuit and that the AND and OR gates can have any number of inputs. The number of AND gates and OR gates needed to implement the look-ahead carry generator for a 4-bit adder with S<sub>3</sub>, S<sub>2</sub>, S<sub>1</sub>, S<sub>0</sub> and C<sub>4</sub> as its outputs are respectively:', 1, 9, 62, 'Gate', 2007, 5, 0, 0),
(1253, 'Assume that the counter and gate delays are negligible. If the counter starts at 0, then it cycles through the following sequence:<br/><img src=\"./image/question/1253.jpg\"/><br/><img src=\"./image/question/1253.1.jpg\"/><br/>The control signal functions of a 4-bit binary counter are given below (where X is “don’t care”) The counter is connected as follows:  ', 1, 9, 77, 'Gate', 2007, 5, 0, 0),
(1254, 'Which of the following is TRUE about formulae in Conjunctive Normal Form?', 1, 9, 76, 'Gate', 2007, 5, 0, 0),
(1255, 'Which of the following input sequences for a cross-coupled R-S flip-flop realized with two NAND gates may lead to an oscillation?', 1, 9, 77, 'Gate', 2007, 5, 0, 0),
(1256, 'The following circuit implements a two-input AND gate using two 2-1 multiplexers. What are the values of X<sub>1</sub>, X<sub>2</sub>, X<sub>3</sub> ? <br/><img src=\"./image/question/1256.jpg\"/><br/>', 1, 9, 62, 'Gate', 2007, 5, 0, 0),
(1257, 'The following expression was to be realized using 2-input AND and OR gates. However, during the fabrication all 2-input AND gates were mistakenly substituted by 2-input NAND gates. (a.b).c + (a\'.c).d + (b.c).d + a. d What is the function finally realized ?  ', 1, 9, 67, 'Gate', 2007, 5, 0, 0),
(1258, 'What is the final value stored in the linear feedback shift register if the input is 101101?  <br/><img src=\"./image/question/1258.jpg\"/><br/>', 1, 9, 77, 'Gate', 2007, 5, 0, 0),
(1259, '(C012.25)<sub>H</sub> – (10111001110.101)<sub>B</sub> =', 1, 9, 75, 'Gate', 2007, 5, 0, 0),
(1260, 'The line T in the following figure is permanently connected to the ground.  <br/><img src=\"./image/question/1260.jpg\"/><br/>Which of the following inputs (X1 X2 X3 X4) will detect the fault ?<br/>(The line T in the following figure is permanently connected to the ground)  ', 1, 9, 62, 'Gate', 2007, 5, 0, 0),
(1261, 'Consider the following expression ad\' + (ac)\' + bc\'d Which of the following expressions does not correspond to the Karnaugh Map obtained for the above expression??', 1, 9, 67, 'Gate', 2007, 5, 0, 0),
(1262, 'You are given a free running clock with a duty cycle of 50% and a digital waveform f which changes only at the negative edge of the clock. Which one of the following circuits (using clocked D flip-flops) will delay the phase of f by 180°?', 1, 9, 77, 'Gate', 2007, 5, 0, 0),
(1263, 'We consider the addition of two 2’s complement numbers b<sub>n-1</sub>b<sub>n-2</sub>...b<sub>0</sub> and a<sub>n-1</sub>a<sub>n-2</sub>…a<sub>0</sub>. A binary adder for adding unsigned binary numbers is used to add the two numbers. The sum is denoted by c<sub>n-1</sub>c<sub>n-2</sub>c<sub>0</sub> and the carry-out by cout. Which one of the following options correctly identifies the overflow condition?  ', 1, 9, 62, 'Gate', 2007, 5, 0, 0),
(1264, 'Consider numbers represented in 4-bit gray code. Let h3h2h1h0 be the gray code representation of a number n and let g<sub>3</sub>g<sub>2</sub>g<sub>1</sub>g<sub>0</sub> be the gray code of (n 1) (modulo 16) value of the number. Which one of the following functions is correct?', 1, 9, 75, 'Gate', 2007, 5, 0, 0),
(1265, 'Consider a Boolean function f (w, x, y, z). Suppose that exactly one of its inputs is allowed to change at a time. If the function happens to be true for two input vectors i<sub>1</sub> = 〈w<sub>1</sub>, x<sub>1</sub>, y<sub>1</sub>, z<sub>1</sub>〉 and i<sub>2</sub> = 〈w<sub>2</sub>, x<sub>2</sub>, y<sub>2</sub>, z<sub>2</sub>〉, we would like the function to remain true as the input changes from vectors i<sub>1</sub> to i<sub>2</sub> (i<sub>1</sub> and i<sub>2</sub> differ in exactly one bit position), without becoming false momentarily. Let f(w, x, y, z) = ∑(5, 7, 11, 12, 13, 15). Which of the following cube covers of f will ensure that the required property is satisfied?', 1, 9, 75, 'Gate', 2007, 5, 0, 0),
(1266, '<img src=\"./image/question/1266.jpg\"/><br/>Consider the circuit above. Which one of the following options correctly represents f(x,y,z)?    ', 1, 9, 62, 'Gate', 2006, 5, 0, 0),
(1267, 'Given two three bit numbers a<sub>2</sub>a<sub>1</sub>a<sub>0</sub> and b<sub>2</sub>b<sub>1</sub>b<sub>0</sub> and c, the carry in, the function that represents the carry generate function when these two numbers are added is:', 1, 9, 62, 'Gate', 2006, 5, 0, 0),
(1268, 'Consider the circuit in the diagram. The ⊕ operator represents Ex-OR. The D flipflops are initialized to zeroes (cleared). <br/><img src=\"./image/question/1268.jpg\"/><br/>The following data: 100110000 is supplied to the “data” terminal in nine clock cycles. After that the values of q<sub>2</sub>q<sub>1</sub>q<sub>0</sub> are:', 1, 9, 77, 'Gate', 2006, 5, 0, 0),
(1269, 'The addition of 4-bit, two’s complement, binary numbers 1101 and 0100 results in', 1, 9, 75, 'Gate', 2006, 5, 0, 0),
(1270, 'The boolean function for a combinational circuit with four inputs is represented by the following Karnaugh map. <br/><img src=\"./image/question/1270.jpg\"/><br/>Which of the product terms given below is an essential prime implicant of the function?', 1, 9, 67, 'Gate', 2006, 5, 0, 0),
(1271, 'The majority function is a Boolean function f(x, y, z) that takes the value 1 whenever a majority of the variables x, y, z and 1. In the circuit diagram for the majority function shown below, the logic gates for the boxes labeled P and Q are, respectively,  <br/><img src=\"./image/question/1271.jpg\"/>', 1, 9, 62, 'Gate', 2006, 5, 0, 0),
(1272, 'When multiplicand Y is multiplied by multiplier X = xn - 1xn-2 ....x0 using bit-pair recoding in Booth\'s algorithm, partial products are generated according to the following table.  <br/><img src=\"./image/question/1272.jpg\"/><br/> The partial products for rows 5 and 8 are ', 1, 9, 75, 'Gate', 2006, 5, 0, 0),
(1273, ' Consider the following circuit <br/><img src=\"./image/question/1273.jpg\"/><br/>  Which one of the foloowing is TRUE? ', 1, 9, 62, 'Gate', 2005, 5, 0, 0),
(1274, 'The range of integers that can be represented by an n bit 2\'s complement number system is:', 1, 9, 75, 'Gate', 2005, 5, 0, 0),
(1275, 'Consider the following floating point format <br/><img src=\"./image/question/1275.jpg\"/><br/> Mantissa is a pure fraction in sign-magnitude form. The decimal number 0.239 × 2<sup>13</sup> has the following hexadecimal representation (without normalization and rounding off :  ', 1, 9, 75, 'Gate', 2005, 5, 0, 0),
(1276, 'Consider the following floating point format <br/><img src=\"./image/question/1275.jpg\"/><br/>Mantissa is a pure fraction in sign-magnitude form. The normalized representation for the above format is specified as follows. The mantissa has an implicit 1 preceding the binary (radix) point. Assume that only 0\'s are padded in while shifting a field. The normalized representation of the above number (0.239 × 2<sup>13</sup>) is:', 1, 9, 75, 'Gate', 2005, 5, 0, 0),
(1277, 'Consider the following circuit<br/><img src=\"./image/question/1276.jpg\"/><br/> The flip-flops are positive edge triggered D FFs. Each state is designated as a two bit string Q0Q1. Let the initial state be 00. The state transition sequence is:   ', 1, 9, 77, 'Gate', 2005, 5, 0, 0),
(1278, 'Consider the following circuit involving a positive edge triggered D FF.<br/><img src=\"./image/question/1278.jpg\"/><br/>Consider the following timing diagram. Let Ai represent the logic level on the line A in the i-th clock period. <img src=\"./image/question/1278.1.jpg\"/><br/>Let A\' represent the complement of A. The correct output sequence on Y over the clock periods 1 through 5 is', 1, 9, 77, 'Gate', 2005, 5, 0, 0),
(1279, 'The hexadecimal representation of 657<sub>8</sub> is', 1, 9, 75, 'Gate', 2005, 5, 0, 0),
(1280, 'The switching expression corresponding to f(A, B, C, D) = Σ (1, 4, 5, 9, 11, 12) is: ', 1, 9, 67, 'Gate', 2005, 5, 0, 0),
(1281, 'A two-way switch has three terminals a, b and c. In ON position (logic value 1), a is connected to b, and in OFF position, a is connected to c. Two of these two-way switches S1 and S2 are connected to a bulb as shown below. <br/><img src=\"./image/question/1281.jpg\"/><br/>Which of the following expressions, if true, will always result in the lighting of the bulb ?', 1, 9, 62, 'Gate', 2005, 5, 0, 0),
(1282, 'How many pulses are needed to change the contents of a 8-bit up counter from 10101100 to 00100111 (rightmost bit is the LSB)?', 2, 9, 77, 'Gate', 2005, 5, 0, 0),
(1283, 'A line L in a circuit is said to have a stuck-at-0 fault if the line permanently has a logic value 0. Similarly a line L in a circuit is said to have a stuck-at-1 fault if the line permanently has a logic value 1. A circuit is said to have a multiple stuck-at fault if one or more lines have stuck at faults. The total number of distinct multiple stuck-at faults possible in a circuit with N lines is', 1, 9, 77, 'Gate', 2005, 5, 0, 0),
(1284, '(34.4)<sub>8</sub> × (23.4)<sub>8</sub> evaluates to', 1, 9, 77, 'Gate', 2005, 5, 0, 0),
(1285, 'The circuit shown below implements a 2-input NOR gate using two 2-4 MUX (control signal 1 selects the upper input). What are the values of signals x, y and z? <br/><img src=\"./image/question/1285.jpg\"/>', 1, 9, 77, 'Gate', 2005, 5, 0, 0),
(1286, 'n instruction set of a processor has 125 signals which can be divided into 5 groups of mutually exclusive signals as follows:\r\n<pre>\r\nGroup 1 : 20 signals,\r\nGroup 2 : 70 signals, \r\nGroup 3 : 2 signals, \r\nGroup 4 : 10 signals, \r\nGroup 5 : 23 signals.\r\n</pre>\r\nHow many bits of the control words can be saved by using vertical microprogramming over horizontal microprogramming?', 2, 4, 65, 'Gate', 2005, 5, 0, 0),
(1287, 'The Boolean function x\'y\' + xy + x\'y is equivalent to', 1, 9, 67, 'Gate', 2004, 5, 0, 0),
(1288, 'In an SR latch made by cross-coupling two NAND gates, if both S and R inputs are set to 0, then it will result in', 1, 9, 77, 'Gate', 2004, 5, 0, 0),
(1289, 'If 73<sub>x</sub> (in base-x number system) is equal to 54<sub>y</sub> (in base-y number system), the possible values of x and y are', 1, 9, 75, 'Gate', 2004, 5, 0, 0),
(1290, '<img src=\"./image/question/1290.jpg\"/>', 1, 9, 75, 'Gate', 2004, 5, 0, 0),
(1291, 'A circuit outputs a digit in the form of 4 bits. 0 is represented by 0000, 1 by 0001, ..., 9 by 1001. A combinational circuit is to be designed which takes these 4 bits as input and outputs 1 if the digit ≥ 5, and 0 otherwise. If only AND, OR and NOT gates may be used, what is the minimum number of gates required?', 2, 9, 62, 'Gate', 2004, 5, 0, 0),
(1292, 'Consider a multiplexer with X and Y as data inputs and Z as control input. Z = 0 selects input X, and Z = 1 selects input Y. What are the connections required to realize the 2-variable Boolean function f = T + R, without using any additional hardware?  ', 1, 9, 62, 'Gate', 2004, 5, 0, 0),
(1293, '<img src=\"./image/question/1292.jpg\"/>', 1, 9, 77, 'Gate', 2004, 5, 0, 0),
(1294, 'A 4-bit carry lookahead adder, which adds two 4-bit numbers, is designed using AND, OR, NOT, NAND, NOR gates only. Assuming that all the inputs are available in both complemented and uncomplemented forms and the delay of each gate is one time unit, what is the overall propagation delay of the adder? Assume that the carry network has been implemented using two-level AND-OR logic.', 1, 9, 62, 'Gate', 2004, 5, 0, 0),
(1295, 'Let A = 1111 1010 and B = 0000 1010 be two 8-bit 2\'s complement numbers. Their product in 2\'s complement is', 1, 9, 75, 'Gate', 2004, 5, 0, 0),
(1296, 'What is the minimum number of NAND gates required to implement a 2-input EXCLUSIVE-OR function without using any other logic gate?', 2, 9, 76, 'Gate', 2004, 5, 0, 0),
(1297, 'What is the minimum size of ROM required to store the complete truth table of an 8-bit × 8-bit multiplier?', 1, 9, 62, 'Gate', 2004, 5, 0, 0),
(1298, 'Using a 4-bit 2’s complement arithmetic, which of the following additions will result in an overflow? (i) 1100 + 1100 (ii) 0011 + 0111 (iii) 1111 + 0111', 1, 9, 62, 'Gate', 2004, 5, 0, 0),
(1299, 'The number (123456)<sub>8</sub> is equivalent to', 1, 9, 75, 'Gate', 2004, 5, 0, 0),
(1300, 'The function AB’C + A’BC + ABC’ + A’B’C + AB’C’ is equivalent to', 1, 9, 67, 'Gate', 2004, 5, 0, 0),
(1301, 'Consider a parity check code with three data bits and four parity check bits. Three of the code words are 0101011, 1001101 and 1110001. Which of the following are also code words? \r\n<pre>\r\nI. 0010111             II. 0110110         III. 1011010             IV. 0111010\r\n</pre>', 1, 9, 75, 'Gate', 2004, 5, 0, 0),
(1302, 'Assuming all numbers are in 2’s complement representation, which of the following numbers is divisible by 11111011?  ', 1, 9, 75, 'Gate', 2003, 5, 0, 0),
(1303, 'Consider an array multiplier for multiplying two n bit numbers. If each gate in the circuit has a unit delay, the total delay of the multiplier is  ', 1, 9, 62, 'Gate', 2003, 5, 0, 0),
(1304, 'The following is a scheme for floating point number representation using 16 bits.\r\n<pre>\r\nBit position 15           14 . . . 9            8 . . . . .0\r\n       s                      e                      m\r\n     Sign                  Exponent               Mantissa\r\n</pre>\r\nLet s,e, and m be the numbers represented in binary in the sign, exponent, and mantissa fields respectively. Then the floating point number represented is: <br/>\r\n<img src=\"./image/question/1304.jpg\"/><br/>\r\nWhat is the maximum difference between two successive real numbers representable in this system?  ', 1, 9, 75, 'Gate', 2003, 5, 0, 0),
(1305, 'The exponent of a floating-point number is represented in excess-N code so that:', 1, 9, 75, 'Gate', 1987, 5, 0, 0),
(1306, 'The output F of the below multiplexer circuit can represented by<br/><img src=\"./image/question/1306.jpg\"/>', 1, 9, 62, 'Gate', 1987, 5, 0, 0),
(1307, 'The above circuit produces the output sequence: <br/><img src=\"./image/question/1307.jpg\"/>', 1, 9, 77, 'Gate', 1987, 5, 0, 0),
(1308, 'The total number of Boolean functions which can be realised with four variables is:', 2, 9, 75, 'Gate', 1987, 5, 0, 0),
(1309, '<img src=\"./image/question/1310.jpg\"/>', 1, 9, 62, 'Gate', 1990, 5, 0, 0),
(1310, '<img src=\"./image/question/1309.jpg\"/>', 1, 9, 62, 'Gate', 1990, 5, 0, 0),
(1311, 'Advantage of synchronous circuit over asynchronous circuits is', 1, 9, 77, 'Gate', 1991, 5, 0, 0),
(1312, '<img src=\"./image/question/1312.jpg\"/>', 2, 9, 75, 'Gate', 1991, 5, 0, 0),
(1313, '<img src=\"./image/question/1313.jpg\"/>', 1, 9, 77, 'Gate', 2001, 5, 0, 0),
(1314, '<img src=\"./image/question/1314.jpg\"/>', 1, 9, 75, 'Gate', 2001, 5, 0, 0),
(1315, 'The 2’s complement representation of (-539)<sub>10</sub> in hexadecimal is', 1, 9, 75, 'Gate', 2001, 5, 0, 0),
(1316, 'The operation which is commutative but not associative is:  ', 1, 9, 76, 'Gate', 1992, 5, 0, 0),
(1317, 'All digital circuits can be realized using only', 3, 9, 76, 'Gate', 1992, 5, 0, 0),
(1318, '<img src=\"./image/question/1318.jpg\"/>', 1, 9, 67, 'Gate', 2001, 5, 0, 0),
(1319, '<img src=\"./image/question/1319.jpg\"/>', 1, 9, 77, 'Gate', 2001, 5, 0, 0),
(1320, '<img src=\"./image/question/1320.jpg\"/>', 3, 9, 77, 'Gate', 2001, 5, 0, 0),
(1321, 'Both’s algorithm for integer multiplication gives worst performance when the multiplier pattern is', 1, 9, 75, 'Gate', 1996, 5, 0, 0),
(1322, 'A ROM is sued to store the table for multiplication of two 8-bit unsigned integers. The size of ROM required is', 1, 9, 62, 'Gate', 1996, 5, 0, 0),
(1323, 'Suppose the domain set of an attribute consists of signed four digit numbers. What is the percentage of reduction in storage space of this attribute if  it is stored as an integer rather than in character form?', 1, 9, 75, 'Gate', 1998, 5, 0, 0),
(1324, 'A multiplexor with a 4 bit data select input is a', 1, 9, 62, 'Gate', 1998, 5, 0, 0),
(1325, 'Zero has two representations in', 3, 9, 75, 'Gate', 1999, 5, 0, 0),
(1326, 'The number of full and half-adders required to add 16-bit numbers is', 1, 9, 62, 'Gate', 1999, 5, 0, 0),
(1327, 'The maximum gate delay for any output to appear in an array multiplier for multiplying two n bit number is', 1, 9, 75, 'Gate', 1999, 5, 0, 0),
(1328, 'Booth’s coding in 8 bits for the decimal number –57 is', 1, 9, 75, 'Gate', 1999, 5, 0, 0),
(1329, 'The number 43 in 2’s complement representation is', 1, 9, 75, 'Gate', 2000, 5, 0, 0),
(1330, 'Let f(A,B) = A\'+B. Simplified expression for function f (f (x + y, y), z) is', 1, 9, 67, 'Gate', 2002, 5, 0, 0),
(1331, 'In 2’s complement addition, overflow', 1, 9, 75, 'Gate', 2002, 5, 0, 0),
(1332, 'Sign extension is a step in', 1, 9, 75, 'Gate', 2002, 5, 0, 0),
(1333, 'The 2’s complement representation of the decimal value -15 is', 1, 9, 75, 'Gate', 2002, 5, 0, 0),
(1334, 'The decimal value 0.25', 1, 9, 75, 'Gate', 2002, 5, 0, 0),
(1335, 'The number of flip-flops required to construct a binary modulo N counter is __________', 1, 9, 77, 'Gate', 1994, 5, 0, 0),
(1336, '<img src=\"./image/question/1336.jpg\"/>', 2, 9, 75, 'Gate', 1995, 5, 0, 0),
(1337, '<img src=\"./image/question/1337.jpg\"/>', 1, 9, 67, 'Gate', 1995, 5, 0, 0),
(1338, '<img src=\"./image/question/1338.jpg\"/>', 1, 9, 62, 'Gate', 1996, 5, 0, 0),
(1339, 'Consider the circuit in the figure below which has a 4 bit binary number b<sub>3</sub>b<sub>2</sub>b<sub>1</sub>b<sub>0</sub> as input and a five bit binary number d<sub>4</sub>d<sub>3</sub>d<sub>2</sub>d<sub>1</sub>d<sub>0</sub> as output.<br/><img src=\"./image/question/1339.jpg\"/>', 1, 9, 62, 'Gate', 1996, 5, 0, 0),
(1340, '<img src=\"./image/question/1340.jpg\"/>', 1, 9, 75, 'Gate', 1996, 5, 0, 0),
(1341, '<img src=\"./image/question/1341.jpg\"/>', 1, 9, 62, 'Gate', 1997, 5, 0, 0),
(1342, '<img src=\"./image/question/1342.jpg\"/>', 2, 9, 75, 'Gate', 1997, 5, 0, 0),
(1343, '<img src=\"./image/question/1343.jpg\"/>', 1, 9, 67, 'Gate', 1997, 5, 0, 0),
(1344, '<img src=\"./image/question/1344.jpg\"/>', 1, 9, 67, 'Gate', 1997, 5, 0, 0),
(1345, '<img src=\"./image/question/1345.jpg\"/>', 1, 9, 67, 'Gate', 1998, 5, 0, 0),
(1346, '<img src=\"./image/question/1346.jpg\"/>', 1, 9, 67, 'Gate', 1999, 5, 0, 0),
(1347, '<img src=\"./image/question/1347.jpg\"/>', 1, 9, 76, 'Gate', 1999, 5, 0, 0),
(1348, '<img src=\"./image/question/1348.jpg\"/>', 1, 9, 75, 'Gate', 2000, 5, 0, 0),
(1349, '<img src=\"./image/question/1349.jpg\"/>', 1, 9, 67, 'Gate', 2000, 5, 0, 0),
(1350, '<img src=\"./image/question/1350.jpg\"/>', 1, 9, 62, 'Gate', 2000, 5, 0, 0),
(1351, '<img src=\"./image/question/1351.jpg\"/>', 1, 9, 62, 'Gate', 2002, 5, 0, 0),
(1352, '<img src=\"./image/question/1352.jpg\"/>', 1, 9, 67, 'Gate', 2002, 5, 0, 0),
(1353, 'Consider the following circuit composed of XOR gates and non-inverting buffers. <br/><img src=\"./image/question/1353.jpg\"/><br/>The non-inverting buffers have delays d1 = 2 ns and d2 = 4 ns as shown in the figure. Both XOR gates and all wires have zero delay. Assume that all gate inputs, outputs and wires are stable at logic level 0 at time 0. If the following waveform is applied at input A, how many transition(s) (change of logic levels) occur(s) at B during the interval from 0 to 10 ns ? <img src=\"./image/question/1353.1.jpg\"/><br/>', 2, 9, 76, 'Gate', 2003, 5, 0, 0),
(1354, 'Consider the ALU shown below <br/>\r\n<img src=\"./image/question/1354.jpg\"/><br/>\r\nIf the operands are in 2\'s complement representation, which of the following operations can be performed by suitably setting the control lines K and C0 only (+ and - denote addition and subtraction respectively) ?', 1, 9, 76, 'Gate', 2003, 5, 0, 0),
(1355, 'The literal count of a boolean expression is the sum of the number of times each literal appears in the expression. For example, the literal count of (xy + xz\') is 4. What are the minimum possible literal counts of the product-of-sum and sum-of-product representations respectively of the function given by the following Karnaugh map ? Here, X denotes \"don\'t care\"<br/>\r\n<img src=\"./image/question/1355.jpg\"/>', 1, 9, 67, 'Gate', 2003, 5, 0, 0),
(1356, 'A 1-input, 2-output synchronous sequential circuit behaves as follows : Let zk, nk denote the number of 0\'s and 1\'s respectively in initial k bits of the input (zk + nk = k). The circuit outputs 00 until one of the following conditions holds.\r\n<pre>\r\n    zk - nk = 2. In this case, the output at the k-th and \r\n                 all subsequent clock ticks is 10.\r\n    nk - zk = 2. In this case, the output at the k-th and\r\n                 all subsequent clock ticks is 01.\r\n</pre>\r\nWhat is the minimum number of states required in the state transition graph of the above circuit?', 2, 9, 77, 'Gate', 2003, 5, 0, 0),
(1357, 'A certain processor uses a fully associative cache of size 16 kB. The cache block size is 16 bytes. Assume that the main memory is byte addressable and uses a 32-bit address. How many bits are required for the Tag and the Index fields resectively in the addresses generated by the processor?', 1, 4, 36, 'Gate', 2019, 5, 0, 0),
(1358, 'A certain processor deploys a single-level cache. The cache block size is 8 words and the word size is 4 bytes. The memory system uses a 60-MHz clock. To service a cache miss, the memory controller first takes 1 cycle to accept the starting address of the block, it then takes 3 cycles to fetch all the eight words of the block, and finally transmits the words of the requested block at the rate of 1 word per cycle. The maximum bandwidth for the memory system when the program running on the processor issues a series of read operations is ______ × 10<sup>6</sup> bytes/sec.', 2, 4, 36, 'Gate', 2019, 5, 0, 0),
(1359, 'Which of the following statements is/are TRUE?  ', 3, 4, 71, 'Gate', 2020, 5, 0, 0),
(1360, 'A direct mapped cache memory of 1 MB has a block ize of 256 bytes. The cache has an access time of 3 ns and a hit rate of 94%. During a cache miss, it takes 20 ns to bring the first word of a block from the main memory, while each subsequent word takes 5 ns. The word size is 64 bits. The average memory access time in ns (round off to 1 decimal place) is _____.', 2, 4, 36, 'Gate', 2020, 5, 0, 0),
(1361, 'Consider a non-pipelined processor operating at 2.5 GHz. It takes 5 clock cycles to complete an instruction. You are going to make a 5-stage pipeline out of this processor. Overheads associated with pipelining force you to operate the pipelined processor at 2 GHz. In a given program, assume that 30% are memory instructions, 60% are ALU instructions and the rest are branch instructions. 5% of the memory instructions cause stalls of 50 clock cycles each due to cache misses and 50% of the branch instructions cause stalls of 2 cycles each. Assume that there are no stalls associated with the execution of ALU instructions. For this program, the speedup achieved by the pipelined processor over the non-pipelined processor (round off to 2 decimal places) is _____.', 2, 4, 35, 'Gate', 2020, 5, 0, 0),
(1362, 'A computer system with a word length of 32 bits has a 16 MB byte-addressable main memory and a 64 KB, 4-way set associative cache memory with a block size of 256 bytes. Consider the following four physical addresses represented in hexadecimal notation.\r\n<pre>\r\nA1 = 0x42C8A4, A2 = 0x546888, A3 = 0x6A289C, A4 = 0x5E4880\r\n</pre>\r\nWhich one of the following is TRUE? ', 1, 4, 36, 'Gate', 2020, 5, 0, 0),
(1363, 'A processor has 64 registers and uses 16-bit instruction format. It has two types of instructions: I-type and R-type. Each I-type instruction contains an opcode, a register name, and a 4-bit immediate value. Each R-type instruction contains an opcode and two register names. If there are 8 distinct I-type opcodes, then the maximum number of distinct R-type opcodes is _____. ', 2, 4, 65, 'Gate', 2020, 5, 0, 0),
(1364, 'Which of the characteristics below are used in the design of a RISC processor?', 3, 4, 65, 'Gate', 2018, 5, 0, 0),
(1365, 'A 32-bit wide main memory unit with a capacity of 1 GB is built using 256M×4-bit DRAM chips. The number of rows of memory cells in the DRAM chip is 214. The time taken to perform one refresh operation is 50 nanoseconds. The refresh period is 2 milliseconds. The percentage (rounded to the closest integer) of the time available for performing the memory read/write operations in the main memory unit is _________%.', 2, 4, 36, 'Gate', 2018, 5, 0, 0),
(1366, 'The following are some events that occur after a device controller issues an interrupt while process L is under execution.\r\n<pre>\r\n    (P) The processor pushes the process status of L onto the control stack.\r\n    (Q) The processor finishes the execution of the current instruction.\r\n    (R) The processor executes the interrupt service routine.\r\n    (S) The processor pops the process status of L from the control stack.\r\n    (T) The processor loads the new PC value based on the interrupt. \r\n</pre>', 1, 4, 71, 'Gate', 2018, 5, 0, 0),
(1367, 'The size of the physical address space of a processor is 2<sup>P</sup> bytes. The word length is 2<sup>W</sup> bytes. The capacity of cache memory is 2<sup>N</sup> bytes. The size of each cache block is 2<sup>M</sup> words. For a K-way set-associative cache memory, the length (in number of bits) of the tag field is', 1, 4, 36, 'Gate', 2018, 5, 0, 0),
(1368, 'A processor has 16 integer registers (R0, R1, …, R15) and 64 floating point registers (F0, F1, …, F63). It uses a 2-byte instruction format. There are four categories of instructions: Type-1, Type-2, Type-3 and Type-4.Type-1 category consists of four instructions, each with 3 integer register operands (3Rs). Type-2 category consists of eight instructions, each with 2 floating point register operands (2Fs). Type-3 category consists of fourteen instructions, each with one integer register operand and one floating point register operand (1R 1F). Type-4 category consists of N instructions, each with a floating point register operand (1F).<br/>The maximum value of N is ________.', 2, 4, 65, 'Gate', 2018, 5, 0, 0),
(1369, 'The instruction pipeline of a RISC processor has the following stages: Instruction Fetch (IF), Instruction Decode (ID), Operand Fetch (OF), Perform Operation (PO) and Writeback (WB). The IF, ID, OF and WB stages take 1 clock cycle each for every instruction. Consider a sequence of 100 instructions. In the PO stage, 40 instructions take 3 clock cycles each, 35 instructions take 2 clock cycles each, and the remaining 25 instructions take 1 clock cycle each. Assume that there are no data hazards and no control hazards.<br/>The number of clock cycles required for completion of execution of the sequence of instructions is ___________.', 2, 4, 35, 'Gate', 2018, 5, 0, 0),
(1370, 'Consider the C struct defined below:\r\n<pre>\r\n    struct data   {\r\n        int marks [100];\r\n        char grade;\r\n        int cnumber;\r\n    };\r\n    struct data student;\r\n</pre>\r\nThe base address of student is available in register R1. The field student.grade can be accessed efficiently using', 1, 4, 64, 'Gate', 2017, 5, 0, 0),
(1371, 'Consider a two-level cache hierarchy with L1 and L2 caches. An application incurs 1.4 memory accesses per instruction on average. For this application, the miss rate of L1 cache is 0.1; the L2 cache experiences, on average, 7 misses per 1000 instructions. The miss rate of L2 expressed correct to two decimal places is __________.', 2, 4, 36, 'Gate', 2017, 5, 0, 0),
(1372, 'Instruction execution in a processor is divided into 5 stages, Instruction Fetch (IF), Instruction Decode (ID), Operand Fetch (OF), Execute (EX), and Write Back (WB). These stages take 5, 4, 20, 10 and 3 nanoseconds (ns) respectively. A pipelined implementation of the processor requires buffering between each pair of consecutive stages with a delay of 2 ns. Two pipelined implementations of the processor are contemplated:\r\n<pre>\r\n    (i) a naive pipeline implementation (NP) with 5 stages and\r\n    (ii) an efficient pipeline (EP) where the OF stage is divided into stages OF1 and OF2 with execution times of 12 ns and 8 ns respectively.\r\n</pre>\r\nThe speedup (correct to two decimal places) achieved by EP over NP in executing 20 independent instructions with no hazards is _________.', 2, 4, 35, 'Gate', 2017, 5, 0, 0),
(1373, 'Consider a 2-way set associative cache with 256 blocks and uses LRU replacement. Initially the cache is empty. Conflict misses are those misses which occur due to contention of multiple blocks for the same cache set. Compulsory misses occur due to first time access to the block. The following sequence of accesses to memory blocks\r\n<pre>\r\n     (0, 128, 256, 128, 0, 128, 256, 128, 1, 129, 257, 129, 1, 129, 257, 129)\r\n</pre>\r\nis repeated 10 times. The number of conflict misses experienced by the cache is __________.', 2, 4, 52, 'Gate', 2017, 5, 0, 0),
(1374, 'A cache memory unit with capacity of N words and block size of B words is to be designed. If it is designed as a direct mapped cache, the length of the TAG field is 10 bits. If the cache unit is now designed as a 16-way set-associative cache, the length of the TAG field is ___________ bits.', 2, 4, 36, 'Gate', 2017, 5, 0, 0),
(1375, 'In a two-level cache system, the access times of L1 and L2 caches are 1 and 8 clock cycles, respectively. The miss penalty from the L2 cache to main memory is 18 clock cycles. The miss rate of L1 cache is twice that of L2. The average memory access time (AMAT) of this cache system is 2 cycles. The miss rates of L1 and L2 respectively are:', 1, 4, 36, 'Gate', 2017, 5, 0, 0),
(1376, 'Consider a machine with a byte addressable main memory of 2<sup>32</sup> bytes divided into blocks of size 32 bytes. Assume that a direct mapped cache having 512 cache lines is used with this machine. The size of the tag field in bits is _____________.', 2, 4, 36, 'Gate', 2017, 5, 0, 0),
(1377, 'A processor can support a maximum memory of 4GB, where the memory is word-addressable (a word consists of two bytes). The size of the address bus of the processor is at least _________ bits.', 2, 4, 36, 'Gate', 2016, 5, 0, 0),
(1378, 'The size of the data count register of a DMA controller is 16 bits. The processor needs to transfer a ﬁle of 29,154 kilobytes from disk to main memory. The memory is byte addressable. The minimum number of times the DMA controller needs to get the control of the system bus from the processor to transfer the ﬁle from the disk to main memory is ________.', 2, 4, 71, 'Gate', 2016, 5, 0, 0),
(1379, 'The stage delays in a 4-stage pipeline are 800, 500, 400 and 300 picoseconds. The ﬁrst stage (with delay 800 picoseconds) is replaced with a functionally equivalent design involving two stages with respective delays 600 and 350 picoseconds. The throughput increase of the pipeline is ________ percent.', 2, 4, 35, 'Gate', 2016, 5, 0, 0),
(1380, 'A processor has 40 distinct instructions and 24 general purpose registers. A 32-bit instruction word has an opcode, two register operands and an immediate operand. The number of bits available for the immediate operand ﬁeld is __________.', 2, 4, 65, 'Gate', 2016, 5, 0, 0),
(1381, 'Suppose the functions F and G can be computed in 5 and 3 nanoseconds by functional units U<sub>F</sub> and U<sub>G</sub>, respectively. Given two instances of U<sub>F</sub> and two instances of U<sub>G</sub>, it is required to implement the computation F(G(X<sub>i</sub>)) for 1 ≤ i ≤ 10. Ignoring all other delays, the minimum time required to complete this computation is _________ nanoseconds.', 2, 4, 65, 'Gate', 2016, 5, 0, 0),
(1382, 'Consider a processor with 64 registers and an instruction set of size twelve. Each instruction has ﬁve distinct ﬁelds, namely, opcode, two source register identiﬁers, one destination register r identiﬁer, and a twelve-bit immediate value. Each instruction must be stored in memory in a byte-aligned fashion. If a program has 100 instructions, the amount of memory (in bytes) consumed by the program text is _________.', 2, 4, 65, 'Gate', 2016, 5, 0, 0),
(1383, 'The width of the physical address on a machine is 40 bits. The width of the tag ﬁeld in a 512 KB 8-way set associative cache is _________ bits.', 2, 4, 36, 'Gate', 2016, 5, 0, 0),
(1384, 'Consider a 3 GHz (gigahertz) processor with a three-stage pipeline and stage latencies τ<sub>1</sub>, τ<sub>2</sub>, τ<sub>3</sub> and such that τ<sub>1</sub>  = 3τ<sub>2</sub>/4 = 2τ<sub>3</sub>. If the longest pipeline stage is split into two pipeline stages of equal latency, the new frequency is _________ GHz, ignoring delays in the pipeline registers.', 2, 4, 35, 'Gate', 2016, 5, 0, 0),
(1385, 'For computers based on three-address instruction formats, each address field can be used to specify which of the following:\r\n<pre>\r\n    (S1) A memory operand\r\n    (S2) A processor register\r\n    (S3) An implied accumulator register \r\n</pre>', 1, 4, 36, 'Gate', 2015, 5, 0, 0),
(1386, 'Consider a non-pipelined processor with a clock rate of 2.5 gigahertz and average cycles per instruction of four. The same processor is upgraded to a pipelined processor with five stages; but due to the internal pipeline delay, the clock speed is reduced to 2 gigahertz. Assume that there are no stalls in the pipeline. The speed up achieved in this pipelined processor is __________.', 2, 4, 35, 'Gate', 2015, 5, 0, 0),
(1387, 'Consider a disk pack with a seek time of 4 milliseconds and rotational speed of 10000 rotations per minute (RPM). It has 600 sectors per track and each sector can store 512 bytes of data. Consider a file stored in the disk. The file contains 2000 sectors. Assume that every sector access necessitates a seek, and the average rotational latency for accessing each sector is half of the time for one complete rotation. The total time (in milliseconds) needed to read the entire file is _________. ', 2, 4, 16, 'Gate', 2015, 5, 0, 0),
(1388, 'Assume that for a certain processor, a read request takes 50 nanoseconds on a cache miss and 5 nanoseconds on a cache hit. Suppose while running a program, it was observed that 80% of the processors read requests result in a cache hit. The average and access time in nanoseconds is  _______.', 2, 4, 36, 'Gate', 2015, 5, 0, 0),
(1389, 'Consider the sequence of machine instruction given below<br/>\r\n<pre>\r\nMUL R5,R0,R1 \r\nDIV R6,R2,R3 \r\nADD R7,R5,R6 \r\nSUB R8,R7,R4\r\n</pre>\r\n In the above sequence, R0 to R8 are general purpose registraters. In the instructions shown, the first register stores the result of the operation performed on the second and the third registers. This sequence of instructions is to be executed in a pipelined instruction processor with the following 4 stages: (1) Instruction Fetch and Decode (IF), (2) Operand Fetch (OF), (3) Perfom Operations (PO) and (4) Write back the result (WB). The IF, OF and WB stages take 1 clock cycle each instruction The PO stahe takes 1 clock cycle for ADD or SUB instruction, 3 clock cycles for MUL instruction and 5 clock cycles for DIV instructions. The pipelined processor uses operand foewarding from the PO stage to the OF stage. The number of clock cycles taken for the execution of the aboce sequence of instructions is _______', 2, 4, 35, 'Gate', 2015, 5, 0, 0),
(1390, 'Consider the following code sequence having five instructions I1 to I5. Each of these instructions has the following format.\r\n<pre>\r\n    OP Ri, Rj, Rk\r\n</pre>\r\nwhere operation OP is performed on contents of registers Rj and Rk and the result is stored in register Ri.\r\n<pre>\r\n   I1 : ADD R1, R2, R3\r\n   I2 : MUL R7, R1, R3\r\n   I3 : SUB R4, R1, R5\r\n   I4 : ADD R3, R2, R4\r\n   I5 : MUL R7, R8, R9\r\n</pre>\r\nConsider the following three statements:\r\n<pre>\r\nS1: There is an anti-dependence between instructions I2 and I5.\r\nS2: There is an anti-dependence between instructions I2 and I4.\r\nS3: Within an instruction pipeline an anti-dependence always \r\n    creates one or more stalls.\r\n</pre>', 1, 4, 35, 'Gate', 2015, 5, 0, 0),
(1391, 'A machine has a 32-bit architecture, with 1-word long instructions. It has 64 registers, each of which is 32 bits long.  It needs to support 45 instructions, which have an immediate operand in addition to two register operands.  Assuming that the immediate operand is an unsigned integer, the maximum value of the immediate operand is ____________.', 2, 4, 36, 'Gate', 2014, 5, 0, 0),
(1392, 'Consider two processors P1 and P2 executing the same instruction set. Assume that under identical conditions, for the same input, a program running on P2 takes 25% less time but incurs 20% more CPI (clock cycles per instruction) as compared to the program running on P1. If the clock frequency of P1 is 1GHz, then the clock frequency of P2 (in GHz) is _________.', 2, 4, 35, 'Gate', 2014, 5, 0, 0),
(1393, 'A 4-way set-associative cache memory unit with a capacity of 16 KB is built using a block size of 8 words. The word length is 32 bits. The size of the physical address space is 4 GB. The number of bits for the TAG field is __________.', 2, 4, 36, 'Gate', 2014, 5, 0, 0),
(1394, 'Suppose a stack implementation supports an instruction REVERSE, which reverses the order of elements on the stack, in addition to the PUSH and POP instructions. Which one of the following statements is TRUE with respect to this modified stack?', 1, 4, 36, 'Gate', 2014, 5, 0, 0),
(1395, 'In designing a computer’s cache system, the cache block (or cache line) size is an important parameter.  Which one of the following statements is correct in this context?', 1, 4, 36, 'Gate', 2014, 5, 0, 0),
(1396, 'If the associativity of a processor cache is doubled while keeping the capacity and block size unchanged, which one of the following is guaranteed to be NOT affected?', 1, 4, 36, 'Gate', 2014, 5, 0, 0),
(1397, 'The value of a float type variable is represented using the single-precision 32-bit floating point format of IEEE-754 standard that uses 1 bit for sign, 8 bits for biased exponent and 23 bits for mantissa. A float type variable X is assigned the decimal value of −14.25. The representation of X in hexadecimal notation is', 1, 9, 75, 'Gate', 2014, 5, 0, 0),
(1398, 'Consider a main memory system that consists of 8 memory modules attached to the system bus, which is one word wide. When a write request is made, the bus is occupied for 100 nanoseconds (ns) by the data, address, and control signals. During the same 100 ns, and for 500 ns thereafter, the addressed memory module executes one cycle accepting and storing the data. The (internal) operation of different memory modules may overlap in time, but only one request can be on the bus at any time. The maximum number of stores (of one word each) that can be initiated in 1 millisecond is ____________', 2, 4, 36, 'Gate', 2014, 5, 0, 0),
(1399, 'Consider the following processors (ns stands for nanoseconds). Assume that the pipeline registers have zero latency. P1: Four-stage pipeline with stage latencies 1 ns, 2 ns, 2 ns, 1 ns. P2: Four-stage pipeline with stage latencies 1 ns, 1.5 ns, 1.5 ns, 1.5 ns. P3: Five-stage pipeline with stage latencies 0.5 ns, 1 ns, 1 ns, 0.6 ns, 1 ns. P4: Five-stage pipeline with stage latencies 0.5 ns, 0.5 ns, 1 ns, 1 ns, 1.1 ns. Which processor has the highest peak clock frequency?', 1, 4, 35, 'Gate', 2014, 5, 0, 0),
(1400, 'An instruction pipeline has five stages, namely, instruction fetch (IF), instruction decode and register fetch (ID/RF), instruction execution (EX), memory access (MEM), and register writeback (WB) with stage latencies 1 ns, 2.2 ns, 2 ns, 1 ns, and 0.75 ns, respectively (ns stands for nanoseconds). To gain in terms of frequency, the designers have decided to split the ID/RF stage into three stages (ID, RF1, RF2) each of latency 2.2/3 ns. Also, the EX stage is split into two stages (EX1, EX2) each of latency 1 ns. The new design has a total of eight pipeline stages. A program has 20% branch instructions which execute in the EX stage and produce the next instruction pointer at the end of the EX stage in the old design and at the end of the EX2 stage in the new design. The IF stage stalls after fetching a branch instruction until the next instruction pointer is computed. All instructions other than the branch instruction have an average CPI of one in both the designs. The execution times of this program on the old and the new design are P and Q nanoseconds, respectively. The value of P/Q is __________.', 2, 4, 35, 'Gate', 2014, 5, 0, 0),
(1401, 'In a k-way set associative cache, the cache is divided into v sets, each of which consists of k lines. The lines of a set are placed in sequence one after another. The lines in set s are sequenced before the lines in set (s+1). The main memory blocks are numbered 0 onwards. The main memory block numbered j must be mapped to any one of the cache lines from', 1, 4, 36, 'Gate', 2013, 5, 0, 0),
(1402, 'Consider the following sequence of micro-operations.\r\n<pre>\r\n     MBR ← PC \r\n     MAR ← X  \r\n     PC ← Y  \r\n     Memory ← MBR\r\n</pre>\r\nWhich one of the following is a possible operation performed by this sequence?', 1, 4, 65, 'Gate', 2013, 5, 0, 0),
(1403, 'Consider an instruction pipeline with five stages without any branch prediction: Fetch Instruction (FI), Decode Instruction (DI), Fetch Operand (FO), Execute Instruction (EI) and Write Operand (WO). The stage delays for FI, DI, FO, EI and WO are 5 ns, 7 ns, 10 ns, 8 ns and 6 ns, respectively. There are intermediate storage buffers after each stage and the delay of each buffer is 1 ns. A program consisting of 12 instructions I1, I2, I3, ..., I12 is executed in this pipelined processor. Instruction I4 is the only branch instruction and its branch target is I9. If the branch is taken during the execution of this program, the time (in ns) needed to complete the program is', 2, 4, 35, 'Gate', 2013, 5, 0, 0),
(1404, 'A RAM chip has a capacity of 1024 words of 8 bits each (1K×8). The number of 2×4 decoders with enable line needed to construct a 16K×16 RAM from 1K×8 RAM is', 2, 4, 36, 'Gate', 2013, 5, 0, 0),
(1405, 'The following code segment is executed on a processor which allows only register operands in its instructions. Each instruction can have atmost two source operands and one destination operand. Assume that all variables are dead after this code segment.\r\n<pre>\r\n   c = a + b;\r\n   d = c * a;\r\n   e = c + a;\r\n   x = c * c;\r\n   if (x > a) {\r\n      y = a * a;\r\n   }\r\n   else {\r\n     d = d * d;\r\n     e = e * e;\r\n  }\r\n</pre>\r\nSuppose the instruction set architecture of the processor has only two registers. The only allowed compiler optimization is code motion, which moves statements from one place to another while preserving correctness. What is the minimum number of spills to memory in the compiled code?', 2, 6, 53, 'Gate', 2013, 5, 0, 0),
(1406, 'Register renaming is done in pipelined processors', 1, 4, 35, 'Gate', 2012, 5, 0, 0),
(1407, 'A computer has a 256 KByte, 4-way set associative, write back data cache with block size of 32 Bytes. The processor sends 32 bit addresses to the cache controller. Each cache tag directory entry contains, in addition to address tag, 2 valid bits, 1 modified bit and 1 replacement bit. The number of bits in the tag field of an address is', 1, 4, 36, 'Gate', 2012, 5, 0, 0),
(1408, 'Consider a hypothetical processor with an instruction of type LW R1, 20 (R2), which during execution reads a 32-bit word from memory and stores it in a 32-bit register R1. The effective address of the memory location is obtained by the addition of constant 20 and the contents of register R2. Which of the following best reflects the addressing mode implemented by this instruction for the operand memory?', 1, 4, 64, 'Gate', 2011, 5, 0, 0),
(1409, 'A computer handles several interrupt sources of which the following are relevant for this question.\r\n<pre>\r\n. Interrupt from CPU temperature sensor (raises interrupt if \r\n  CPU temperature is too high)\r\n. Interrupt from Mouse(raises interrupt if the mouse is moved \r\n  or a button is pressed)\r\n. Interrupt from Keyboard(raises interrupt when a key is \r\n  pressed or released)\r\n. Interrupt from Hard Disk(raises interrupt when a disk \r\n  read is completed)\r\n</pre>\r\nWhich one of these will be handled at the HIGHEST priority?', 1, 4, 71, 'Gate', 2011, 5, 0, 0),
(1410, 'An 8KB direct-mapped write-back cache is organized as multiple blocks, each of size 32-bytes. The processor generates 32-bit addresses. The cache controller maintains the tag information for each cache block comprising of the following. 1 Valid bit 1 Modified bit As many bits as the minimum needed to identify the memory block mapped in the cache. What is the total size of memory needed at the cache controller to store meta-data (tags) for the cache?', 1, 4, 36, 'Gate', 2011, 5, 0, 0),
(1411, 'An application loads 100 libraries at startup. Loading each library requires exactly one disk access. The seek time of the disk to a random location is given as 10 ms. Rotational speed of disk is 6000 rpm. If all 100 libraries are loaded from random locations on the disk, how long does it take to load all libraries? (The time to transfer data from the disk block once the head has been positioned at the start of the block may be neglected).', 1, 4, 16, 'Gate', 2011, 5, 0, 0),
(1412, 'On a non-pipelined sequential processor, a program segment, which is a part of the interrupt service routine, is given to transfer 500 bytes from an I/O device to memory.\r\n<pre>\r\nInitialize the address register\r\n              Initialize the count to 500\r\n        LOOP: Load a byte from device\r\n              Store in memory at address given by address register\r\n              Increment the address register\r\n              Decrement the count\r\n              If count != 0 go to LOOP\r\n</pre>\r\nAssume that each statement in this program is equivalent to machine instruction which takes one clock cycle to execute if it is a non-load/store instruction. The load-store instructions take two clock cycles to execute. The designer of the system also has an alternate approach of using DMA controller to implement the same transfer. The DMA controller requires 20 clock cycles for initialization and other overheads. Each DMA transfer cycle takes two clock cycles to transfer one byte of data from the device to the memory. What is the approximate speedup when the DMA controller based design is used in place of the interrupt driven program based input-output?', 2, 4, 71, 'Gate', 2011, 5, 0, 0),
(1413, 'A 5-stage pipelined processor has Instruction Fetch(IF),Instruction Decode(ID),Operand Fetch(OF),Perform Operation(PO)and Write Operand(WO)stages.The IF,ID,OF and WO stages take 1 clock cycle each for any instruction.The PO stage takes 1 clock cycle for ADD and SUB instructions,3 clock cycles for MUL instruction,and 6 clock cycles for DIV instruction respectively.Operand forwarding is used in the pipeline.What is the number of clock cycles needed to execute the following sequence of instructions?\r\n<pre>\r\n     Instruction           Meaning of instruction\r\n  I0 :MUL R2 ,R0 ,R1	      R2 ¬ R0 *R1\r\n  I1 :DIV R5 ,R3 ,R4  	      R5 ¬ R3/R4\r\n  I2 :ADD R2 ,R5 ,R2	      R2 ¬ R5+R2\r\n  I3 :SUB R5 ,R2 ,R6	      R5 ¬ R2-R6\r\n</pre>', 2, 4, 35, 'Gate', 2010, 5, 0, 0),
(1414, 'A CPU generally handles an interrupt by executing an interrupt service routine', 1, 4, 71, 'Gate', 2009, 5, 0, 0),
(1415, 'Consider a 4-way set associative cache (initially empty) with total 16 cache blocks. The main memory consists of 256 blocks and the request for memory blocks is in the following order: 0, 255, 1, 4, 3, 8, 133, 159, 216, 129, 63, 8, 48, 32, 73, 92, 155. Which one of the following memory block will NOT be in cache if LRU replacement policy is used?  ', 1, 4, 52, 'Gate', 2009, 5, 0, 0),
(1416, 'For a magnetic disk with concentric circular tracks, the seek latency is not linearly proportional to the seek distance due to', 1, 4, 16, 'Gate', 2008, 5, 0, 0),
(1417, 'Which of the following is/are true of the auto-increment addressing mode?', 3, 4, 64, 'Gate', 2008, 5, 0, 0),
(1418, 'Which of the following must be true for the RFE (Return From Exception) instruction on a general purpose processor?', 3, 4, 36, 'Gate', 2008, 5, 0, 0),
(1419, 'For inclusion to hold between two cache levels L1 and L2 in a multi-level cache hierarchy, which of the following are necessary? ', 3, 4, 36, 'Gate', 2008, 5, 0, 0),
(1420, 'The use of multiple register windows with overlap causes a reduction in the number of memory accesses for ', 3, 6, 53, 'Gate', 2008, 5, 0, 0),
(1421, 'In an instruction execution pipeline, the earliest that the data TLB (Translation Lookaside Buffer) can be accessed is', 1, 4, 68, 'Gate', 2008, 5, 0, 0);
INSERT INTO `question` (`q_id`, `question`, `type`, `sub_id`, `topic_id`, `source`, `year`, `life`, `attampt`, `correct`) VALUES
(1422, 'Consider a machine with a 2-way set associative data cache of size 64Kbytes and block size 16bytes. The cache is managed using 32 bit virtual addresses and the page size is 4Kbyts. A program to be run on this machine begins as follows:\r\n<pre>\r\ndouble ARR [1024][1024]; \r\nint i,j; /* Initialize array ARR to 0.0 * / \r\nfor (i = 0;i < 1024; i + +)\r\n    for (j = 0; j < 1024; j + +) \r\n        ARR [i]   [j] = 0.0;\r\n</pre>\r\n The size of double is 8Bytes. Array ARR is located in memory starting at the beginning of virtual page 0xFF000 and stored in row major order. The cache is initially empty and no pre-fetching is done. The only data memory references made by the program are those to array ARR The total size of the tags in the cache directory is', 1, 4, 36, 'Gate', 2008, 5, 0, 0),
(1423, 'Consider a machine with a 2-way set associative data cache of size 64Kbytes and block size 16bytes. The cache is managed using 32 bit virtual addresses and the page size is 4Kbyts. A program to be run on this machine begins as follows:   \r\n<pre>\r\ndouble ARR [1024][1024]; \r\nint i,j; /* Initialize array ARR to 0.0 * / \r\nfor (i = 0;i < 1024; i + +) \r\n    for (j = 0; j < 1024; j + +) \r\n        ARR [i][j] = 0.0;\r\n</pre>\r\nThe size of double is 8Bytes. Array ARR is located in memory starting at the beginning of virtual page 0xFF000 and stored in row major order. The cache is initially empty and no pre-fetching is done. The only data memory references made by the program are those to array ARR Which of the following array elements has the same cache index as ARR [0] [0]?', 1, 4, 36, 'Gate', 2008, 5, 0, 0),
(1424, 'Consider a machine with a 2-way set associative data cache of size 64Kbytes and block size 16bytes. The cache is managed using 32 bit virtual addresses and the page size is 4Kbyts. A program to be run on this machine begins as follows:   <pre>double ARR [1024][1024]; int i,j; /* Initialize array ARR to 0.0 * /for (i = 0;i < 1024; i    )    for (j = 0; j < 1024; j    )        ARR [i][j] = 0.0; </pre>The size of double is 8Bytes. Array ARR is located in memory starting at the beginning of virtual page 0xFF000 and stored in row major order. The cache is initially empty and no pre-fetching is done. The only data memory references made by the program are those to array ARR The cache hit ratio for this initialization loop is', 1, 4, 36, 'Gate', 2008, 5, 0, 0),
(1425, 'Delayed branching can help in the handling of control hazards For all delayed conditional branch instructions, irrespective of whether the condition evaluates to true or false', 1, 4, 35, 'Gate', 2008, 5, 0, 0),
(1426, 'How many bytes of data can be sent in 15 seconds over a serial link with baud rate of 9600 in asynchronous mode with odd parity and two stop bits in the frame?', 1, 4, 71, 'Gate', 2008, 5, 0, 0),
(1427, 'Consider a machine with a byte addressable main memory of 2<sup>16</sup> bytes. Assume that a direct mapped data cache consisting of 32 lines of 64 bytes each is used in the system. A 50 × 50 two-dimensional array of bytes is stored in the main memory starting from memory location 1100H. Assume that the data cache is initially empty. The complete array is accessed twice. Assume that the contents of the data cache do not change in between the two accesses. How many data cache misses will occur in total?', 2, 4, 36, 'Gate', 2007, 5, 0, 0),
(1428, 'Consider a pipelined processor with the following four stages:\r\n<pre>\r\nIF: Instruction Fetch\r\nID: Instruction Decode and Operand Fetch\r\nEX: Execute\r\nWB: Write Back\r\n</pre>\r\nThe IF, ID and WB stages take one clock cycle each to complete the operation. The number of clock cycles for the EX stage dependson the instruction. The ADD and SUB instructions need 1 clock cycle and the MUL instruction needs 3 clock cycles in the EX stage. Operand forwarding is used in the pipelined processor. What is the number of clock cycles taken to complete the following sequence of instructions?\r\n<pre>\r\nADD R2, R1, R0       R2 <- R0 + R1\r\nMUL R4, R3, R2       R4 <- R3 * R2\r\nSUB R6, R5, R4       R6 <- R5 - R4\r\n</pre>', 2, 4, 35, 'Gate', 2007, 5, 0, 0),
(1429, 'Consider a disk pack with 16 surfaces, 128 tracks per surface and 256 sectors per track. 512 bytes of data are stored in a bit serial manner in a sector. The capacity of the disk pack and the number of bits required to specify a particular sector in the disk are respectively:', 1, 4, 16, 'Gate', 2007, 5, 0, 0),
(1430, 'Consider a 4-way set associative cache consisting of 128 lines with a line size of 64 words. The CPU generates a 20-bit address of a word in main memory. The number of bits in the TAG, LINE and WORD fields are respectively:', 1, 4, 36, 'Gate', 2007, 5, 0, 0),
(1431, 'Consider a computer with a 4-ways set-associative mapped cache of the following character­istics: a total of 1 MB of main memory, a word size of 1 byte, a block size of 128 words and a cache size of 8 KB. While accessing the memory location 0C795H by the CPU, the contents of the TAG field of the corresponding cache line is', 1, 4, 36, 'Gate', 2008, 5, 0, 0),
(1432, 'Consider a computer with a 4-ways set-associative mapped cache of the following characteristics: a total of 1 MB of main memory, a word size of 1 byte, a block size of 128 words and a cache size of 8 KB. The number of bits in the TAG, SET and WORD fields, respectively are:', 1, 4, 36, 'Gate', 2008, 5, 0, 0),
(1433, 'A non pipelined single cycle processor operating at 100 MHz is converted into a synchro­nous pipelined processor with five stages requiring 2.5 nsec, 1.5 nsec, 2 nsec, 1.5 nsec and 2.5 nsec, respectively. The delay of the latches is 0.5 nsec. The speedup of the pipeline processor for a large number of instructions is', 2, 4, 35, 'Gate', 2008, 5, 0, 0),
(1434, 'Consider a CPU where all the instructions require 7 clock cycles to complete execution. There are 140 instructions in the instruction set. It is found that 125 control signals are needed to be generated by the control unit. While designing the horizontal microprogrammed control unit, single address field format is used for branch control logic. What is the minimum size of the control word and control address register?', 1, 4, 65, 'Gate', 2008, 5, 0, 0),
(1435, 'Assume that EA = (X)+ is the effective address equal to the contents of location X, with X incremented by one word length after the effective address is calculated; EA = −(X) is the effective address equal to the contents of location X, with X decremented by one word length before the effective address is calculated; EA = (X)− is the effective address equal to the contents of location X, with X decremented by one word length after the effective address is calculated. The format of the instruction is (opcode, source, destination), which means (destination ← source op destination). Using X as a stack pointer, which of the following instructions can pop the top two elements from the stack, perform the addition operation and push the result back to the stack.', 1, 4, 36, 'Gate', 2008, 5, 0, 0),
(1436, 'The chip select logic for a certain DRAM chip in a memory system design is shown below. Assume that the memory system has 16 address lines denoted by A<sub>15</sub> to A<sub>0</sub>. What is the range of addresses (in hexadecimal) of the memory system that can get enabled by the chip select (CS) signal?<br/><center><img src=\"./image/question/1436.jpg\"/></center>', 1, 4, 65, 'Gate', 2010, 5, 0, 0),
(1437, 'Consider the following data path diagram.<br/><center><img src=\"./image/question/1437.jpg\"/></center><br/>Consider an instruction: R0 ← R1   R2. The following steps are used to execute it over the given data path. Assume that PC is incremented appropriately. The subscripts r and w indicate read and write operations, respectively.<br/><img src=\"./image/question/1437.1.jpg\"/><br/>Which one of the following is the correct order of execution of the above steps? ', 1, 4, 65, 'Gate', 2020, 5, 0, 0),
(1438, 'Consider a RISC machine where each instruction is exactly 4 bytes long. Conditional and unconditional branch instructions use PC-relative addressing mode with Offset specified in bytes to the target location of the branch instruction. Further the Offset is always with respect to the address of the next instruction in the program sequence. Consider the following instruction sequence<br/><center><img src=\"./image/question/1438.jpg\"/></center><br/>If the target of the branch instruction is i, then the decimal value of the Offset is ___________.', 2, 4, 36, 'Gate', 2017, 5, 0, 0),
(1439, 'The read access times and the hit ratios for different caches in a memory hierarchy are as given below. <br/><center><img src=\"./image/question/1439.jpg\"/></center><br/>The read access time of main memory is 90 nanoseconds. Assume that the caches use the referred-word-first read policy and the write back policy. Assume that all the caches are direct mapped caches. Assume that the dirty bit is always 0 for all the blocks in the caches. In execution of a program, 60% of memory reads are for instruction fetch and 40% are for memory operand fetch. The average read access time in nanoseconds (up to 2 decimal places) is ___________.', 2, 4, 36, 'Gate', 2017, 5, 0, 0),
(1440, 'A ﬁle system uses an in-memory cache to cache disk blocks. The miss rate of the cache is shown in the ﬁgure. The latency to read a block from the cache is 1 ms and to read a block from the disk is 10 ms. Assume that the cost of checking whether a block exists in the cache is negligible. Available cache sizes are in multiples of 10 MB. <br/><center><img src=\"./image/question/1440.jpg\"/></center><br/>The smallest cache size required to ensure an average read latency of less than 6 ms is _______ MB.', 2, 4, 36, 'Gate', 2016, 5, 0, 0),
(1441, 'Consider a  processor with byte-addressable memory. Assume that all registers, including Program Counter (PC) and Program Status WOrd (PSW), are of size 2 byte. Astack in the main memory is impllemented from memory locatuons (0100)16 and it grows upward. The stack pointer (SP) points to the top element of the stack. The current value SP is (016E)16. The CALL instructions is of two words, the first word is the op-code and the second word is the starting address of the subroutine. (one word =2bytes). The CALL instructions is implemented as follows  <br/><img src=\"./image/question/1441.jpg\"/>', 1, 4, 36, 'Gate', 2015, 5, 0, 0),
(1442, '<img src=\"./image/question/1442.jpg\"/>', 2, 4, 36, 'Gate', 2012, 5, 0, 0),
(1443, 'Consider an instruction pipeline with four stages (S1, S2, S3 and S4) each with combinational circuit only. The pipeline registers are required between each stage and at the end of the last stage. Delays for the stages and for the pipeline registers are as given in the figure: <br/><img src=\"./image/question/1443.jpg\"/><br/>What is the approximate speed up of the pipeline in steady state under ideal conditions when compared to the corresponding non-pipeline implementation?    ', 2, 4, 35, 'Gate', 2011, 5, 0, 0),
(1444, '<img src=\"./image/question/1444.jpg\"/>  ', 1, 4, 36, 'Gate', 2010, 5, 0, 0),
(1445, 'A computer system has an L1 cache, an L2 cache, and a main memory unit connected as shown below. The block size in L1 cache is 4 words. The block size in L2 cache is 16 words. The memory access times are 2 nanoseconds. 20 nanoseconds and 200 nanoseconds for L1 cache, L2 cache and main memory unit respectively. <br/><img src=\"./image/question/1445.jpg\"/> <br/> When there is a miss in L1 cache and a hit in L2 cache, a block is transferred from L2 cache to L1 cache. What is the time taken for this transfer? ', 1, 4, 36, 'Gate', 2010, 5, 0, 0),
(1446, 'Consider a 4 stage pipeline processor. The number of cycles needed by the four instructions I1, I2, I3, I4 in stages S1, S2, S3, S4 is shown below:  <br/>\r\n<img src=\"./image/question/1446.jpg\"/> <br/>\r\n What is the number of cycles needed to execute the following loop? \r\n<pre>\r\nFor (i=1 to 2) {I1; I2; I3; I4;}\r\n</pre>', 2, 4, 35, 'Gate', 2009, 5, 0, 0),
(1447, '<img src=\"./image/question/1447.jpg\"/>', 2, 4, 16, 'Gate', 2009, 5, 0, 0),
(1448, '<img src=\"./image/question/1448.jpg\"/>', 1, 4, 16, 'Gate', 2009, 5, 0, 0),
(1449, 'WHich of the Following statements are true:\r\n<pre>\r\n1. In randomized quicksort, each key is involved in the same number\r\nof comparisons.\r\n2. If Quicksort is written so that the partition algorithm always uses\r\nthe median value of the segment as the pivot, then the worst-case performance is O(nlogn).\r\n</pre>', 1, 2, 5, 'DS ', 2021, 5, 0, 0),
(1450, 'The number of elements that can be sorted in T(logn) time using heap sort is', 1, 2, 5, 'DS ', 2021, 5, 0, 0),
(1451, 'The minimum number of comparisons required to find the minimum and the maximum of 100 numbers is ——', 2, 2, 5, 'DS ', 2021, 5, 0, 0),
(1452, 'You have an array of n elements. Suppose you implement quicksort by always choosing the central element of the array as the pivot. Then the tightest upper bound for the worst case performance is', 1, 2, 5, 'DS ', 2021, 5, 0, 0),
(1453, 'Which one of the following in place sorting algorithms needs the minimum number of swaps?', 1, 2, 5, 'DS ', 2021, 5, 0, 0),
(1454, 'Consider the Quicksort algorithm. Suppose there is a procedure for finding a pivot element which splits the list into two sub-lists each of which contains at least one-fifth of the elements. Let T(n) be the number of comparisons required to sort n elements.', 1, 2, 5, 'DS ', 2021, 5, 0, 0),
(1455, 'In quick sort, for sorting n elements, the n/4 th smallest element is selected as pivot using an O(n) time algorithm. What is the worst case time complexity of the quick sort?', 1, 2, 5, 'DS ', 2021, 5, 0, 0),
(1456, 'The usual Θ(n 2 ) implementation of Insertion Sort to sort an array uses linear search to identify the position where an element is to be inserted into the already sorted part of the array. If, instead, we use binary search to identify the position, the worst case running time will', 1, 2, 5, 'DS ', 2021, 5, 0, 0),
(1457, 'Let s be a sorted array of n integers. Let t(n) denote the time taken for the most efficient algorithm to determine if there are two elements with sum less than 1000 in s. which of the following statements is true?', 1, 2, 5, 'DS ', 2021, 5, 0, 0),
(1458, 'Quick-sort is run on two inputs shown below to sort in ascending order\r\n<pre>\r\n(i) 1,2,3 ....n\r\n(ii) n, n- 1, n-2, .... 2, 1\r\n</pre>\r\nLet C1 and C2 be the number of comparisons made for the inputs (i) and (ii) respectively.\r\nThen,', 1, 2, 5, 'DS ', 2021, 5, 0, 0),
(1459, 'Which of the following algorithms are stable?', 3, 2, 5, 'DS ', 2021, 5, 0, 0),
(1460, 'Which of the following algorithms are stable?', 3, 2, 5, 'DS ', 2021, 5, 0, 0),
(1461, 'Which of the following algorithms are In-Place?', 3, 2, 5, 'DS ', 2021, 5, 0, 0),
(1462, 'Which of the following algorithms are In-Place?', 3, 2, 5, 'DS ', 2021, 5, 0, 0);

-- --------------------------------------------------------

--
-- Table structure for table `subject`
--

CREATE TABLE `subject` (
  `sub_id` int NOT NULL,
  `sub_name` char(50) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

--
-- Dumping data for table `subject`
--

INSERT INTO `subject` (`sub_id`, `sub_name`) VALUES
(1, 'OS'),
(2, 'Algorithm'),
(3, 'Data Structure'),
(4, 'COA'),
(5, 'TOC'),
(6, 'Compiler Design'),
(7, 'C Programming'),
(8, 'Computer Network'),
(9, 'Digital Logic'),
(10, 'Discrete Mathematics'),
(11, 'Mathematics'),
(12, 'DBMS');

-- --------------------------------------------------------

--
-- Table structure for table `test`
--

CREATE TABLE `test` (
  `id` int NOT NULL,
  `q_id` int DEFAULT NULL,
  `question` varchar(1000) DEFAULT NULL,
  `type` int DEFAULT NULL,
  `sub_id` int DEFAULT NULL,
  `topic_id` int DEFAULT NULL,
  `status` int DEFAULT NULL,
  `source` varchar(50) DEFAULT NULL,
  `year` int DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

--
-- Dumping data for table `test`
--

INSERT INTO `test` (`id`, `q_id`, `question`, `type`, `sub_id`, `topic_id`, `status`, `source`, `year`) VALUES
(1, 1346, '<img src=\"./image/question/1346.jpg\"/>', 1, 9, 67, 1, 'Gate', 1999),
(2, 626, '<img src=\"./image/question/626.jpg\"/>', 1, 5, 49, 1, 'Gate', 1995),
(3, 804, 'Let the time taken to switch between user and kernel modes of execution be t<sub>1</sub> while the time taken to switch between two processes be t<sub>2</sub>. Which of the following is TRUE?', 1, 1, 1, 1, 'Gate', 2011),
(4, 529, 'Which of the following languages is (are) non-regular? L<sub>1</sub> = {0<sup>m</sup>1<sup>n</sup> | 0 ≤ m ≤ n ≤ 10000} L<sub>2</sub> = {w | w reads the same forward and backward} L<sub>3</sub> = {w ∊ {0, 1} * | w contains an even number of 0\'s and an even number of 1\'s}', 1, 5, 49, 1, 'Gate', 2008),
(5, 968, 'What is the output of the following program?\r\n<pre>\r\n#include <stdio.h>\r\nint funcf (int x);\r\nint funcg (int y);\r\n\r\nmain()\r\n{\r\n    int x = 5, y = 10, count;\r\n    for (count = 1; count <= 2; ++count)\r\n    {\r\n        y += funcf(x) + funcg(x);\r\n        printf (\"%d \", y);\r\n    }\r\n}\r\n\r\nfuncf(int x)\r\n{\r\n    int y;\r\n    y = funcg(x);\r\n    return (y);\r\n}\r\n\r\nfuncg(int x)\r\n{\r\n    static int y = 10;\r\n    y += 1;\r\n    return (y+x);\r\n}\r\n</pre>', 1, 7, 26, 1, 'Gate', 2004),
(6, 844, 'In which one of the following page replacement algorithms it is possible for the page fault rate to increase even when the number of allocated frames increases?', 1, 1, 52, 1, 'Gate', 2016),
(7, 166, 'What is the maximum height of any AVL-tree with 7 nodes? Assume that the height of a tree with a single node is 0.', 2, 3, 24, 1, 'Gate', 2009),
(8, 181, 'A Binary Search Tree (BST) stores values in the range 37 to 573. Consider the following sequence of keys.<br/> I. 81, 537, 102, 439, 285, 376, 305<br/> II. 52, 97, 121, 195, 242, 381, 472 <br/>III. 142, 248, 520, 386, 345, 270, 307<br/> IV. 550, 149, 507, 395, 463, 402, 270<br/> Which of the following statements is TRUE?', 1, 3, 22, 1, 'Gate', 2008),
(9, 1295, 'Let A = 1111 1010 and B = 0000 1010 be two 8-bit 2\'s complement numbers. Their product in 2\'s complement is', 1, 9, 75, 1, 'Gate', 2004),
(10, 1257, 'The following expression was to be realized using 2-input AND and OR gates. However, during the fabrication all 2-input AND gates were mistakenly substituted by 2-input NAND gates. (a.b).c + (a\'.c).d + (b.c).d + a. d What is the function finally realized ?  ', 1, 9, 67, 1, 'Gate', 2007),
(11, 484, 'Which of the following is true for the language {a<sup>p</sup>|p is a prime} ?  ', 1, 5, 49, 1, 'Gate', 2008),
(12, 573, 'Which one of the following regular expressions is NOT equivalent to the regular expression (a + b + c)*?  ', 1, 5, 25, 1, 'Gate', 2004),
(13, 587, 'Consider three decision problems P1, P2 and P3. It is known that P1 is decidable and P2 is undecidable. Which one of the following is TRUE?', 1, 5, 27, 0, 'Gate', 2005),
(14, 847, 'Consider a non-negative counting semaphore S. The operation P(S) decrements S, and V(S) increments S. During an execution, 20 P(S) operations and 12 V(S) operations are issued in some order. The largest initial value of S for which at least one P(S) operation will remain blocked is _________.', 2, 1, 2, 1, 'Gate', 2016),
(15, 1119, 'Suppose the adjacency relation of vertices in a graph is represented in a table Adj(X,Y). Which of the following queries cannot be expressed by a relational algebra expression of constant length?', 1, 12, 73, 0, 'Gate', 2001),
(16, 52, 'Which one of the following is the tightest upper bound that represents the number of swaps required to sort n numbers using selection sort?', 1, 2, 5, 1, 'Gate', 2013),
(17, 727, 'In an enhancement of a design of a CPU, the speed of a floating point unit has been increased by 20% and the speed of a fixed point unit has been increased by 10%. What is the overall speedup achieved if the ratio of the number of floating point operations to the number of fixed point operations is 2:3 and the floating point operation used to take twice the time taken by the fixed point operation in the original design?', 2, 4, 35, 0, 'Gate', 2004),
(18, 241, 'Consider the following 2-3-4 tree (i.e., B-tree with a minimum degree of two) in which each data item is a letter. The usual alphabetical ordering of letters is used in constructing the tree.<br/><center><img src=\"./image/question/241.jpg\"/></center><br/>What is the result of inserting G in the above tree ? ', 1, 3, 24, 1, 'Gate', 2003),
(19, 530, 'Consider the following two finite automata. M1 accepts L1 and M2 accepts L2. <br/><img src=\"./image/question/530.jpg\"/><br/>Which one of the following is TRUE?', 3, 5, 50, 1, 'Gate', 2008),
(20, 1064, 'Which of the following tuple relational calculus expression(s) is/are equivalent to<img src=\"./image/question/1064.jpg\"/><br/>', 3, 12, 73, 1, 'Gate', 2008),
(21, 1022, 'Consider a simple checkpointing protocol and the following set of operations in the log. <br/><img src=\"./image/question/1022.jpg\"/><br/>', 1, 12, 70, 1, 'Gate', 2015),
(22, 1454, 'Consider the Quicksort algorithm. Suppose there is a procedure for finding a pivot element which splits the list into two sub-lists each of which contains at least one-fifth of the elements. Let T(n) be the number of comparisons required to sort n elements.', 1, 2, 5, 1, 'DS ', 2021),
(23, 876, 'Consider the following C functions.<br/><img src=\"./image/question/876.jpg\"/><br/> The return value of fun2 (5) is _______. ', 2, 7, 26, 1, 'Gate', 2020),
(24, 1065, 'A clustering index is defined on the fields which are of type', 1, 12, 36, 1, 'Gate', 2008),
(25, 1012, 'B  Trees are considered BALANCED because', 1, 12, 36, 1, 'Gate', 2016),
(26, 888, '<img src=\"./image/question/888.jpg\"/>', 1, 7, 26, 1, 'Gate', 2017),
(27, 849, 'Consider a uniprocessor system executing three tasks T1, T2 and T3, each of which is composed of an infinite sequence of jobs (or instances) which arrive periodically at intervals of 3, 7 and 20 milliseconds, respectively. The priority of each task is the inverse of its period and the available tasks are scheduled in order of priority, with the highest priority task scheduled first. Each instance of T1, T2 and T3 requires an execution time of 1, 2 and 4 milliseconds, respectively. Given that all tasks initially arrive at the beginning of the 1st millisecond and task preemptions are allowed, the first instance of T3 completes its execution at the end of ______________ milliseconds.', 2, 1, 2, 0, 'Gate', 2015),
(28, 275, 'Consider any array representation of an n element binary heap where the elements are stored from index 1 to index n of the array. For the element stored at index i of the array (i≤n), the index of the parent is', 1, 2, 19, 1, 'Gate', 2001),
(29, 793, 'The enter_CS() and leave_CS() functions to implement critical section of a process are realized using test-and-set instruction as follows:\r\n<pre>\r\nvoid enter_CS(X)\r\n{ \r\n   while (test-and-set(X));\r\n} \r\nvoid leave_CS(X) \r\n{ \r\n   X=0; \r\n}\r\n</pre>\r\n In the above solution, X is a memory location associated with the CS and is initialized to 0. Now consider the following statements: \r\n<pre>\r\nI.lThe above solution to CS problem is deadlock-free \r\nII.The solution is starvation \r\nIII.The processes enter CS in FIFO \r\nIV.More than one process can enter CS at the same time.\r\n</pre>\r\n Which of the above statements is TRUE?  ', 3, 1, 2, 1, 'Gate', 2009),
(30, 565, 'A single tape Turing Machine M has two states q0 and q1, of which q0 is the starting state. The tape alphabet of M is {0, 1, B} and its input alphabet is {0, 1}. The symbol B is the blank symbol used to indicate end of an input string. The transition function of M is described in the following table\r\n<pre>\r\n	 0 	         1 	         B\r\n q0 	 q1, 1, R 	 q1, 1, R 	 Halt\r\n q1 	 q1, 1, R 	 q0, 1, L 	 q0, B, L\r\n</pre>\r\nThe table is interpreted as illustrated below. The entry (q1, 1, R) in row q0 and column 1 signifies that if M is in state q0 and reads 1 on the current tape square, then it writes 1 on the same tape square, moves its tape head one position to the right and transitions to state q1. Which of the following statements is true about M ?', 1, 5, 48, 0, 'Gate', 2003),
(31, 1230, 'What is the Boolean expression for the output f of the combinational logic circuit of NOR gates given below?  <br/><img src=\"./image/question/1230.jpg\"/>', 1, 9, 76, 1, 'Gate', 2010),
(32, 544, 'Which of the following statements is false?', 1, 5, 50, 1, 'Gate', 1998),
(33, 445, 'The number of states in the minimal deterministic finite automaton corresponding to the regular expression (0   1) * (10) is __________', 2, 5, 49, 1, 'Gate', 2015),
(34, 1164, 'In 16-bit 2\'s complement representation, the decimal number -28 is:', 1, 9, 75, 1, 'Gate', 2019),
(35, 921, 'Consider the following function:\r\n<pre>\r\nint unknown(int n) {\r\n    int i, j, k = 0;\r\n    for (i  = n/2; i <= n; i++)\r\n        for (j = 2; j <= n; j = j * 2)\r\n            k = k + n/2;\r\n    return k;\r\n }\r\n</pre>', 1, 7, 26, 0, 'Gate', 2013),
(36, 9, 'For parameters a and b, both of which are <i>w(1), T(n<sup>1/a</sup>)+1, and T(b)=1</i>, Then T(n) is', 1, 2, 8, 1, 'Gate', 2020),
(37, 475, 'Let L = {w ∈ (0   1)* | w has even number of 1s}, i.e. L is the set of all bit strings with even number of 1s. Which one of the regular expression below represents L?  ', 1, 5, 49, 1, 'Gate', 2010),
(38, 465, 'Which of the following is/are undecidable?<br/> <img src=\"./image/question/465.jpg\"/>', 3, 5, 55, 1, 'Gate', 2013),
(39, 857, 'For the processes listed in the following table, which of the following scheduling schemes will give the lowest average turnaround time?<br/><center><img src=\"./image/question/857.jpg\"/></center>', 1, 1, 1, 1, 'Gate', 2015),
(40, 194, 'A depth-first search is performed on a directed acyclic graph. Let d[u] denote the time at which vertex u is visited for the first time and f[u] the time at which the dfs call to the vertex u terminates. Which of the following statements is always true for all edges (u, v) in the graph ?', 1, 3, 7, 0, 'Gate', 2007),
(41, 408, 'Which of the following languages are undecidable? Note that L(M) indicates encoding of the Turing machine M.<br/><img src=\"./image/question/408.jpg\"/>', 3, 5, 48, 1, 'Gate', 2020),
(42, 1264, 'Consider numbers represented in 4-bit gray code. Let h3h2h1h0 be the gray code representation of a number n and let g<sub>3</sub>g<sub>2</sub>g<sub>1</sub>g<sub>0</sub> be the gray code of (n 1) (modulo 16) value of the number. Which one of the following functions is correct?', 1, 9, 75, 0, 'Gate', 2007),
(43, 1447, '<img src=\"./image/question/1447.jpg\"/>', 2, 4, 16, 0, 'Gate', 2009),
(44, 534, '  A minimum state deterministic finite automaton accepting the language L={w | w ε {0,1} *, number of 0s and 1s in w are divisible by 3 and 5, respectively} has ______ states.', 2, 5, 50, 1, 'Gate', 2007),
(45, 1348, '<img src=\"./image/question/1348.jpg\"/>', 1, 9, 75, 0, 'Gate', 2000),
(46, 187, 'The maximum number of binary trees that can be formed with three unlabeled nodes is:', 2, 3, 24, 1, 'Gate', 2007),
(47, 440, 'A student wrote two context-free grammars G1 and G2 for generating a single C-like array declaration. The dimension of the array is at least one. For example,\r\n<pre>\r\n    int a[10][3]; \r\n</pre>\r\nThe grammars use D as the start symbol, and use six terminal symbols int; id[] num.\r\n<pre>\r\nGrammar G1               Grammar G2\r\nD → intL;                 D → intL;\r\nL → id[E                  L → idE\r\nE → num]                  E → E[num]\r\nE → num][E                E → [num]\r\n</pre>\r\nWhich of the grammars correctly generate the declaration mentioned above?', 1, 5, 51, 1, 'Gate', 2016),
(48, 1279, 'The hexadecimal representation of 657<sub>8</sub> is', 1, 9, 75, 1, 'Gate', 2005),
(49, 1109, 'In an inventory management system implemented at a trading corporation, there are several tables designed to hold all the information. Amongst these, the following two tables hold information on which items are supplied by which suppliers, and which warehouse keeps which items along with the stock-level of these items. \r\n<pre>\r\nSupply = (supplierid, itemcode) \r\nInventory = (itemcode, warehouse, stocklevel) \r\n</pre>\r\nFor a specific information required by the management, following SQL query has been written\r\n<pre>\r\nSelect distinct STMP.supplierid\r\nFrom Supply as STMP\r\nWhere not unique (Select ITMP.supplierid\r\n                  From Inventory, Supply as ITMP\r\n                  Where STMP.supplierid = ITMP.supplierid\r\n                  And ITMP.itemcode = Inventory.itemcode\r\n                  And Inventory.warehouse = \'Nagpur\');\r\n</pre>\r\nFor the warehouse at Nagpur, this query will find all suppliers who', 1, 12, 72, 0, 'Gate', 2005),
(50, 646, 'Context-free languages are', 3, 5, 51, 1, 'Gate', 1992);

-- --------------------------------------------------------

--
-- Table structure for table `testchoice`
--

CREATE TABLE `testchoice` (
  `id` int NOT NULL,
  `q_id` int DEFAULT NULL,
  `choice` text,
  `correct` int DEFAULT NULL,
  `selected` int DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

--
-- Dumping data for table `testchoice`
--

INSERT INTO `testchoice` (`id`, `q_id`, `choice`, `correct`, `selected`) VALUES
(1, 1346, '<img src=\"./image/choice/1346.1.jpg\"/>', 0, 0),
(2, 1346, '<img src=\"./image/choice/1346.2.jpg\"/>', 1, 1),
(3, 1346, '<img src=\"./image/choice/1346.2.jpg\"/>', 0, 0),
(4, 1346, '<img src=\"./image/choice/1346.4.jpg\"/>', 0, 0),
(5, 626, 'I only', 1, 1),
(6, 626, 'I and II', 0, 0),
(7, 626, 'II and III', 0, 0),
(8, 626, 'II only', 0, 0),
(9, 804, '(t<sub>1</sub>) > (t<sub>2</sub>)', 0, 0),
(10, 804, '(t<sub>1</sub>) = (t<sub>2</sub>)', 0, 0),
(11, 804, '(t<sub>1</sub>) < (t<sub>2</sub>)', 1, 1),
(12, 804, 'Nothing can be said about the relation between t1 and t2', 0, 0),
(13, 529, 'L<sub>2</sub> and L<sub>3</sub> only', 0, 0),
(14, 529, 'L<sub>1</sub> and L<sub>2</sub> only', 0, 0),
(15, 529, 'L<sub>3</sub> only', 0, 0),
(16, 529, 'L<sub>2</sub> only', 1, 1),
(17, 968, '43 80', 1, 1),
(18, 968, '42 74', 0, 0),
(19, 968, '33 37', 0, 0),
(20, 968, '32 32', 0, 0),
(21, 844, 'LRU (Least Recently Used) ', 0, 0),
(22, 844, 'OPT (Optimal Page Replacement) ', 0, 0),
(23, 844, 'MRU (Most Recently Used) ', 0, 0),
(24, 844, 'FIFO (First In First Out)', 1, 1),
(25, 181, 'I, II and IV are inorder sequences of three different BSTs', 0, 0),
(26, 181, 'I is a preorder sequence of some BST with 439 as the root', 0, 0),
(27, 181, 'II is an inorder sequence of some BST where 121 is the root and 52 is a leaf', 1, 1),
(28, 181, 'IV is a postorder sequence of some BST with 149 as the root', 0, 0),
(29, 1295, '1100 0100 ', 1, 1),
(30, 1295, '1001 1100 ', 0, 0),
(31, 1295, '1010 0101 ', 0, 0),
(32, 1295, '1101 0101', 0, 0),
(33, 1257, '1', 0, 0),
(34, 1257, 'a’ + b’ + c’ + d’', 0, 0),
(35, 1257, 'a’ + b + c’ + d’', 1, 1),
(36, 1257, 'a’ + b’ + c + d’', 0, 0),
(37, 484, 'It is not accepted by a Turing Machine ', 0, 0),
(38, 484, 'It is regular but not context-free ', 0, 0),
(39, 484, 'It is context-free but not regular ', 0, 0),
(40, 484, 'It is neither regular nor context-free, but accepted by a Turing machine ', 1, 1),
(41, 573, '(a* + b* + c*)*', 0, 0),
(42, 573, '(a*b*c*)*', 0, 0),
(43, 573, '((ab)* + c*)*', 1, 1),
(44, 573, '(a*b* + c*)*', 0, 0),
(45, 587, 'P3 is decidable if P1 is reducible to P3 ', 0, 0),
(46, 587, 'P3 is undecidable if P3 is reducible to P2', 0, 0),
(47, 587, 'P3 is undecidable if P2 is reducible to P3', 1, 0),
(48, 587, 'P3 is decidable if P3 is reducible to P2\'s complement ', 0, 0),
(49, 1119, 'List of all vertices adjacent to a given vertex ', 0, 0),
(50, 1119, 'List all vertices which have self loops ', 0, 0),
(51, 1119, 'List all vertices which belong to cycles of less than three vertices ', 0, 0),
(52, 1119, 'List all vertices reachable from a given vertex ', 1, 0),
(53, 52, 'O(log n)', 0, 0),
(54, 52, 'O(n)', 1, 1),
(55, 52, 'O(n log n)', 0, 0),
(56, 52, 'O(n<sup>2</sup>)', 0, 0),
(57, 241, '<img src=\"./image/choice/241.1.jpg\"/><br/>', 0, 0),
(58, 241, '<img src=\"./image/choice/241.2.jpg\"/><br/>', 1, 0),
(59, 241, '<img src=\"./image/choice/241.3.jpg\"/><br/>', 0, 1),
(60, 241, 'None of the above', 0, 0),
(61, 530, 'L1 = L2', 1, 1),
(62, 530, 'L1 ⊂ L2', 0, 0),
(63, 530, 'L1 ∩ L2‘ = ∅', 1, 1),
(64, 530, 'L1 ∪ L2 ≠ L1', 0, 0),
(65, 1064, 'I', 0, 0),
(66, 1064, 'II', 0, 1),
(67, 1064, 'III', 1, 1),
(68, 1064, 'IV', 0, 0),
(69, 1022, ' Undo T3, T1; Redo T2 ', 1, 1),
(70, 1022, 'Undo T3, T1; Redo T2, T4 ', 0, 0),
(71, 1022, 'Undo: none; redo: T2, T4, T3, T1 ', 0, 0),
(72, 1022, 'Undo T3, T1; T4; Redo: T2 ', 0, 0),
(73, 1454, 'T (n) ≤ 2T (n /5)   n', 0, 0),
(74, 1454, 'T (n) ≤ T (n /5)   T (4n /5)   n', 0, 0),
(75, 1454, 'T (n) ≤ 2T (4n /5)   n', 1, 1),
(76, 1454, 'T (n) ≤ 2T (n /2)   n', 0, 0),
(77, 1065, 'non-key and ordering ', 1, 1),
(78, 1065, 'non-key and non-ordering ', 0, 0),
(79, 1065, 'key and ordering ', 0, 0),
(80, 1065, 'key and non-ordering ', 0, 0),
(81, 1012, 'the lengths of the paths from the root to all leaf nodes are all equal. ', 1, 1),
(82, 1012, 'the lengths of the paths from the root to all leaf nodes differ from each other by at most 1. ', 0, 0),
(83, 1012, 'the number of children of any two non-leaf sibling nodes differ by at most 1. ', 0, 0),
(84, 1012, 'the number of records in any two leaf nodes differ by at most 1.', 0, 0),
(85, 888, 'P→(ii), Q→(iv), R→(i), S→(iii)', 1, 1),
(86, 888, 'P→(ii), Q→(i), R→(iv), S→(iii)', 0, 0),
(87, 888, 'P→(ii), Q→(iv), R→(iii), S→(i)', 0, 0),
(88, 888, 'P→(iii), Q→(iv), R→(i), S→(ii)', 0, 0),
(89, 275, 'i-1', 0, 0),
(90, 275, '⌊i/2⌋', 1, 1),
(91, 275, '⌈i/2⌉', 0, 0),
(92, 275, '(i+1)/2', 0, 0),
(93, 793, 'I', 1, 1),
(94, 793, 'II', 0, 1),
(95, 793, 'III', 0, 0),
(96, 793, 'IV', 0, 0),
(97, 565, 'M does not halt on any string in (0 1)<sup> </sup> ', 1, 0),
(98, 565, 'M does not halt on any string in (00 1)*', 0, 0),
(99, 565, 'M halts on all strings ending in a 0 ', 0, 0),
(100, 565, 'M halts on all strings ending in a 1 ', 0, 0),
(101, 1230, '<img src=\"./image/choice/1230.1.jpg\"/>', 1, 1),
(102, 1230, '<img src=\"./image/choice/1230.2.jpg\"/>', 0, 0),
(103, 1230, '<img src=\"./image/choice/1230.3.jpg\"/>', 0, 0),
(104, 1230, '<img src=\"./image/choice/1230.4.jpg\"/>', 0, 0),
(105, 544, 'Every finite subset of a non-regular set is regular', 0, 0),
(106, 544, 'Every subset of a regular set is regular', 1, 1),
(107, 544, 'Every finite subset of a regular set is regular', 0, 0),
(108, 544, 'The intersection of two regular sets is regular', 0, 0),
(109, 1164, '1111 1111 1110 0100', 1, 1),
(110, 1164, '1111 1111 0001 1100', 0, 0),
(111, 1164, '0000 0000 1110 0100', 0, 0),
(112, 1164, '1000 0000 1110 0100', 0, 0),
(113, 921, 'Θ(n<sup>2</sup>) ', 0, 0),
(114, 921, 'Θ(n<sup>2</sup> log n)', 1, 0),
(115, 921, 'Θ(n<sup>3</sup>) ', 0, 0),
(116, 921, 'Θ(n<sup>3</sup> logn)', 0, 0),
(117, 9, '⦵(log<sub>a</sub> log<sub>b</sub>n)', 1, 1),
(118, 9, '⦵(log<sub>b</sub> log<sub>a</sub>n)', 0, 0),
(119, 9, '⦵(log<sub>2</sub> log<sub>2</sub>n)', 0, 0),
(120, 9, '⦵(log<sub>ab</sub>n)', 0, 0),
(121, 475, '(0 * 10 * 1)* ', 0, 0),
(122, 475, '0 * (10 * 10*)* ', 1, 1),
(123, 475, '0*(10 * 1*)*0*', 0, 0),
(124, 475, '0 * 1(10 * 1)*10*', 0, 0),
(125, 465, 'I', 0, 1),
(126, 465, 'II', 1, 0),
(127, 465, 'III', 1, 0),
(128, 465, 'IV', 0, 1),
(129, 857, ' First Come First Serve ', 0, 0),
(130, 857, 'Non-preemptive Shortest Job First', 0, 0),
(131, 857, 'Shortest Remaining Time ', 1, 1),
(132, 857, 'Round Robin with Quantum value two ', 0, 0),
(133, 194, 'd[u] < d[v]', 0, 0),
(134, 194, 'd[u] < f[v]', 0, 0),
(135, 194, 'f[u] < f[v]', 0, 0),
(136, 194, 'f[u] > f[v]', 1, 0),
(137, 408, 'L<sub>1</sub>', 1, 1),
(138, 408, 'L<sub>2</sub>', 0, 1),
(139, 408, 'L<sub>3</sub>', 1, 0),
(140, 408, 'L<sub>4</sub>', 1, 1),
(141, 1264, 'g<sub>0</sub>(h<sub>3</sub>h<sub>2</sub>h<sub>1</sub>h<sub>0</sub>) = Σ(1,2,3,6,10,13,14,15)', 0, 0),
(142, 1264, 'g<sub>1</sub>(h<sub>3</sub>h<sub>2</sub>h<sub>1</sub>h<sub>0</sub>) = Σ(4,9,10,11,12,13,14,15)', 0, 0),
(143, 1264, 'g<sub>2</sub>(h<sub>3</sub>h<sub>2</sub>h<sub>1</sub>h<sub>0</sub>) = Σ(2,4,5,6,7,12,13,15)', 1, 0),
(144, 1264, 'g<sub>3</sub>(h<sub>3</sub>h<sub>2</sub>h<sub>1</sub>h<sub>0</sub>) = Σ(0,1,6,7,10,11,12,13) ', 0, 0),
(145, 1348, 'X = 1.0, Y = 1.0 ', 0, 0),
(146, 1348, 'X = 1.0, Y = 0.0 ', 1, 0),
(147, 1348, 'X = 0.0, Y = 1.0 ', 0, 0),
(148, 1348, 'X = 0.0, Y = 0.0 ', 0, 0),
(149, 440, 'Both G1 and G2', 1, 1),
(150, 440, 'Only G1 ', 0, 0),
(151, 440, 'Only G2 ', 0, 0),
(152, 440, 'Neither G1 nor G2', 0, 0),
(153, 1279, '1AF ', 1, 1),
(154, 1279, 'D78', 0, 0),
(155, 1279, 'D71', 0, 0),
(156, 1279, '32F ', 0, 0),
(157, 1109, 'do not supply any item', 0, 0),
(158, 1109, 'supply exactly one item', 0, 0),
(159, 1109, 'supply one or more items', 0, 0),
(160, 1109, 'supply two or more items', 1, 0),
(161, 646, 'closed under union ', 1, 1),
(162, 646, 'closed under complementation ', 0, 0),
(163, 646, 'closed under intersection ', 0, 0),
(164, 646, 'closed under Kleene closure ', 1, 1);

-- --------------------------------------------------------

--
-- Table structure for table `testna`
--

CREATE TABLE `testna` (
  `id` int NOT NULL,
  `q_id` int DEFAULT NULL,
  `start` float DEFAULT NULL,
  `end` float DEFAULT NULL,
  `selected` float DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

--
-- Dumping data for table `testna`
--

INSERT INTO `testna` (`id`, `q_id`, `start`, `end`, `selected`) VALUES
(1, 166, 3, 2, 3),
(2, 847, 7, 7, 7),
(3, 727, 1.155, 1.155, NULL),
(4, 876, 55, 55, 55),
(5, 849, 12, 12, NULL),
(6, 445, 3, 3, 5),
(7, 1447, 505037, 505037, NULL),
(8, 534, 15, 15, 15),
(9, 187, 5, 5, 5);

-- --------------------------------------------------------

--
-- Table structure for table `topic`
--

CREATE TABLE `topic` (
  `topic_id` int NOT NULL,
  `topic_name` char(50) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

--
-- Dumping data for table `topic`
--

INSERT INTO `topic` (`topic_id`, `topic_name`) VALUES
(1, 'Process Scheduling'),
(2, 'Synchronization'),
(3, 'Dynamic Programming'),
(4, 'Greedy Algorithm'),
(5, 'Sorting'),
(6, 'Searching'),
(7, 'graph'),
(8, 'Recurrence'),
(9, 'Minimum Spanning Tree'),
(10, 'Knapsack'),
(11, 'Asymptotic-Complexity'),
(12, 'mix'),
(13, 'Huffman-Code'),
(14, 'Matrix-Chain-Multiplication'),
(15, 'Algorithm-Paradigms'),
(16, 'Secondary-Storage'),
(17, 'Merge-Sort'),
(18, 'Quick-Sort'),
(19, 'Heap'),
(20, 'General'),
(21, 'Tree Traversal'),
(22, 'Binary-Search-Tree'),
(23, 'Hashing'),
(24, 'Trees'),
(25, 'Regular Languages and Finite Automata'),
(26, 'C Programming'),
(27, 'P-NP'),
(28, 'stack'),
(29, 'Function Calling'),
(30, 'File System'),
(31, 'Linked List'),
(32, 'Queue'),
(33, 'TCP'),
(34, 'Array'),
(35, 'Pipelining'),
(36, 'Memory Management'),
(37, 'Switching Algebra'),
(38, 'Data Structure'),
(39, 'compiler'),
(40, 'Parser'),
(41, 'SDT'),
(42, 'Lexical Analyser'),
(43, 'Intermediate Code'),
(44, 'Target Code Generator'),
(45, 'Recurrence Relation'),
(46, 'Live Variable'),
(47, 'Code Optamization'),
(48, 'Turing Machine'),
(49, 'Formal Language'),
(50, 'Finite Automata'),
(51, 'Context Free Grammar'),
(52, 'Page Replacement Algorithm'),
(53, 'Run Time Environment'),
(54, 'Pumping Lemma'),
(55, 'Countability & Decidability'),
(56, 'P & NP'),
(57, 'Probability'),
(58, 'Combinatrics'),
(59, 'Linear Algebra'),
(60, 'Deadlock'),
(61, 'ER Diagram'),
(62, 'Combinational Circuit'),
(63, 'Prepositional Logic'),
(64, 'Addressing modes'),
(65, 'CPU, Data Path and ALU'),
(66, 'Routing'),
(67, 'Boolean Algebra'),
(68, 'Virtual Memory'),
(69, 'System Call'),
(70, 'Transaction & Concurrency Protocol'),
(71, 'Input Output'),
(72, 'MySQL'),
(73, 'Relational Algebra & Relation Calculus'),
(74, 'normalization'),
(75, 'number system'),
(76, 'Logic Gate'),
(77, 'Sequential Circuit');

--
-- Indexes for dumped tables
--

--
-- Indexes for table `choice`
--
ALTER TABLE `choice`
  ADD PRIMARY KEY (`id`),
  ADD KEY `q_id` (`q_id`);

--
-- Indexes for table `na_range`
--
ALTER TABLE `na_range`
  ADD PRIMARY KEY (`q_id`);

--
-- Indexes for table `question`
--
ALTER TABLE `question`
  ADD PRIMARY KEY (`q_id`),
  ADD KEY `sub_id` (`sub_id`),
  ADD KEY `topic_id` (`topic_id`);

--
-- Indexes for table `subject`
--
ALTER TABLE `subject`
  ADD PRIMARY KEY (`sub_id`);

--
-- Indexes for table `test`
--
ALTER TABLE `test`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `testchoice`
--
ALTER TABLE `testchoice`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `testna`
--
ALTER TABLE `testna`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `topic`
--
ALTER TABLE `topic`
  ADD PRIMARY KEY (`topic_id`);

--
-- AUTO_INCREMENT for dumped tables
--

--
-- AUTO_INCREMENT for table `choice`
--
ALTER TABLE `choice`
  MODIFY `id` int NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=4596;

--
-- AUTO_INCREMENT for table `question`
--
ALTER TABLE `question`
  MODIFY `q_id` int NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=1463;

--
-- AUTO_INCREMENT for table `subject`
--
ALTER TABLE `subject`
  MODIFY `sub_id` int NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=13;

--
-- AUTO_INCREMENT for table `test`
--
ALTER TABLE `test`
  MODIFY `id` int NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=51;

--
-- AUTO_INCREMENT for table `testchoice`
--
ALTER TABLE `testchoice`
  MODIFY `id` int NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=165;

--
-- AUTO_INCREMENT for table `testna`
--
ALTER TABLE `testna`
  MODIFY `id` int NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=10;

--
-- AUTO_INCREMENT for table `topic`
--
ALTER TABLE `topic`
  MODIFY `topic_id` int NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=78;

--
-- Constraints for dumped tables
--

--
-- Constraints for table `choice`
--
ALTER TABLE `choice`
  ADD CONSTRAINT `choice_ibfk_1` FOREIGN KEY (`q_id`) REFERENCES `question` (`q_id`) ON DELETE CASCADE ON UPDATE CASCADE;

--
-- Constraints for table `na_range`
--
ALTER TABLE `na_range`
  ADD CONSTRAINT `na_range_ibfk_1` FOREIGN KEY (`q_id`) REFERENCES `question` (`q_id`) ON DELETE CASCADE ON UPDATE CASCADE;

--
-- Constraints for table `question`
--
ALTER TABLE `question`
  ADD CONSTRAINT `question_ibfk_1` FOREIGN KEY (`sub_id`) REFERENCES `subject` (`sub_id`) ON DELETE CASCADE ON UPDATE CASCADE,
  ADD CONSTRAINT `question_ibfk_2` FOREIGN KEY (`topic_id`) REFERENCES `topic` (`topic_id`) ON DELETE CASCADE ON UPDATE CASCADE;
COMMIT;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
